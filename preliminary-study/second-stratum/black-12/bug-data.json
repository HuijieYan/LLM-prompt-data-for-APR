{
    "black:12": {
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/black/black.py": {
            "buggy_functions": [
                {
                    "function_name": null,
                    "function_code": null,
                    "decorators": [],
                    "docstring": null,
                    "start_line": null,
                    "variables": {},
                    "filtered_variables": {},
                    "diff_line_number": 880,
                    "class_data": {
                        "signature": "class BracketTracker()",
                        "docstring": "Keeps track of brackets on a line.",
                        "constructor_docstring": null,
                        "functions": [
                            "def mark(self, leaf: Leaf) -> None:\n    \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n\n    All leaves receive an int `bracket_depth` field that stores how deep\n    within brackets a given leaf is. 0 means there are no enclosing brackets\n    that started on this line.\n\n    If a leaf is itself a closing bracket, it receives an `opening_bracket`\n    field that it forms a pair with. This is a one-directional link to\n    avoid reference cycles.\n\n    If a leaf is a delimiter (a token on which Black can split the line if\n    needed) and it's on depth 0, its `id()` is stored in the tracker's\n    `delimiters` field.\n    \"\"\"\n    if leaf.type == token.COMMENT:\n        return\n    self.maybe_decrement_after_for_loop_variable(leaf)\n    self.maybe_decrement_after_lambda_arguments(leaf)\n    if leaf.type in CLOSING_BRACKETS:\n        self.depth -= 1\n        opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\n        leaf.opening_bracket = opening_bracket\n    leaf.bracket_depth = self.depth\n    if self.depth == 0:\n        delim = is_split_before_delimiter(leaf, self.previous)\n        if delim and self.previous is not None:\n            self.delimiters[id(self.previous)] = delim\n        else:\n            delim = is_split_after_delimiter(leaf, self.previous)\n            if delim:\n                self.delimiters[id(leaf)] = delim\n    if leaf.type in OPENING_BRACKETS:\n        self.bracket_match[self.depth, BRACKET[leaf.type]] = leaf\n        self.depth += 1\n    self.previous = leaf\n    self.maybe_increment_lambda_arguments(leaf)\n    self.maybe_increment_for_loop_variable(leaf)",
                            "def any_open_brackets(self) -> bool:\n    \"\"\"Return True if there is an yet unmatched open bracket on the line.\"\"\"\n    return bool(self.bracket_match)",
                            "def max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int:\n    \"\"\"Return the highest priority of a delimiter found on the line.\n\n    Values are consistent with what `is_split_*_delimiter()` return.\n    Raises ValueError on no delimiters.\n    \"\"\"\n    return max((v for k, v in self.delimiters.items() if k not in exclude))",
                            "def delimiter_count_with_priority(self, priority: int=0) -> int:\n    \"\"\"Return the number of delimiters with the given `priority`.\n\n    If no `priority` is passed, defaults to max priority on the line.\n    \"\"\"\n    if not self.delimiters:\n        return 0\n    priority = priority or self.max_delimiter_priority()\n    return sum((1 for p in self.delimiters.values() if p == priority))",
                            "def maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"In a for loop, or comprehension, the variables are often unpacks.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `for` and `in`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'for':\n        self.depth += 1\n        self._for_loop_variable += 1\n        return True\n    return False",
                            "def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_for_loop_variable` above for explanation.\"\"\"\n    if self._for_loop_variable and leaf.type == token.NAME and (leaf.value == 'in'):\n        self.depth -= 1\n        self._for_loop_variable -= 1\n        return True\n    return False",
                            "def maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"In a lambda expression, there might be more than one argument.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `lambda` and `:`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'lambda':\n        self.depth += 1\n        self._lambda_arguments += 1\n        return True\n    return False",
                            "def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_lambda_arguments` above for explanation.\"\"\"\n    if self._lambda_arguments and leaf.type == token.COLON:\n        self.depth -= 1\n        self._lambda_arguments -= 1\n        return True\n    return False",
                            "def get_open_lsqb(self) -> Optional[Leaf]:\n    \"\"\"Return the most recent opening square bracket (if any).\"\"\"\n    return self.bracket_match.get((self.depth - 1, token.RSQB))"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "depth",
                            "bracket_match",
                            "delimiters",
                            "previous",
                            "_for_loop_variable",
                            "_lambda_arguments"
                        ],
                        "class_decorators": [
                            "dataclass"
                        ],
                        "function_signatures": [
                            "mark(self, leaf: Leaf) -> None",
                            "any_open_brackets(self) -> bool",
                            "max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int",
                            "delimiter_count_with_priority(self, priority: int=0) -> int",
                            "maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool",
                            "get_open_lsqb(self) -> Optional[Leaf]"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {},
                            {}
                        ]
                    ]
                },
                {
                    "function_name": "maybe_increment_for_loop_variable",
                    "function_code": "def maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"In a for loop, or comprehension, the variables are often unpacks.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `for` and `in`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == \"for\":\n        self.depth += 1\n        self._for_loop_variable += 1\n        return True\n\n    return False\n",
                    "decorators": [],
                    "docstring": "In a for loop, or comprehension, the variables are often unpacks.\n\nTo avoid splitting on the comma in this situation, increase the depth of\ntokens between `for` and `in`.",
                    "start_line": 946,
                    "variables": {
                        "Leaf": [
                            946
                        ],
                        "leaf.type": [
                            952
                        ],
                        "leaf": [
                            952
                        ],
                        "token.NAME": [
                            952
                        ],
                        "token": [
                            952
                        ],
                        "leaf.value": [
                            952
                        ],
                        "self.depth": [
                            953
                        ],
                        "self": [
                            953,
                            954
                        ],
                        "self._for_loop_variable": [
                            954
                        ],
                        "bool": [
                            946
                        ]
                    },
                    "filtered_variables": {
                        "Leaf": [
                            946
                        ],
                        "leaf.type": [
                            952
                        ],
                        "leaf": [
                            952
                        ],
                        "token.NAME": [
                            952
                        ],
                        "token": [
                            952
                        ],
                        "leaf.value": [
                            952
                        ],
                        "self.depth": [
                            953
                        ],
                        "self": [
                            953,
                            954
                        ],
                        "self._for_loop_variable": [
                            954
                        ]
                    },
                    "diff_line_number": 954,
                    "class_data": {
                        "signature": "class BracketTracker()",
                        "docstring": "Keeps track of brackets on a line.",
                        "constructor_docstring": null,
                        "functions": [
                            "def mark(self, leaf: Leaf) -> None:\n    \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n\n    All leaves receive an int `bracket_depth` field that stores how deep\n    within brackets a given leaf is. 0 means there are no enclosing brackets\n    that started on this line.\n\n    If a leaf is itself a closing bracket, it receives an `opening_bracket`\n    field that it forms a pair with. This is a one-directional link to\n    avoid reference cycles.\n\n    If a leaf is a delimiter (a token on which Black can split the line if\n    needed) and it's on depth 0, its `id()` is stored in the tracker's\n    `delimiters` field.\n    \"\"\"\n    if leaf.type == token.COMMENT:\n        return\n    self.maybe_decrement_after_for_loop_variable(leaf)\n    self.maybe_decrement_after_lambda_arguments(leaf)\n    if leaf.type in CLOSING_BRACKETS:\n        self.depth -= 1\n        opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\n        leaf.opening_bracket = opening_bracket\n    leaf.bracket_depth = self.depth\n    if self.depth == 0:\n        delim = is_split_before_delimiter(leaf, self.previous)\n        if delim and self.previous is not None:\n            self.delimiters[id(self.previous)] = delim\n        else:\n            delim = is_split_after_delimiter(leaf, self.previous)\n            if delim:\n                self.delimiters[id(leaf)] = delim\n    if leaf.type in OPENING_BRACKETS:\n        self.bracket_match[self.depth, BRACKET[leaf.type]] = leaf\n        self.depth += 1\n    self.previous = leaf\n    self.maybe_increment_lambda_arguments(leaf)\n    self.maybe_increment_for_loop_variable(leaf)",
                            "def any_open_brackets(self) -> bool:\n    \"\"\"Return True if there is an yet unmatched open bracket on the line.\"\"\"\n    return bool(self.bracket_match)",
                            "def max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int:\n    \"\"\"Return the highest priority of a delimiter found on the line.\n\n    Values are consistent with what `is_split_*_delimiter()` return.\n    Raises ValueError on no delimiters.\n    \"\"\"\n    return max((v for k, v in self.delimiters.items() if k not in exclude))",
                            "def delimiter_count_with_priority(self, priority: int=0) -> int:\n    \"\"\"Return the number of delimiters with the given `priority`.\n\n    If no `priority` is passed, defaults to max priority on the line.\n    \"\"\"\n    if not self.delimiters:\n        return 0\n    priority = priority or self.max_delimiter_priority()\n    return sum((1 for p in self.delimiters.values() if p == priority))",
                            "def maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"In a for loop, or comprehension, the variables are often unpacks.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `for` and `in`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'for':\n        self.depth += 1\n        self._for_loop_variable += 1\n        return True\n    return False",
                            "def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_for_loop_variable` above for explanation.\"\"\"\n    if self._for_loop_variable and leaf.type == token.NAME and (leaf.value == 'in'):\n        self.depth -= 1\n        self._for_loop_variable -= 1\n        return True\n    return False",
                            "def maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"In a lambda expression, there might be more than one argument.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `lambda` and `:`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'lambda':\n        self.depth += 1\n        self._lambda_arguments += 1\n        return True\n    return False",
                            "def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_lambda_arguments` above for explanation.\"\"\"\n    if self._lambda_arguments and leaf.type == token.COLON:\n        self.depth -= 1\n        self._lambda_arguments -= 1\n        return True\n    return False",
                            "def get_open_lsqb(self) -> Optional[Leaf]:\n    \"\"\"Return the most recent opening square bracket (if any).\"\"\"\n    return self.bracket_match.get((self.depth - 1, token.RSQB))"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "depth",
                            "bracket_match",
                            "delimiters",
                            "previous",
                            "_for_loop_variable",
                            "_lambda_arguments"
                        ],
                        "class_decorators": [
                            "dataclass"
                        ],
                        "function_signatures": [
                            "mark(self, leaf: Leaf) -> None",
                            "any_open_brackets(self) -> bool",
                            "max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int",
                            "delimiter_count_with_priority(self, priority: int=0) -> int",
                            "maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool",
                            "get_open_lsqb(self) -> Optional[Leaf]"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._for_loop_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "maybe_decrement_after_for_loop_variable",
                    "function_code": "def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_for_loop_variable` above for explanation.\"\"\"\n    if self._for_loop_variable and leaf.type == token.NAME and leaf.value == \"in\":\n        self.depth -= 1\n        self._for_loop_variable -= 1\n        return True\n\n    return False\n",
                    "decorators": [],
                    "docstring": "See `maybe_increment_for_loop_variable` above for explanation.",
                    "start_line": 959,
                    "variables": {
                        "Leaf": [
                            959
                        ],
                        "self._for_loop_variable": [
                            961,
                            963
                        ],
                        "self": [
                            961,
                            962,
                            963
                        ],
                        "leaf.type": [
                            961
                        ],
                        "leaf": [
                            961
                        ],
                        "token.NAME": [
                            961
                        ],
                        "token": [
                            961
                        ],
                        "leaf.value": [
                            961
                        ],
                        "self.depth": [
                            962
                        ],
                        "bool": [
                            959
                        ]
                    },
                    "filtered_variables": {
                        "Leaf": [
                            959
                        ],
                        "self._for_loop_variable": [
                            961,
                            963
                        ],
                        "self": [
                            961,
                            962,
                            963
                        ],
                        "leaf.type": [
                            961
                        ],
                        "leaf": [
                            961
                        ],
                        "token.NAME": [
                            961
                        ],
                        "token": [
                            961
                        ],
                        "leaf.value": [
                            961
                        ],
                        "self.depth": [
                            962
                        ]
                    },
                    "diff_line_number": 961,
                    "class_data": {
                        "signature": "class BracketTracker()",
                        "docstring": "Keeps track of brackets on a line.",
                        "constructor_docstring": null,
                        "functions": [
                            "def mark(self, leaf: Leaf) -> None:\n    \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n\n    All leaves receive an int `bracket_depth` field that stores how deep\n    within brackets a given leaf is. 0 means there are no enclosing brackets\n    that started on this line.\n\n    If a leaf is itself a closing bracket, it receives an `opening_bracket`\n    field that it forms a pair with. This is a one-directional link to\n    avoid reference cycles.\n\n    If a leaf is a delimiter (a token on which Black can split the line if\n    needed) and it's on depth 0, its `id()` is stored in the tracker's\n    `delimiters` field.\n    \"\"\"\n    if leaf.type == token.COMMENT:\n        return\n    self.maybe_decrement_after_for_loop_variable(leaf)\n    self.maybe_decrement_after_lambda_arguments(leaf)\n    if leaf.type in CLOSING_BRACKETS:\n        self.depth -= 1\n        opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\n        leaf.opening_bracket = opening_bracket\n    leaf.bracket_depth = self.depth\n    if self.depth == 0:\n        delim = is_split_before_delimiter(leaf, self.previous)\n        if delim and self.previous is not None:\n            self.delimiters[id(self.previous)] = delim\n        else:\n            delim = is_split_after_delimiter(leaf, self.previous)\n            if delim:\n                self.delimiters[id(leaf)] = delim\n    if leaf.type in OPENING_BRACKETS:\n        self.bracket_match[self.depth, BRACKET[leaf.type]] = leaf\n        self.depth += 1\n    self.previous = leaf\n    self.maybe_increment_lambda_arguments(leaf)\n    self.maybe_increment_for_loop_variable(leaf)",
                            "def any_open_brackets(self) -> bool:\n    \"\"\"Return True if there is an yet unmatched open bracket on the line.\"\"\"\n    return bool(self.bracket_match)",
                            "def max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int:\n    \"\"\"Return the highest priority of a delimiter found on the line.\n\n    Values are consistent with what `is_split_*_delimiter()` return.\n    Raises ValueError on no delimiters.\n    \"\"\"\n    return max((v for k, v in self.delimiters.items() if k not in exclude))",
                            "def delimiter_count_with_priority(self, priority: int=0) -> int:\n    \"\"\"Return the number of delimiters with the given `priority`.\n\n    If no `priority` is passed, defaults to max priority on the line.\n    \"\"\"\n    if not self.delimiters:\n        return 0\n    priority = priority or self.max_delimiter_priority()\n    return sum((1 for p in self.delimiters.values() if p == priority))",
                            "def maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"In a for loop, or comprehension, the variables are often unpacks.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `for` and `in`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'for':\n        self.depth += 1\n        self._for_loop_variable += 1\n        return True\n    return False",
                            "def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_for_loop_variable` above for explanation.\"\"\"\n    if self._for_loop_variable and leaf.type == token.NAME and (leaf.value == 'in'):\n        self.depth -= 1\n        self._for_loop_variable -= 1\n        return True\n    return False",
                            "def maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"In a lambda expression, there might be more than one argument.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `lambda` and `:`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'lambda':\n        self.depth += 1\n        self._lambda_arguments += 1\n        return True\n    return False",
                            "def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_lambda_arguments` above for explanation.\"\"\"\n    if self._lambda_arguments and leaf.type == token.COLON:\n        self.depth -= 1\n        self._lambda_arguments -= 1\n        return True\n    return False",
                            "def get_open_lsqb(self) -> Optional[Leaf]:\n    \"\"\"Return the most recent opening square bracket (if any).\"\"\"\n    return self.bracket_match.get((self.depth - 1, token.RSQB))"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "depth",
                            "bracket_match",
                            "delimiters",
                            "previous",
                            "_for_loop_variable",
                            "_lambda_arguments"
                        ],
                        "class_decorators": [
                            "dataclass"
                        ],
                        "function_signatures": [
                            "mark(self, leaf: Leaf) -> None",
                            "any_open_brackets(self) -> bool",
                            "max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int",
                            "delimiter_count_with_priority(self, priority: int=0) -> int",
                            "maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool",
                            "get_open_lsqb(self) -> Optional[Leaf]"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_variable": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._for_loop_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self._for_loop_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "maybe_increment_lambda_arguments",
                    "function_code": "def maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"In a lambda expression, there might be more than one argument.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `lambda` and `:`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == \"lambda\":\n        self.depth += 1\n        self._lambda_arguments += 1\n        return True\n\n    return False\n",
                    "decorators": [],
                    "docstring": "In a lambda expression, there might be more than one argument.\n\nTo avoid splitting on the comma in this situation, increase the depth of\ntokens between `lambda` and `:`.",
                    "start_line": 968,
                    "variables": {
                        "Leaf": [
                            968
                        ],
                        "leaf.type": [
                            974
                        ],
                        "leaf": [
                            974
                        ],
                        "token.NAME": [
                            974
                        ],
                        "token": [
                            974
                        ],
                        "leaf.value": [
                            974
                        ],
                        "self.depth": [
                            975
                        ],
                        "self": [
                            976,
                            975
                        ],
                        "self._lambda_arguments": [
                            976
                        ],
                        "bool": [
                            968
                        ]
                    },
                    "filtered_variables": {
                        "Leaf": [
                            968
                        ],
                        "leaf.type": [
                            974
                        ],
                        "leaf": [
                            974
                        ],
                        "token.NAME": [
                            974
                        ],
                        "token": [
                            974
                        ],
                        "leaf.value": [
                            974
                        ],
                        "self.depth": [
                            975
                        ],
                        "self": [
                            976,
                            975
                        ],
                        "self._lambda_arguments": [
                            976
                        ]
                    },
                    "diff_line_number": 976,
                    "class_data": {
                        "signature": "class BracketTracker()",
                        "docstring": "Keeps track of brackets on a line.",
                        "constructor_docstring": null,
                        "functions": [
                            "def mark(self, leaf: Leaf) -> None:\n    \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n\n    All leaves receive an int `bracket_depth` field that stores how deep\n    within brackets a given leaf is. 0 means there are no enclosing brackets\n    that started on this line.\n\n    If a leaf is itself a closing bracket, it receives an `opening_bracket`\n    field that it forms a pair with. This is a one-directional link to\n    avoid reference cycles.\n\n    If a leaf is a delimiter (a token on which Black can split the line if\n    needed) and it's on depth 0, its `id()` is stored in the tracker's\n    `delimiters` field.\n    \"\"\"\n    if leaf.type == token.COMMENT:\n        return\n    self.maybe_decrement_after_for_loop_variable(leaf)\n    self.maybe_decrement_after_lambda_arguments(leaf)\n    if leaf.type in CLOSING_BRACKETS:\n        self.depth -= 1\n        opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\n        leaf.opening_bracket = opening_bracket\n    leaf.bracket_depth = self.depth\n    if self.depth == 0:\n        delim = is_split_before_delimiter(leaf, self.previous)\n        if delim and self.previous is not None:\n            self.delimiters[id(self.previous)] = delim\n        else:\n            delim = is_split_after_delimiter(leaf, self.previous)\n            if delim:\n                self.delimiters[id(leaf)] = delim\n    if leaf.type in OPENING_BRACKETS:\n        self.bracket_match[self.depth, BRACKET[leaf.type]] = leaf\n        self.depth += 1\n    self.previous = leaf\n    self.maybe_increment_lambda_arguments(leaf)\n    self.maybe_increment_for_loop_variable(leaf)",
                            "def any_open_brackets(self) -> bool:\n    \"\"\"Return True if there is an yet unmatched open bracket on the line.\"\"\"\n    return bool(self.bracket_match)",
                            "def max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int:\n    \"\"\"Return the highest priority of a delimiter found on the line.\n\n    Values are consistent with what `is_split_*_delimiter()` return.\n    Raises ValueError on no delimiters.\n    \"\"\"\n    return max((v for k, v in self.delimiters.items() if k not in exclude))",
                            "def delimiter_count_with_priority(self, priority: int=0) -> int:\n    \"\"\"Return the number of delimiters with the given `priority`.\n\n    If no `priority` is passed, defaults to max priority on the line.\n    \"\"\"\n    if not self.delimiters:\n        return 0\n    priority = priority or self.max_delimiter_priority()\n    return sum((1 for p in self.delimiters.values() if p == priority))",
                            "def maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"In a for loop, or comprehension, the variables are often unpacks.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `for` and `in`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'for':\n        self.depth += 1\n        self._for_loop_variable += 1\n        return True\n    return False",
                            "def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_for_loop_variable` above for explanation.\"\"\"\n    if self._for_loop_variable and leaf.type == token.NAME and (leaf.value == 'in'):\n        self.depth -= 1\n        self._for_loop_variable -= 1\n        return True\n    return False",
                            "def maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"In a lambda expression, there might be more than one argument.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `lambda` and `:`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'lambda':\n        self.depth += 1\n        self._lambda_arguments += 1\n        return True\n    return False",
                            "def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_lambda_arguments` above for explanation.\"\"\"\n    if self._lambda_arguments and leaf.type == token.COLON:\n        self.depth -= 1\n        self._lambda_arguments -= 1\n        return True\n    return False",
                            "def get_open_lsqb(self) -> Optional[Leaf]:\n    \"\"\"Return the most recent opening square bracket (if any).\"\"\"\n    return self.bracket_match.get((self.depth - 1, token.RSQB))"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "depth",
                            "bracket_match",
                            "delimiters",
                            "previous",
                            "_for_loop_variable",
                            "_lambda_arguments"
                        ],
                        "class_decorators": [
                            "dataclass"
                        ],
                        "function_signatures": [
                            "mark(self, leaf: Leaf) -> None",
                            "any_open_brackets(self) -> bool",
                            "max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int",
                            "delimiter_count_with_priority(self, priority: int=0) -> int",
                            "maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool",
                            "get_open_lsqb(self) -> Optional[Leaf]"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "for",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "or",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "a",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "in",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pass",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pass'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "pem_spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ",",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "not",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "spam",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "get",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "l",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ".",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "strip",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "(",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ")",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "=",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "3",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "[",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "lambda",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "y",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "{",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "1",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "2",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "}",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "]",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": ":",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.NAME": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "leaf.value": {
                                    "variable_value": "x",
                                    "variable_type": "str"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self._lambda_argument_depths.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "maybe_decrement_after_lambda_arguments",
                    "function_code": "def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_lambda_arguments` above for explanation.\"\"\"\n    if self._lambda_arguments and leaf.type == token.COLON:\n        self.depth -= 1\n        self._lambda_arguments -= 1\n        return True\n\n    return False\n",
                    "decorators": [],
                    "docstring": "See `maybe_increment_lambda_arguments` above for explanation.",
                    "start_line": 981,
                    "variables": {
                        "Leaf": [
                            981
                        ],
                        "self._lambda_arguments": [
                            985,
                            983
                        ],
                        "self": [
                            984,
                            985,
                            983
                        ],
                        "leaf.type": [
                            983
                        ],
                        "leaf": [
                            983
                        ],
                        "token.COLON": [
                            983
                        ],
                        "token": [
                            983
                        ],
                        "self.depth": [
                            984
                        ],
                        "bool": [
                            981
                        ]
                    },
                    "filtered_variables": {
                        "Leaf": [
                            981
                        ],
                        "self._lambda_arguments": [
                            985,
                            983
                        ],
                        "self": [
                            984,
                            985,
                            983
                        ],
                        "leaf.type": [
                            983
                        ],
                        "leaf": [
                            983
                        ],
                        "token.COLON": [
                            983
                        ],
                        "token": [
                            983
                        ],
                        "self.depth": [
                            984
                        ]
                    },
                    "diff_line_number": 983,
                    "class_data": {
                        "signature": "class BracketTracker()",
                        "docstring": "Keeps track of brackets on a line.",
                        "constructor_docstring": null,
                        "functions": [
                            "def mark(self, leaf: Leaf) -> None:\n    \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n\n    All leaves receive an int `bracket_depth` field that stores how deep\n    within brackets a given leaf is. 0 means there are no enclosing brackets\n    that started on this line.\n\n    If a leaf is itself a closing bracket, it receives an `opening_bracket`\n    field that it forms a pair with. This is a one-directional link to\n    avoid reference cycles.\n\n    If a leaf is a delimiter (a token on which Black can split the line if\n    needed) and it's on depth 0, its `id()` is stored in the tracker's\n    `delimiters` field.\n    \"\"\"\n    if leaf.type == token.COMMENT:\n        return\n    self.maybe_decrement_after_for_loop_variable(leaf)\n    self.maybe_decrement_after_lambda_arguments(leaf)\n    if leaf.type in CLOSING_BRACKETS:\n        self.depth -= 1\n        opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\n        leaf.opening_bracket = opening_bracket\n    leaf.bracket_depth = self.depth\n    if self.depth == 0:\n        delim = is_split_before_delimiter(leaf, self.previous)\n        if delim and self.previous is not None:\n            self.delimiters[id(self.previous)] = delim\n        else:\n            delim = is_split_after_delimiter(leaf, self.previous)\n            if delim:\n                self.delimiters[id(leaf)] = delim\n    if leaf.type in OPENING_BRACKETS:\n        self.bracket_match[self.depth, BRACKET[leaf.type]] = leaf\n        self.depth += 1\n    self.previous = leaf\n    self.maybe_increment_lambda_arguments(leaf)\n    self.maybe_increment_for_loop_variable(leaf)",
                            "def any_open_brackets(self) -> bool:\n    \"\"\"Return True if there is an yet unmatched open bracket on the line.\"\"\"\n    return bool(self.bracket_match)",
                            "def max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int:\n    \"\"\"Return the highest priority of a delimiter found on the line.\n\n    Values are consistent with what `is_split_*_delimiter()` return.\n    Raises ValueError on no delimiters.\n    \"\"\"\n    return max((v for k, v in self.delimiters.items() if k not in exclude))",
                            "def delimiter_count_with_priority(self, priority: int=0) -> int:\n    \"\"\"Return the number of delimiters with the given `priority`.\n\n    If no `priority` is passed, defaults to max priority on the line.\n    \"\"\"\n    if not self.delimiters:\n        return 0\n    priority = priority or self.max_delimiter_priority()\n    return sum((1 for p in self.delimiters.values() if p == priority))",
                            "def maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"In a for loop, or comprehension, the variables are often unpacks.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `for` and `in`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'for':\n        self.depth += 1\n        self._for_loop_variable += 1\n        return True\n    return False",
                            "def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_for_loop_variable` above for explanation.\"\"\"\n    if self._for_loop_variable and leaf.type == token.NAME and (leaf.value == 'in'):\n        self.depth -= 1\n        self._for_loop_variable -= 1\n        return True\n    return False",
                            "def maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"In a lambda expression, there might be more than one argument.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `lambda` and `:`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == 'lambda':\n        self.depth += 1\n        self._lambda_arguments += 1\n        return True\n    return False",
                            "def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_lambda_arguments` above for explanation.\"\"\"\n    if self._lambda_arguments and leaf.type == token.COLON:\n        self.depth -= 1\n        self._lambda_arguments -= 1\n        return True\n    return False",
                            "def get_open_lsqb(self) -> Optional[Leaf]:\n    \"\"\"Return the most recent opening square bracket (if any).\"\"\"\n    return self.bracket_match.get((self.depth - 1, token.RSQB))"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "depth",
                            "bracket_match",
                            "delimiters",
                            "previous",
                            "_for_loop_variable",
                            "_lambda_arguments"
                        ],
                        "class_decorators": [
                            "dataclass"
                        ],
                        "function_signatures": [
                            "mark(self, leaf: Leaf) -> None",
                            "any_open_brackets(self) -> bool",
                            "max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int",
                            "delimiter_count_with_priority(self, priority: int=0) -> int",
                            "maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool",
                            "maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool",
                            "maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool",
                            "get_open_lsqb(self) -> Optional[Leaf]"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_variable=1, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '('), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, ''), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(3, 8): Leaf(LPAR, '('), (1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_arguments": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)",
                                    "variable_type": "BracketTracker"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'for')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'for'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=5, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '('), (4, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "5",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'or')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'or'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=4, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '('), (3, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "4",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"a\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 8): Leaf(LPAR, ''), (2, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"a\"'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[1], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'in')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'in'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pass')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'pem_spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'pem_spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(LPAR, ''), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "12",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COMMA, ',')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COMMA, ','), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'not')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'not'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'spam')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'spam'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'get')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(NAME, 'get'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'l')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'l'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "23",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(DOT, '.')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(DOT, '.'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'strip')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(NAME, 'strip'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "7",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LPAR, '(')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '('), (2, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(LPAR, '('), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(0, 8): Leaf(LPAR, ''), (1, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, ')')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={(0, 8): Leaf(LPAR, '')}, delimiters={}, previous=Leaf(RPAR, ')'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "8",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RPAR, '')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=None, _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'x'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "22",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(EQUAL, '=')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(EQUAL, '='), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '3')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '3'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 2]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1, 2])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "9",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LSQB, '[')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(LSQB, '['), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(STRING, '\"x\"')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(STRING, '\"x\"'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'lambda')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'lambda'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'y')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1, 3]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1, 3])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(NAME, 'y'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "26",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(LBRACE, '{')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(LBRACE, '{'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '1')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '1'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NUMBER, '2')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=3, bracket_match={(1, 10): Leaf(LSQB, '['), (2, 27): Leaf(LBRACE, '{')}, delimiters={}, previous=Leaf(NUMBER, '2'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "3",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "27",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RBRACE, '}')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=2, bracket_match={(1, 10): Leaf(LSQB, '[')}, delimiters={}, previous=Leaf(RBRACE, '}'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "2",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "10",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(RSQB, ']')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[1]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=1, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[1])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "11",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(COLON, ':')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ],
                        [
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            },
                            {
                                "Leaf": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths": {
                                    "variable_value": "[]",
                                    "variable_type": "list"
                                },
                                "self": {
                                    "variable_value": "BracketTracker(depth=0, bracket_match={}, delimiters={}, previous=Leaf(COLON, ':'), _for_loop_depths=[], _lambda_argument_depths=[])",
                                    "variable_type": "BracketTracker"
                                },
                                "self.depth": {
                                    "variable_value": "0",
                                    "variable_type": "int"
                                },
                                "leaf.type": {
                                    "variable_value": "1",
                                    "variable_type": "int"
                                },
                                "leaf": {
                                    "variable_value": "Leaf(NAME, 'x')",
                                    "variable_type": "Leaf"
                                },
                                "token.COLON": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "token": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self._lambda_argument_depths.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def read_pyproject_toml(\n    ctx: click.Context, param: click.Parameter, value: Union[str, int, bool, None]\n) -> Optional[str]:\n    \"\"\"Inject Black configuration from \"pyproject.toml\" into defaults in `ctx`.\n\n    Returns the path to a successfully found and read configuration file, None\n    otherwise.\n    \"\"\"\n    assert not isinstance(value, (int, bool)), \"Invalid parameter type passed\"\n    if not value:\n        root = find_project_root(ctx.params.get(\"src\", ()))\n        path = root / \"pyproject.toml\"\n        if path.is_file():\n            value = str(path)\n        else:\n            return None\n\n    try:\n        pyproject_toml = toml.load(value)\n        config = pyproject_toml.get(\"tool\", {}).get(\"black\", {})\n    except (toml.TomlDecodeError, OSError) as e:\n        raise click.BadOptionUsage(f\"Error reading configuration file: {e}\", ctx)\n\n    if not config:\n        return None\n\n    if ctx.default_map is None:\n        ctx.default_map = {}\n    ctx.default_map.update(  # type: ignore  # bad types in .pyi\n        {k.replace(\"--\", \"\").replace(\"-\", \"_\"): v for k, v in config.items()}\n    )\n    return value",
                "@click.command(context_settings=dict(help_option_names=[\"-h\", \"--help\"]))\n@click.option(\n    \"-l\",\n    \"--line-length\",\n    type=int,\n    default=DEFAULT_LINE_LENGTH,\n    help=\"How many characters per line to allow.\",\n    show_default=True,\n)\n@click.option(\n    \"--py36\",\n    is_flag=True,\n    help=(\n        \"Allow using Python 3.6-only syntax on all input files.  This will put \"\n        \"trailing commas in function signatures and calls also after *args and \"\n        \"**kwargs.  [default: per-file auto-detection]\"\n    ),\n)\n@click.option(\n    \"--pyi\",\n    is_flag=True,\n    help=(\n        \"Format all input files like typing stubs regardless of file extension \"\n        \"(useful when piping source on standard input).\"\n    ),\n)\n@click.option(\n    \"-S\",\n    \"--skip-string-normalization\",\n    is_flag=True,\n    help=\"Don't normalize string quotes or prefixes.\",\n)\n@click.option(\n    \"--check\",\n    is_flag=True,\n    help=(\n        \"Don't write the files back, just return the status.  Return code 0 \"\n        \"means nothing would change.  Return code 1 means some files would be \"\n        \"reformatted.  Return code 123 means there was an internal error.\"\n    ),\n)\n@click.option(\n    \"--diff\",\n    is_flag=True,\n    help=\"Don't write the files back, just output a diff for each file on stdout.\",\n)\n@click.option(\n    \"--fast/--safe\",\n    is_flag=True,\n    help=\"If --fast given, skip temporary sanity checks. [default: --safe]\",\n)\n@click.option(\n    \"--include\",\n    type=str,\n    default=DEFAULT_INCLUDES,\n    help=(\n        \"A regular expression that matches files and directories that should be \"\n        \"included on recursive searches.  An empty value means all files are \"\n        \"included regardless of the name.  Use forward slashes for directories on \"\n        \"all platforms (Windows, too).  Exclusions are calculated first, inclusions \"\n        \"later.\"\n    ),\n    show_default=True,\n)\n@click.option(\n    \"--exclude\",\n    type=str,\n    default=DEFAULT_EXCLUDES,\n    help=(\n        \"A regular expression that matches files and directories that should be \"\n        \"excluded on recursive searches.  An empty value means no paths are excluded. \"\n        \"Use forward slashes for directories on all platforms (Windows, too).  \"\n        \"Exclusions are calculated first, inclusions later.\"\n    ),\n    show_default=True,\n)\n@click.option(\n    \"-q\",\n    \"--quiet\",\n    is_flag=True,\n    help=(\n        \"Don't emit non-error messages to stderr. Errors are still emitted, \"\n        \"silence those with 2>/dev/null.\"\n    ),\n)\n@click.option(\n    \"-v\",\n    \"--verbose\",\n    is_flag=True,\n    help=(\n        \"Also emit messages to stderr about files that were not changed or were \"\n        \"ignored due to --exclude=.\"\n    ),\n)\n@click.version_option(version=__version__)\n@click.argument(\n    \"src\",\n    nargs=-1,\n    type=click.Path(\n        exists=True, file_okay=True, dir_okay=True, readable=True, allow_dash=True\n    ),\n    is_eager=True,\n)\n@click.option(\n    \"--config\",\n    type=click.Path(\n        exists=False, file_okay=True, dir_okay=False, readable=True, allow_dash=False\n    ),\n    is_eager=True,\n    callback=read_pyproject_toml,\n    help=\"Read configuration from PATH.\",\n)\n@click.pass_context\ndef main(\n    ctx: click.Context,\n    line_length: int,\n    check: bool,\n    diff: bool,\n    fast: bool,\n    pyi: bool,\n    py36: bool,\n    skip_string_normalization: bool,\n    quiet: bool,\n    verbose: bool,\n    include: str,\n    exclude: str,\n    src: Tuple[str],\n    config: Optional[str],\n) -> None:\n    \"\"\"The uncompromising code formatter.\"\"\"\n    write_back = WriteBack.from_configuration(check=check, diff=diff)\n    mode = FileMode.from_configuration(\n        py36=py36, pyi=pyi, skip_string_normalization=skip_string_normalization\n    )\n    if config and verbose:\n        out(f\"Using configuration from {config}.\", bold=False, fg=\"blue\")\n    try:\n        include_regex = re_compile_maybe_verbose(include)\n    except re.error:\n        err(f\"Invalid regular expression for include given: {include!r}\")\n        ctx.exit(2)\n    try:\n        exclude_regex = re_compile_maybe_verbose(exclude)\n    except re.error:\n        err(f\"Invalid regular expression for exclude given: {exclude!r}\")\n        ctx.exit(2)\n    report = Report(check=check, quiet=quiet, verbose=verbose)\n    root = find_project_root(src)\n    sources: Set[Path] = set()\n    for s in src:\n        p = Path(s)\n        if p.is_dir():\n            sources.update(\n                gen_python_files_in_dir(p, root, include_regex, exclude_regex, report)\n            )\n        elif p.is_file() or s == \"-\":\n            # if a file was explicitly given, we don't care about its extension\n            sources.add(p)\n        else:\n            err(f\"invalid path: {s}\")\n    if len(sources) == 0:\n        if verbose or not quiet:\n            out(\"No paths given. Nothing to do \ud83d\ude34\")\n        ctx.exit(0)\n\n    if len(sources) == 1:\n        reformat_one(\n            src=sources.pop(),\n            line_length=line_length,\n            fast=fast,\n            write_back=write_back,\n            mode=mode,\n            report=report,\n        )\n    else:\n        loop = asyncio.get_event_loop()\n        executor = ProcessPoolExecutor(max_workers=os.cpu_count())\n        try:\n            loop.run_until_complete(\n                schedule_formatting(\n                    sources=sources,\n                    line_length=line_length,\n                    fast=fast,\n                    write_back=write_back,\n                    mode=mode,\n                    report=report,\n                    loop=loop,\n                    executor=executor,\n                )\n            )\n        finally:\n            shutdown(loop)\n    if verbose or not quiet:\n        bang = \"\ud83d\udca5 \ud83d\udc94 \ud83d\udca5\" if report.return_code else \"\u2728 \ud83c\udf70 \u2728\"\n        out(f\"All done! {bang}\")\n        click.secho(str(report), err=True)\n    ctx.exit(report.return_code)",
                "def reformat_one(\n    src: Path,\n    line_length: int,\n    fast: bool,\n    write_back: WriteBack,\n    mode: FileMode,\n    report: \"Report\",\n) -> None:\n    \"\"\"Reformat a single file under `src` without spawning child processes.\n\n    If `quiet` is True, non-error messages are not output. `line_length`,\n    `write_back`, `fast` and `pyi` options are passed to\n    :func:`format_file_in_place` or :func:`format_stdin_to_stdout`.\n    \"\"\"\n    try:\n        changed = Changed.NO\n        if not src.is_file() and str(src) == \"-\":\n            if format_stdin_to_stdout(\n                line_length=line_length, fast=fast, write_back=write_back, mode=mode\n            ):\n                changed = Changed.YES\n        else:\n            cache: Cache = {}\n            if write_back != WriteBack.DIFF:\n                cache = read_cache(line_length, mode)\n                res_src = src.resolve()\n                if res_src in cache and cache[res_src] == get_cache_info(res_src):\n                    changed = Changed.CACHED\n            if changed is not Changed.CACHED and format_file_in_place(\n                src,\n                line_length=line_length,\n                fast=fast,\n                write_back=write_back,\n                mode=mode,\n            ):\n                changed = Changed.YES\n            if (write_back is WriteBack.YES and changed is not Changed.CACHED) or (\n                write_back is WriteBack.CHECK and changed is Changed.NO\n            ):\n                write_cache(cache, [src], line_length, mode)\n        report.done(src, changed)\n    except Exception as exc:\n        report.failed(src, str(exc))",
                "async def schedule_formatting(\n    sources: Set[Path],\n    line_length: int,\n    fast: bool,\n    write_back: WriteBack,\n    mode: FileMode,\n    report: \"Report\",\n    loop: BaseEventLoop,\n    executor: Executor,\n) -> None:\n    \"\"\"Run formatting of `sources` in parallel using the provided `executor`.\n\n    (Use ProcessPoolExecutors for actual parallelism.)\n\n    `line_length`, `write_back`, `fast`, and `pyi` options are passed to\n    :func:`format_file_in_place`.\n    \"\"\"\n    cache: Cache = {}\n    if write_back != WriteBack.DIFF:\n        cache = read_cache(line_length, mode)\n        sources, cached = filter_cached(cache, sources)\n        for src in sorted(cached):\n            report.done(src, Changed.CACHED)\n    if not sources:\n        return\n\n    cancelled = []\n    sources_to_cache = []\n    lock = None\n    if write_back == WriteBack.DIFF:\n        # For diff output, we need locks to ensure we don't interleave output\n        # from different processes.\n        manager = Manager()\n        lock = manager.Lock()\n    tasks = {\n        loop.run_in_executor(\n            executor,\n            format_file_in_place,\n            src,\n            line_length,\n            fast,\n            write_back,\n            mode,\n            lock,\n        ): src\n        for src in sorted(sources)\n    }\n    pending: Iterable[asyncio.Task] = tasks.keys()\n    try:\n        loop.add_signal_handler(signal.SIGINT, cancel, pending)\n        loop.add_signal_handler(signal.SIGTERM, cancel, pending)\n    except NotImplementedError:\n        # There are no good alternatives for these on Windows.\n        pass\n    while pending:\n        done, _ = await asyncio.wait(pending, return_when=asyncio.FIRST_COMPLETED)\n        for task in done:\n            src = tasks.pop(task)\n            if task.cancelled():\n                cancelled.append(task)\n            elif task.exception():\n                report.failed(src, str(task.exception()))\n            else:\n                changed = Changed.YES if task.result() else Changed.NO\n                # If the file was written back or was successfully checked as\n                # well-formatted, store this information in the cache.\n                if write_back is WriteBack.YES or (\n                    write_back is WriteBack.CHECK and changed is Changed.NO\n                ):\n                    sources_to_cache.append(src)\n                report.done(src, changed)\n    if cancelled:\n        await asyncio.gather(*cancelled, loop=loop, return_exceptions=True)\n    if sources_to_cache:\n        write_cache(cache, sources_to_cache, line_length, mode)",
                "def format_file_in_place(\n    src: Path,\n    line_length: int,\n    fast: bool,\n    write_back: WriteBack = WriteBack.NO,\n    mode: FileMode = FileMode.AUTO_DETECT,\n    lock: Any = None,  # multiprocessing.Manager().Lock() is some crazy proxy\n) -> bool:\n    \"\"\"Format file under `src` path. Return True if changed.\n\n    If `write_back` is DIFF, write a diff to stdout. If it is YES, write reformatted\n    code to the file.\n    `line_length` and `fast` options are passed to :func:`format_file_contents`.\n    \"\"\"\n    if src.suffix == \".pyi\":\n        mode |= FileMode.PYI\n\n    then = datetime.utcfromtimestamp(src.stat().st_mtime)\n    with open(src, \"rb\") as buf:\n        src_contents, encoding, newline = decode_bytes(buf.read())\n    try:\n        dst_contents = format_file_contents(\n            src_contents, line_length=line_length, fast=fast, mode=mode\n        )\n    except NothingChanged:\n        return False\n\n    if write_back == write_back.YES:\n        with open(src, \"w\", encoding=encoding, newline=newline) as f:\n            f.write(dst_contents)\n    elif write_back == write_back.DIFF:\n        now = datetime.utcnow()\n        src_name = f\"{src}\\t{then} +0000\"\n        dst_name = f\"{src}\\t{now} +0000\"\n        diff_contents = diff(src_contents, dst_contents, src_name, dst_name)\n        if lock:\n            lock.acquire()\n        try:\n            f = io.TextIOWrapper(\n                sys.stdout.buffer,\n                encoding=encoding,\n                newline=newline,\n                write_through=True,\n            )\n            f.write(diff_contents)\n            f.detach()\n        finally:\n            if lock:\n                lock.release()\n    return True",
                "def format_stdin_to_stdout(\n    line_length: int,\n    fast: bool,\n    write_back: WriteBack = WriteBack.NO,\n    mode: FileMode = FileMode.AUTO_DETECT,\n) -> bool:\n    \"\"\"Format file on stdin. Return True if changed.\n\n    If `write_back` is YES, write reformatted code back to stdout. If it is DIFF,\n    write a diff to stdout.\n    `line_length`, `fast`, `is_pyi`, and `force_py36` arguments are passed to\n    :func:`format_file_contents`.\n    \"\"\"\n    then = datetime.utcnow()\n    src, encoding, newline = decode_bytes(sys.stdin.buffer.read())\n    dst = src\n    try:\n        dst = format_file_contents(src, line_length=line_length, fast=fast, mode=mode)\n        return True\n\n    except NothingChanged:\n        return False\n\n    finally:\n        f = io.TextIOWrapper(\n            sys.stdout.buffer, encoding=encoding, newline=newline, write_through=True\n        )\n        if write_back == WriteBack.YES:\n            f.write(dst)\n        elif write_back == WriteBack.DIFF:\n            now = datetime.utcnow()\n            src_name = f\"STDIN\\t{then} +0000\"\n            dst_name = f\"STDOUT\\t{now} +0000\"\n            f.write(diff(src, dst, src_name, dst_name))\n        f.detach()",
                "def format_file_contents(\n    src_contents: str,\n    *,\n    line_length: int,\n    fast: bool,\n    mode: FileMode = FileMode.AUTO_DETECT,\n) -> FileContent:\n    \"\"\"Reformat contents a file and return new contents.\n\n    If `fast` is False, additionally confirm that the reformatted code is\n    valid by calling :func:`assert_equivalent` and :func:`assert_stable` on it.\n    `line_length` is passed to :func:`format_str`.\n    \"\"\"\n    if src_contents.strip() == \"\":\n        raise NothingChanged\n\n    dst_contents = format_str(src_contents, line_length=line_length, mode=mode)\n    if src_contents == dst_contents:\n        raise NothingChanged\n\n    if not fast:\n        assert_equivalent(src_contents, dst_contents)\n        assert_stable(src_contents, dst_contents, line_length=line_length, mode=mode)\n    return dst_contents",
                "def format_str(\n    src_contents: str, line_length: int, *, mode: FileMode = FileMode.AUTO_DETECT\n) -> FileContent:\n    \"\"\"Reformat a string and return new contents.\n\n    `line_length` determines how many characters per line are allowed.\n    \"\"\"\n    src_node = lib2to3_parse(src_contents)\n    dst_contents = \"\"\n    future_imports = get_future_imports(src_node)\n    is_pyi = bool(mode & FileMode.PYI)\n    py36 = bool(mode & FileMode.PYTHON36) or is_python36(src_node)\n    normalize_strings = not bool(mode & FileMode.NO_STRING_NORMALIZATION)\n    normalize_fmt_off(src_node)\n    lines = LineGenerator(\n        remove_u_prefix=py36 or \"unicode_literals\" in future_imports,\n        is_pyi=is_pyi,\n        normalize_strings=normalize_strings,\n        allow_underscores=py36,\n    )\n    elt = EmptyLineTracker(is_pyi=is_pyi)\n    empty_line = Line()\n    after = 0\n    for current_line in lines.visit(src_node):\n        for _ in range(after):\n            dst_contents += str(empty_line)\n        before, after = elt.maybe_empty_lines(current_line)\n        for _ in range(before):\n            dst_contents += str(empty_line)\n        for line in split_line(current_line, line_length=line_length, py36=py36):\n            dst_contents += str(line)\n    return dst_contents",
                "def decode_bytes(src: bytes) -> Tuple[FileContent, Encoding, NewLine]:\n    \"\"\"Return a tuple of (decoded_contents, encoding, newline).\n\n    `newline` is either CRLF or LF but `decoded_contents` is decoded with\n    universal newlines (i.e. only contains LF).\n    \"\"\"\n    srcbuf = io.BytesIO(src)\n    encoding, lines = tokenize.detect_encoding(srcbuf.readline)\n    if not lines:\n        return \"\", encoding, \"\\n\"\n\n    newline = \"\\r\\n\" if b\"\\r\\n\" == lines[0][-2:] else \"\\n\"\n    srcbuf.seek(0)\n    with io.TextIOWrapper(srcbuf, encoding) as tiow:\n        return tiow.read(), encoding, newline",
                "def lib2to3_parse(src_txt: str) -> Node:\n    \"\"\"Given a string with source, return the lib2to3 Node.\"\"\"\n    grammar = pygram.python_grammar_no_print_statement\n    if src_txt[-1:] != \"\\n\":\n        src_txt += \"\\n\"\n    for grammar in GRAMMARS:\n        drv = driver.Driver(grammar, pytree.convert)\n        try:\n            result = drv.parse_string(src_txt, True)\n            break\n\n        except ParseError as pe:\n            lineno, column = pe.context[1]\n            lines = src_txt.splitlines()\n            try:\n                faulty_line = lines[lineno - 1]\n            except IndexError:\n                faulty_line = \"<line number missing in source>\"\n            exc = ValueError(f\"Cannot parse: {lineno}:{column}: {faulty_line}\")\n    else:\n        raise exc from None\n\n    if isinstance(result, Leaf):\n        result = Node(syms.file_input, [result])\n    return result",
                "def lib2to3_unparse(node: Node) -> str:\n    \"\"\"Given a lib2to3 node, return its string representation.\"\"\"\n    code = str(node)\n    return code",
                "def whitespace(leaf: Leaf, *, complex_subscript: bool) -> str:  # noqa C901\n    \"\"\"Return whitespace prefix if needed for the given `leaf`.\n\n    `complex_subscript` signals whether the given leaf is part of a subscription\n    which has non-trivial arguments, like arithmetic expressions or function calls.\n    \"\"\"\n    NO = \"\"\n    SPACE = \" \"\n    DOUBLESPACE = \"  \"\n    t = leaf.type\n    p = leaf.parent\n    v = leaf.value\n    if t in ALWAYS_NO_SPACE:\n        return NO\n\n    if t == token.COMMENT:\n        return DOUBLESPACE\n\n    assert p is not None, f\"INTERNAL ERROR: hand-made leaf without parent: {leaf!r}\"\n    if t == token.COLON and p.type not in {\n        syms.subscript,\n        syms.subscriptlist,\n        syms.sliceop,\n    }:\n        return NO\n\n    prev = leaf.prev_sibling\n    if not prev:\n        prevp = preceding_leaf(p)\n        if not prevp or prevp.type in OPENING_BRACKETS:\n            return NO\n\n        if t == token.COLON:\n            if prevp.type == token.COLON:\n                return NO\n\n            elif prevp.type != token.COMMA and not complex_subscript:\n                return NO\n\n            return SPACE\n\n        if prevp.type == token.EQUAL:\n            if prevp.parent:\n                if prevp.parent.type in {\n                    syms.arglist,\n                    syms.argument,\n                    syms.parameters,\n                    syms.varargslist,\n                }:\n                    return NO\n\n                elif prevp.parent.type == syms.typedargslist:\n                    # A bit hacky: if the equal sign has whitespace, it means we\n                    # previously found it's a typed argument.  So, we're using\n                    # that, too.\n                    return prevp.prefix\n\n        elif prevp.type in STARS:\n            if is_vararg(prevp, within=VARARGS_PARENTS | UNPACKING_PARENTS):\n                return NO\n\n        elif prevp.type == token.COLON:\n            if prevp.parent and prevp.parent.type in {syms.subscript, syms.sliceop}:\n                return SPACE if complex_subscript else NO\n\n        elif (\n            prevp.parent\n            and prevp.parent.type == syms.factor\n            and prevp.type in MATH_OPERATORS\n        ):\n            return NO\n\n        elif (\n            prevp.type == token.RIGHTSHIFT\n            and prevp.parent\n            and prevp.parent.type == syms.shift_expr\n            and prevp.prev_sibling\n            and prevp.prev_sibling.type == token.NAME\n            and prevp.prev_sibling.value == \"print\"  # type: ignore\n        ):\n            # Python 2 print chevron\n            return NO\n\n    elif prev.type in OPENING_BRACKETS:\n        return NO\n\n    if p.type in {syms.parameters, syms.arglist}:\n        # untyped function signatures or calls\n        if not prev or prev.type != token.COMMA:\n            return NO\n\n    elif p.type == syms.varargslist:\n        # lambdas\n        if prev and prev.type != token.COMMA:\n            return NO\n\n    elif p.type == syms.typedargslist:\n        # typed function signatures\n        if not prev:\n            return NO\n\n        if t == token.EQUAL:\n            if prev.type != syms.tname:\n                return NO\n\n        elif prev.type == token.EQUAL:\n            # A bit hacky: if the equal sign has whitespace, it means we\n            # previously found it's a typed argument.  So, we're using that, too.\n            return prev.prefix\n\n        elif prev.type != token.COMMA:\n            return NO\n\n    elif p.type == syms.tname:\n        # type names\n        if not prev:\n            prevp = preceding_leaf(p)\n            if not prevp or prevp.type != token.COMMA:\n                return NO\n\n    elif p.type == syms.trailer:\n        # attributes and calls\n        if t == token.LPAR or t == token.RPAR:\n            return NO\n\n        if not prev:\n            if t == token.DOT:\n                prevp = preceding_leaf(p)\n                if not prevp or prevp.type != token.NUMBER:\n                    return NO\n\n            elif t == token.LSQB:\n                return NO\n\n        elif prev.type != token.COMMA:\n            return NO\n\n    elif p.type == syms.argument:\n        # single argument\n        if t == token.EQUAL:\n            return NO\n\n        if not prev:\n            prevp = preceding_leaf(p)\n            if not prevp or prevp.type == token.LPAR:\n                return NO\n\n        elif prev.type in {token.EQUAL} | STARS:\n            return NO\n\n    elif p.type == syms.decorator:\n        # decorators\n        return NO\n\n    elif p.type == syms.dotted_name:\n        if prev:\n            return NO\n\n        prevp = preceding_leaf(p)\n        if not prevp or prevp.type == token.AT or prevp.type == token.DOT:\n            return NO\n\n    elif p.type == syms.classdef:\n        if t == token.LPAR:\n            return NO\n\n        if prev and prev.type == token.LPAR:\n            return NO\n\n    elif p.type in {syms.subscript, syms.sliceop}:\n        # indexing\n        if not prev:\n            assert p.parent is not None, \"subscripts are always parented\"\n            if p.parent.type == syms.subscriptlist:\n                return SPACE\n\n            return NO\n\n        elif not complex_subscript:\n            return NO\n\n    elif p.type == syms.atom:\n        if prev and t == token.DOT:\n            # dots, but not the first one.\n            return NO\n\n    elif p.type == syms.dictsetmaker:\n        # dict unpacking\n        if prev and prev.type == token.DOUBLESTAR:\n            return NO\n\n    elif p.type in {syms.factor, syms.star_expr}:\n        # unary ops\n        if not prev:\n            prevp = preceding_leaf(p)\n            if not prevp or prevp.type in OPENING_BRACKETS:\n                return NO\n\n            prevp_parent = prevp.parent\n            assert prevp_parent is not None\n            if prevp.type == token.COLON and prevp_parent.type in {\n                syms.subscript,\n                syms.sliceop,\n            }:\n                return NO\n\n            elif prevp.type == token.EQUAL and prevp_parent.type == syms.argument:\n                return NO\n\n        elif t in {token.NAME, token.NUMBER, token.STRING}:\n            return NO\n\n    elif p.type == syms.import_from:\n        if t == token.DOT:\n            if prev and prev.type == token.DOT:\n                return NO\n\n        elif t == token.NAME:\n            if v == \"import\":\n                return SPACE\n\n            if prev and prev.type == token.DOT:\n                return NO\n\n    elif p.type == syms.sliceop:\n        return NO\n\n    return SPACE",
                "def preceding_leaf(node: Optional[LN]) -> Optional[Leaf]:\n    \"\"\"Return the first leaf that precedes `node`, if any.\"\"\"\n    while node:\n        res = node.prev_sibling\n        if res:\n            if isinstance(res, Leaf):\n                return res\n\n            try:\n                return list(res.leaves())[-1]\n\n            except IndexError:\n                return None\n\n        node = node.parent\n    return None",
                "def child_towards(ancestor: Node, descendant: LN) -> Optional[LN]:\n    \"\"\"Return the child of `ancestor` that contains `descendant`.\"\"\"\n    node: Optional[LN] = descendant\n    while node and node.parent != ancestor:\n        node = node.parent\n    return node",
                "def container_of(leaf: Leaf) -> LN:\n    \"\"\"Return `leaf` or one of its ancestors that is the topmost container of it.\n\n    By \"container\" we mean a node where `leaf` is the very first child.\n    \"\"\"\n    same_prefix = leaf.prefix\n    container: LN = leaf\n    while container:\n        parent = container.parent\n        if parent is None:\n            break\n\n        if parent.children[0].prefix != same_prefix:\n            break\n\n        if parent.type == syms.file_input:\n            break\n\n        if parent.prev_sibling is not None and parent.prev_sibling.type in BRACKETS:\n            break\n\n        container = parent\n    return container",
                "def is_split_after_delimiter(leaf: Leaf, previous: Leaf = None) -> int:\n    \"\"\"Return the priority of the `leaf` delimiter, given a line break after it.\n\n    The delimiter priorities returned here are from those delimiters that would\n    cause a line break after themselves.\n\n    Higher numbers are higher priority.\n    \"\"\"\n    if leaf.type == token.COMMA:\n        return COMMA_PRIORITY\n\n    return 0",
                "def is_split_before_delimiter(leaf: Leaf, previous: Leaf = None) -> int:\n    \"\"\"Return the priority of the `leaf` delimiter, given a line before after it.\n\n    The delimiter priorities returned here are from those delimiters that would\n    cause a line break before themselves.\n\n    Higher numbers are higher priority.\n    \"\"\"\n    if is_vararg(leaf, within=VARARGS_PARENTS | UNPACKING_PARENTS):\n        # * and ** might also be MATH_OPERATORS but in this case they are not.\n        # Don't treat them as a delimiter.\n        return 0\n\n    if (\n        leaf.type == token.DOT\n        and leaf.parent\n        and leaf.parent.type not in {syms.import_from, syms.dotted_name}\n        and (previous is None or previous.type in CLOSING_BRACKETS)\n    ):\n        return DOT_PRIORITY\n\n    if (\n        leaf.type in MATH_OPERATORS\n        and leaf.parent\n        and leaf.parent.type not in {syms.factor, syms.star_expr}\n    ):\n        return MATH_PRIORITIES[leaf.type]\n\n    if leaf.type in COMPARATORS:\n        return COMPARATOR_PRIORITY\n\n    if (\n        leaf.type == token.STRING\n        and previous is not None\n        and previous.type == token.STRING\n    ):\n        return STRING_PRIORITY\n\n    if leaf.type != token.NAME:\n        return 0\n\n    if (\n        leaf.value == \"for\"\n        and leaf.parent\n        and leaf.parent.type in {syms.comp_for, syms.old_comp_for}\n    ):\n        return COMPREHENSION_PRIORITY\n\n    if (\n        leaf.value == \"if\"\n        and leaf.parent\n        and leaf.parent.type in {syms.comp_if, syms.old_comp_if}\n    ):\n        return COMPREHENSION_PRIORITY\n\n    if leaf.value in {\"if\", \"else\"} and leaf.parent and leaf.parent.type == syms.test:\n        return TERNARY_PRIORITY\n\n    if leaf.value == \"is\":\n        return COMPARATOR_PRIORITY\n\n    if (\n        leaf.value == \"in\"\n        and leaf.parent\n        and leaf.parent.type in {syms.comp_op, syms.comparison}\n        and not (\n            previous is not None\n            and previous.type == token.NAME\n            and previous.value == \"not\"\n        )\n    ):\n        return COMPARATOR_PRIORITY\n\n    if (\n        leaf.value == \"not\"\n        and leaf.parent\n        and leaf.parent.type == syms.comp_op\n        and not (\n            previous is not None\n            and previous.type == token.NAME\n            and previous.value == \"is\"\n        )\n    ):\n        return COMPARATOR_PRIORITY\n\n    if leaf.value in LOGIC_OPERATORS and leaf.parent:\n        return LOGIC_PRIORITY\n\n    return 0",
                "def generate_comments(leaf: LN) -> Iterator[Leaf]:\n    \"\"\"Clean the prefix of the `leaf` and generate comments from it, if any.\n\n    Comments in lib2to3 are shoved into the whitespace prefix.  This happens\n    in `pgen2/driver.py:Driver.parse_tokens()`.  This was a brilliant implementation\n    move because it does away with modifying the grammar to include all the\n    possible places in which comments can be placed.\n\n    The sad consequence for us though is that comments don't \"belong\" anywhere.\n    This is why this function generates simple parentless Leaf objects for\n    comments.  We simply don't know what the correct parent should be.\n\n    No matter though, we can live without this.  We really only need to\n    differentiate between inline and standalone comments.  The latter don't\n    share the line with any code.\n\n    Inline comments are emitted as regular token.COMMENT leaves.  Standalone\n    are emitted with a fake STANDALONE_COMMENT token identifier.\n    \"\"\"\n    for pc in list_comments(leaf.prefix, is_endmarker=leaf.type == token.ENDMARKER):\n        yield Leaf(pc.type, pc.value, prefix=\"\\n\" * pc.newlines)",
                "@lru_cache(maxsize=4096)\ndef list_comments(prefix: str, *, is_endmarker: bool) -> List[ProtoComment]:\n    result: List[ProtoComment] = []\n    if not prefix or \"#\" not in prefix:\n        return result\n\n    consumed = 0\n    nlines = 0\n    for index, line in enumerate(prefix.split(\"\\n\")):\n        consumed += len(line) + 1  # adding the length of the split '\\n'\n        line = line.lstrip()\n        if not line:\n            nlines += 1\n        if not line.startswith(\"#\"):\n            continue\n\n        if index == 0 and not is_endmarker:\n            comment_type = token.COMMENT  # simple trailing comment\n        else:\n            comment_type = STANDALONE_COMMENT\n        comment = make_comment(line)\n        result.append(\n            ProtoComment(\n                type=comment_type, value=comment, newlines=nlines, consumed=consumed\n            )\n        )\n        nlines = 0\n    return result",
                "def make_comment(content: str) -> str:\n    \"\"\"Return a consistently formatted comment from the given `content` string.\n\n    All comments (except for \"##\", \"#!\", \"#:\") should have a single space between\n    the hash sign and the content.\n\n    If `content` didn't start with a hash sign, one is provided.\n    \"\"\"\n    content = content.rstrip()\n    if not content:\n        return \"#\"\n\n    if content[0] == \"#\":\n        content = content[1:]\n    if content and content[0] not in \" !:#\":\n        content = \" \" + content\n    return \"#\" + content",
                "def split_line(\n    line: Line, line_length: int, inner: bool = False, py36: bool = False\n) -> Iterator[Line]:\n    \"\"\"Split a `line` into potentially many lines.\n\n    They should fit in the allotted `line_length` but might not be able to.\n    `inner` signifies that there were a pair of brackets somewhere around the\n    current `line`, possibly transitively. This means we can fallback to splitting\n    by delimiters if the LHS/RHS don't yield any results.\n\n    If `py36` is True, splitting may generate syntax that is only compatible\n    with Python 3.6 and later.\n    \"\"\"\n    if line.is_comment:\n        yield line\n        return\n\n    line_str = str(line).strip(\"\\n\")\n    if not line.should_explode and is_line_short_enough(\n        line, line_length=line_length, line_str=line_str\n    ):\n        yield line\n        return\n\n    split_funcs: List[SplitFunc]\n    if line.is_def:\n        split_funcs = [left_hand_split]\n    else:\n\n        def rhs(line: Line, py36: bool = False) -> Iterator[Line]:\n            for omit in generate_trailers_to_omit(line, line_length):\n                lines = list(right_hand_split(line, line_length, py36, omit=omit))\n                if is_line_short_enough(lines[0], line_length=line_length):\n                    yield from lines\n                    return\n\n            # All splits failed, best effort split with no omits.\n            # This mostly happens to multiline strings that are by definition\n            # reported as not fitting a single line.\n            yield from right_hand_split(line, py36)\n\n        if line.inside_brackets:\n            split_funcs = [delimiter_split, standalone_comment_split, rhs]\n        else:\n            split_funcs = [rhs]\n    for split_func in split_funcs:\n        # We are accumulating lines in `result` because we might want to abort\n        # mission and return the original line in the end, or attempt a different\n        # split altogether.\n        result: List[Line] = []\n        try:\n            for l in split_func(line, py36):\n                if str(l).strip(\"\\n\") == line_str:\n                    raise CannotSplit(\"Split function returned an unchanged result\")\n\n                result.extend(\n                    split_line(l, line_length=line_length, inner=True, py36=py36)\n                )\n        except CannotSplit as cs:\n            continue\n\n        else:\n            yield from result\n            break\n\n    else:\n        yield line",
                "def left_hand_split(line: Line, py36: bool = False) -> Iterator[Line]:\n    \"\"\"Split line into many lines, starting with the first matching bracket pair.\n\n    Note: this usually looks weird, only use this for function definitions.\n    Prefer RHS otherwise.  This is why this function is not symmetrical with\n    :func:`right_hand_split` which also handles optional parentheses.\n    \"\"\"\n    head = Line(depth=line.depth)\n    body = Line(depth=line.depth + 1, inside_brackets=True)\n    tail = Line(depth=line.depth)\n    tail_leaves: List[Leaf] = []\n    body_leaves: List[Leaf] = []\n    head_leaves: List[Leaf] = []\n    current_leaves = head_leaves\n    matching_bracket = None\n    for leaf in line.leaves:\n        if (\n            current_leaves is body_leaves\n            and leaf.type in CLOSING_BRACKETS\n            and leaf.opening_bracket is matching_bracket\n        ):\n            current_leaves = tail_leaves if body_leaves else head_leaves\n        current_leaves.append(leaf)\n        if current_leaves is head_leaves:\n            if leaf.type in OPENING_BRACKETS:\n                matching_bracket = leaf\n                current_leaves = body_leaves\n    # Since body is a new indent level, remove spurious leading whitespace.\n    if body_leaves:\n        normalize_prefix(body_leaves[0], inside_brackets=True)\n    # Build the new lines.\n    for result, leaves in (head, head_leaves), (body, body_leaves), (tail, tail_leaves):\n        for leaf in leaves:\n            result.append(leaf, preformatted=True)\n            for comment_after in line.comments_after(leaf):\n                result.append(comment_after, preformatted=True)\n    bracket_split_succeeded_or_raise(head, body, tail)\n    for result in (head, body, tail):\n        if result:\n            yield result",
                "def right_hand_split(\n    line: Line, line_length: int, py36: bool = False, omit: Collection[LeafID] = ()\n) -> Iterator[Line]:\n    \"\"\"Split line into many lines, starting with the last matching bracket pair.\n\n    If the split was by optional parentheses, attempt splitting without them, too.\n    `omit` is a collection of closing bracket IDs that shouldn't be considered for\n    this split.\n\n    Note: running this function modifies `bracket_depth` on the leaves of `line`.\n    \"\"\"\n    head = Line(depth=line.depth)\n    body = Line(depth=line.depth + 1, inside_brackets=True)\n    tail = Line(depth=line.depth)\n    tail_leaves: List[Leaf] = []\n    body_leaves: List[Leaf] = []\n    head_leaves: List[Leaf] = []\n    current_leaves = tail_leaves\n    opening_bracket = None\n    closing_bracket = None\n    for leaf in reversed(line.leaves):\n        if current_leaves is body_leaves:\n            if leaf is opening_bracket:\n                current_leaves = head_leaves if body_leaves else tail_leaves\n        current_leaves.append(leaf)\n        if current_leaves is tail_leaves:\n            if leaf.type in CLOSING_BRACKETS and id(leaf) not in omit:\n                opening_bracket = leaf.opening_bracket\n                closing_bracket = leaf\n                current_leaves = body_leaves\n    tail_leaves.reverse()\n    body_leaves.reverse()\n    head_leaves.reverse()\n    # Since body is a new indent level, remove spurious leading whitespace.\n    if body_leaves:\n        normalize_prefix(body_leaves[0], inside_brackets=True)\n    if not head_leaves:\n        # No `head` means the split failed. Either `tail` has all content or\n        # the matching `opening_bracket` wasn't available on `line` anymore.\n        raise CannotSplit(\"No brackets found\")\n\n    # Build the new lines.\n    for result, leaves in (head, head_leaves), (body, body_leaves), (tail, tail_leaves):\n        for leaf in leaves:\n            result.append(leaf, preformatted=True)\n            for comment_after in line.comments_after(leaf):\n                result.append(comment_after, preformatted=True)\n    assert opening_bracket and closing_bracket\n    body.should_explode = should_explode(body, opening_bracket)\n    bracket_split_succeeded_or_raise(head, body, tail)\n    if (\n        # the body shouldn't be exploded\n        not body.should_explode\n        # the opening bracket is an optional paren\n        and opening_bracket.type == token.LPAR\n        and not opening_bracket.value\n        # the closing bracket is an optional paren\n        and closing_bracket.type == token.RPAR\n        and not closing_bracket.value\n        # it's not an import (optional parens are the only thing we can split on\n        # in this case; attempting a split without them is a waste of time)\n        and not line.is_import\n        # there are no standalone comments in the body\n        and not body.contains_standalone_comments(0)\n        # and we can actually remove the parens\n        and can_omit_invisible_parens(body, line_length)\n    ):\n        omit = {id(closing_bracket), *omit}\n        try:\n            yield from right_hand_split(line, line_length, py36=py36, omit=omit)\n            return\n\n        except CannotSplit:\n            if not (\n                can_be_split(body)\n                or is_line_short_enough(body, line_length=line_length)\n            ):\n                raise CannotSplit(\n                    \"Splitting failed, body is still too long and can't be split.\"\n                )\n\n            elif head.contains_multiline_strings() or tail.contains_multiline_strings():\n                raise CannotSplit(\n                    \"The current optional pair of parentheses is bound to fail to \"\n                    \"satisfy the splitting algorithm because the head or the tail \"\n                    \"contains multiline strings which by definition never fit one \"\n                    \"line.\"\n                )\n\n    ensure_visible(opening_bracket)\n    ensure_visible(closing_bracket)\n    for result in (head, body, tail):\n        if result:\n            yield result",
                "def bracket_split_succeeded_or_raise(head: Line, body: Line, tail: Line) -> None:\n    \"\"\"Raise :exc:`CannotSplit` if the last left- or right-hand split failed.\n\n    Do nothing otherwise.\n\n    A left- or right-hand split is based on a pair of brackets. Content before\n    (and including) the opening bracket is left on one line, content inside the\n    brackets is put on a separate line, and finally content starting with and\n    following the closing bracket is put on a separate line.\n\n    Those are called `head`, `body`, and `tail`, respectively. If the split\n    produced the same line (all content in `head`) or ended up with an empty `body`\n    and the `tail` is just the closing bracket, then it's considered failed.\n    \"\"\"\n    tail_len = len(str(tail).strip())\n    if not body:\n        if tail_len == 0:\n            raise CannotSplit(\"Splitting brackets produced the same line\")\n\n        elif tail_len < 3:\n            raise CannotSplit(\n                f\"Splitting brackets on an empty body to save \"\n                f\"{tail_len} characters is not worth it\"\n            )",
                "def dont_increase_indentation(split_func: SplitFunc) -> SplitFunc:\n    \"\"\"Normalize prefix of the first leaf in every line returned by `split_func`.\n\n    This is a decorator over relevant split functions.\n    \"\"\"\n\n    @wraps(split_func)\n    def split_wrapper(line: Line, py36: bool = False) -> Iterator[Line]:\n        for l in split_func(line, py36):\n            normalize_prefix(l.leaves[0], inside_brackets=True)\n            yield l\n\n    return split_wrapper",
                "@dont_increase_indentation\ndef delimiter_split(line: Line, py36: bool = False) -> Iterator[Line]:\n    \"\"\"Split according to delimiters of the highest priority.\n\n    If `py36` is True, the split will add trailing commas also in function\n    signatures that contain `*` and `**`.\n    \"\"\"\n    try:\n        last_leaf = line.leaves[-1]\n    except IndexError:\n        raise CannotSplit(\"Line empty\")\n\n    bt = line.bracket_tracker\n    try:\n        delimiter_priority = bt.max_delimiter_priority(exclude={id(last_leaf)})\n    except ValueError:\n        raise CannotSplit(\"No delimiters found\")\n\n    if delimiter_priority == DOT_PRIORITY:\n        if bt.delimiter_count_with_priority(delimiter_priority) == 1:\n            raise CannotSplit(\"Splitting a single attribute from its owner looks wrong\")\n\n    current_line = Line(depth=line.depth, inside_brackets=line.inside_brackets)\n    lowest_depth = sys.maxsize\n    trailing_comma_safe = True\n\n    def append_to_line(leaf: Leaf) -> Iterator[Line]:\n        \"\"\"Append `leaf` to current line or to new line if appending impossible.\"\"\"\n        nonlocal current_line\n        try:\n            current_line.append_safe(leaf, preformatted=True)\n        except ValueError as ve:\n            yield current_line\n\n            current_line = Line(depth=line.depth, inside_brackets=line.inside_brackets)\n            current_line.append(leaf)\n\n    for index, leaf in enumerate(line.leaves):\n        yield from append_to_line(leaf)\n\n        for comment_after in line.comments_after(leaf, index):\n            yield from append_to_line(comment_after)\n\n        lowest_depth = min(lowest_depth, leaf.bracket_depth)\n        if leaf.bracket_depth == lowest_depth and is_vararg(\n            leaf, within=VARARGS_PARENTS\n        ):\n            trailing_comma_safe = trailing_comma_safe and py36\n        leaf_priority = bt.delimiters.get(id(leaf))\n        if leaf_priority == delimiter_priority:\n            yield current_line\n\n            current_line = Line(depth=line.depth, inside_brackets=line.inside_brackets)\n    if current_line:\n        if (\n            trailing_comma_safe\n            and delimiter_priority == COMMA_PRIORITY\n            and current_line.leaves[-1].type != token.COMMA\n            and current_line.leaves[-1].type != STANDALONE_COMMENT\n        ):\n            current_line.append(Leaf(token.COMMA, \",\"))\n        yield current_line",
                "@dont_increase_indentation\ndef standalone_comment_split(line: Line, py36: bool = False) -> Iterator[Line]:\n    \"\"\"Split standalone comments from the rest of the line.\"\"\"\n    if not line.contains_standalone_comments(0):\n        raise CannotSplit(\"Line does not have any standalone comments\")\n\n    current_line = Line(depth=line.depth, inside_brackets=line.inside_brackets)\n\n    def append_to_line(leaf: Leaf) -> Iterator[Line]:\n        \"\"\"Append `leaf` to current line or to new line if appending impossible.\"\"\"\n        nonlocal current_line\n        try:\n            current_line.append_safe(leaf, preformatted=True)\n        except ValueError as ve:\n            yield current_line\n\n            current_line = Line(depth=line.depth, inside_brackets=line.inside_brackets)\n            current_line.append(leaf)\n\n    for index, leaf in enumerate(line.leaves):\n        yield from append_to_line(leaf)\n\n        for comment_after in line.comments_after(leaf, index):\n            yield from append_to_line(comment_after)\n\n    if current_line:\n        yield current_line",
                "def is_import(leaf: Leaf) -> bool:\n    \"\"\"Return True if the given leaf starts an import statement.\"\"\"\n    p = leaf.parent\n    t = leaf.type\n    v = leaf.value\n    return bool(\n        t == token.NAME\n        and (\n            (v == \"import\" and p and p.type == syms.import_name)\n            or (v == \"from\" and p and p.type == syms.import_from)\n        )\n    )",
                "def normalize_prefix(leaf: Leaf, *, inside_brackets: bool) -> None:\n    \"\"\"Leave existing extra newlines if not `inside_brackets`. Remove everything\n    else.\n\n    Note: don't use backslashes for formatting or you'll lose your voting rights.\n    \"\"\"\n    if not inside_brackets:\n        spl = leaf.prefix.split(\"#\")\n        if \"\\\\\" not in spl[0]:\n            nl_count = spl[-1].count(\"\\n\")\n            if len(spl) > 1:\n                nl_count -= 1\n            leaf.prefix = \"\\n\" * nl_count\n            return\n\n    leaf.prefix = \"\"",
                "def normalize_string_prefix(leaf: Leaf, remove_u_prefix: bool = False) -> None:\n    \"\"\"Make all string prefixes lowercase.\n\n    If remove_u_prefix is given, also removes any u prefix from the string.\n\n    Note: Mutates its argument.\n    \"\"\"\n    match = re.match(r\"^([furbFURB]*)(.*)$\", leaf.value, re.DOTALL)\n    assert match is not None, f\"failed to match string {leaf.value!r}\"\n    orig_prefix = match.group(1)\n    new_prefix = orig_prefix.lower()\n    if remove_u_prefix:\n        new_prefix = new_prefix.replace(\"u\", \"\")\n    leaf.value = f\"{new_prefix}{match.group(2)}\"",
                "def normalize_string_quotes(leaf: Leaf) -> None:\n    \"\"\"Prefer double quotes but only if it doesn't cause more escaping.\n\n    Adds or removes backslashes as appropriate. Doesn't parse and fix\n    strings nested in f-strings (yet).\n\n    Note: Mutates its argument.\n    \"\"\"\n    value = leaf.value.lstrip(\"furbFURB\")\n    if value[:3] == '\"\"\"':\n        return\n\n    elif value[:3] == \"'''\":\n        orig_quote = \"'''\"\n        new_quote = '\"\"\"'\n    elif value[0] == '\"':\n        orig_quote = '\"'\n        new_quote = \"'\"\n    else:\n        orig_quote = \"'\"\n        new_quote = '\"'\n    first_quote_pos = leaf.value.find(orig_quote)\n    if first_quote_pos == -1:\n        return  # There's an internal error\n\n    prefix = leaf.value[:first_quote_pos]\n    unescaped_new_quote = re.compile(rf\"(([^\\\\]|^)(\\\\\\\\)*){new_quote}\")\n    escaped_new_quote = re.compile(rf\"([^\\\\]|^)\\\\((?:\\\\\\\\)*){new_quote}\")\n    escaped_orig_quote = re.compile(rf\"([^\\\\]|^)\\\\((?:\\\\\\\\)*){orig_quote}\")\n    body = leaf.value[first_quote_pos + len(orig_quote) : -len(orig_quote)]\n    if \"r\" in prefix.casefold():\n        if unescaped_new_quote.search(body):\n            # There's at least one unescaped new_quote in this raw string\n            # so converting is impossible\n            return\n\n        # Do not introduce or remove backslashes in raw strings\n        new_body = body\n    else:\n        # remove unnecessary escapes\n        new_body = sub_twice(escaped_new_quote, rf\"\\1\\2{new_quote}\", body)\n        if body != new_body:\n            # Consider the string without unnecessary escapes as the original\n            body = new_body\n            leaf.value = f\"{prefix}{orig_quote}{body}{orig_quote}\"\n        new_body = sub_twice(escaped_orig_quote, rf\"\\1\\2{orig_quote}\", new_body)\n        new_body = sub_twice(unescaped_new_quote, rf\"\\1\\\\{new_quote}\", new_body)\n    if \"f\" in prefix.casefold():\n        matches = re.findall(r\"[^{]\\{(.*?)\\}[^}]\", new_body)\n        for m in matches:\n            if \"\\\\\" in str(m):\n                # Do not introduce backslashes in interpolated expressions\n                return\n    if new_quote == '\"\"\"' and new_body[-1:] == '\"':\n        # edge case:\n        new_body = new_body[:-1] + '\\\\\"'\n    orig_escape_count = body.count(\"\\\\\")\n    new_escape_count = new_body.count(\"\\\\\")\n    if new_escape_count > orig_escape_count:\n        return  # Do not introduce more escaping\n\n    if new_escape_count == orig_escape_count and orig_quote == '\"':\n        return  # Prefer double quotes\n\n    leaf.value = f\"{prefix}{new_quote}{new_body}{new_quote}\"",
                "def normalize_numeric_literal(leaf: Leaf, allow_underscores: bool) -> None:\n    \"\"\"Normalizes numeric (float, int, and complex) literals.\n\n    All letters used in the representation are normalized to lowercase, long number\n    literals are split using underscores.\n    \"\"\"\n    text = leaf.value.lower()\n    if text.startswith((\"0o\", \"0x\", \"0b\")):\n        # Leave octal, hex, and binary literals alone.\n        pass\n    elif \"e\" in text:\n        before, after = text.split(\"e\")\n        sign = \"\"\n        if after.startswith(\"-\"):\n            after = after[1:]\n            sign = \"-\"\n        elif after.startswith(\"+\"):\n            after = after[1:]\n        before = format_float_or_int_string(before, allow_underscores)\n        after = format_int_string(after, allow_underscores)\n        text = f\"{before}e{sign}{after}\"\n    elif text.endswith((\"j\", \"l\")):\n        number = text[:-1]\n        suffix = text[-1]\n        text = f\"{format_float_or_int_string(number, allow_underscores)}{suffix}\"\n    else:\n        text = format_float_or_int_string(text, allow_underscores)\n    leaf.value = text",
                "def format_float_or_int_string(text: str, allow_underscores: bool) -> str:\n    \"\"\"Formats a float string like \"1.0\".\"\"\"\n    if \".\" not in text:\n        return format_int_string(text, allow_underscores)\n\n    before, after = text.split(\".\")\n    before = format_int_string(before, allow_underscores) if before else \"0\"\n    after = format_int_string(after, allow_underscores) if after else \"0\"\n    return f\"{before}.{after}\"",
                "def format_int_string(text: str, allow_underscores: bool) -> str:\n    \"\"\"Normalizes underscores in a string to e.g. 1_000_000.\n\n    Input must be a string of at least six digits and optional underscores.\n    \"\"\"\n    if not allow_underscores:\n        return text\n\n    text = text.replace(\"_\", \"\")\n    if len(text) <= 6:\n        # No underscores for numbers <= 6 digits long.\n        return text\n\n    # Avoid removing leading zeros, which are important if we're formatting\n    # part of a number like \"0.001\".\n    return format(int(\"1\" + text), \"3_\")[1:].lstrip(\"_\")",
                "def normalize_invisible_parens(node: Node, parens_after: Set[str]) -> None:\n    \"\"\"Make existing optional parentheses invisible or create new ones.\n\n    `parens_after` is a set of string leaf values immeditely after which parens\n    should be put.\n\n    Standardizes on visible parentheses for single-element tuples, and keeps\n    existing visible parentheses for other tuples and generator expressions.\n    \"\"\"\n    for pc in list_comments(node.prefix, is_endmarker=False):\n        if pc.value in FMT_OFF:\n            # This `node` has a prefix with `# fmt: off`, don't mess with parens.\n            return\n\n    check_lpar = False\n    for index, child in enumerate(list(node.children)):\n        if check_lpar:\n            if child.type == syms.atom:\n                if maybe_make_parens_invisible_in_atom(child):\n                    lpar = Leaf(token.LPAR, \"\")\n                    rpar = Leaf(token.RPAR, \"\")\n                    index = child.remove() or 0\n                    node.insert_child(index, Node(syms.atom, [lpar, child, rpar]))\n            elif is_one_tuple(child):\n                # wrap child in visible parentheses\n                lpar = Leaf(token.LPAR, \"(\")\n                rpar = Leaf(token.RPAR, \")\")\n                child.remove()\n                node.insert_child(index, Node(syms.atom, [lpar, child, rpar]))\n            elif node.type == syms.import_from:\n                # \"import from\" nodes store parentheses directly as part of\n                # the statement\n                if child.type == token.LPAR:\n                    # make parentheses invisible\n                    child.value = \"\"  # type: ignore\n                    node.children[-1].value = \"\"  # type: ignore\n                elif child.type != token.STAR:\n                    # insert invisible parentheses\n                    node.insert_child(index, Leaf(token.LPAR, \"\"))\n                    node.append_child(Leaf(token.RPAR, \"\"))\n                break\n\n            elif not (isinstance(child, Leaf) and is_multiline_string(child)):\n                # wrap child in invisible parentheses\n                lpar = Leaf(token.LPAR, \"\")\n                rpar = Leaf(token.RPAR, \"\")\n                index = child.remove() or 0\n                node.insert_child(index, Node(syms.atom, [lpar, child, rpar]))\n\n        check_lpar = isinstance(child, Leaf) and child.value in parens_after",
                "def normalize_fmt_off(node: Node) -> None:\n    \"\"\"Convert content between `# fmt: off`/`# fmt: on` into standalone comments.\"\"\"\n    try_again = True\n    while try_again:\n        try_again = convert_one_fmt_off_pair(node)",
                "def convert_one_fmt_off_pair(node: Node) -> bool:\n    \"\"\"Convert content of a single `# fmt: off`/`# fmt: on` into a standalone comment.\n\n    Returns True if a pair was converted.\n    \"\"\"\n    for leaf in node.leaves():\n        previous_consumed = 0\n        for comment in list_comments(leaf.prefix, is_endmarker=False):\n            if comment.value in FMT_OFF:\n                # We only want standalone comments. If there's no previous leaf or\n                # the previous leaf is indentation, it's a standalone comment in\n                # disguise.\n                if comment.type != STANDALONE_COMMENT:\n                    prev = preceding_leaf(leaf)\n                    if prev and prev.type not in WHITESPACE:\n                        continue\n\n                ignored_nodes = list(generate_ignored_nodes(leaf))\n                if not ignored_nodes:\n                    continue\n\n                first = ignored_nodes[0]  # Can be a container node with the `leaf`.\n                parent = first.parent\n                prefix = first.prefix\n                first.prefix = prefix[comment.consumed :]\n                hidden_value = (\n                    comment.value + \"\\n\" + \"\".join(str(n) for n in ignored_nodes)\n                )\n                if hidden_value.endswith(\"\\n\"):\n                    # That happens when one of the `ignored_nodes` ended with a NEWLINE\n                    # leaf (possibly followed by a DEDENT).\n                    hidden_value = hidden_value[:-1]\n                first_idx = None\n                for ignored in ignored_nodes:\n                    index = ignored.remove()\n                    if first_idx is None:\n                        first_idx = index\n                assert parent is not None, \"INTERNAL ERROR: fmt: on/off handling (1)\"\n                assert first_idx is not None, \"INTERNAL ERROR: fmt: on/off handling (2)\"\n                parent.insert_child(\n                    first_idx,\n                    Leaf(\n                        STANDALONE_COMMENT,\n                        hidden_value,\n                        prefix=prefix[:previous_consumed] + \"\\n\" * comment.newlines,\n                    ),\n                )\n                return True\n\n            previous_consumed = comment.consumed\n\n    return False",
                "def generate_ignored_nodes(leaf: Leaf) -> Iterator[LN]:\n    \"\"\"Starting from the container of `leaf`, generate all leaves until `# fmt: on`.\n\n    Stops at the end of the block.\n    \"\"\"\n    container: Optional[LN] = container_of(leaf)\n    while container is not None and container.type != token.ENDMARKER:\n        for comment in list_comments(container.prefix, is_endmarker=False):\n            if comment.value in FMT_ON:\n                return\n\n        yield container\n\n        container = container.next_sibling",
                "def maybe_make_parens_invisible_in_atom(node: LN) -> bool:\n    \"\"\"If it's safe, make the parens in the atom `node` invisible, recursively.\n\n    Returns whether the node should itself be wrapped in invisible parentheses.\n\n    \"\"\"\n    if (\n        node.type != syms.atom\n        or is_empty_tuple(node)\n        or is_one_tuple(node)\n        or is_yield(node)\n        or max_delimiter_priority_in_atom(node) >= COMMA_PRIORITY\n    ):\n        return False\n\n    first = node.children[0]\n    last = node.children[-1]\n    if first.type == token.LPAR and last.type == token.RPAR:\n        # make parentheses invisible\n        first.value = \"\"  # type: ignore\n        last.value = \"\"  # type: ignore\n        if len(node.children) > 1:\n            maybe_make_parens_invisible_in_atom(node.children[1])\n        return False\n\n    return True",
                "def is_empty_tuple(node: LN) -> bool:\n    \"\"\"Return True if `node` holds an empty tuple.\"\"\"\n    return (\n        node.type == syms.atom\n        and len(node.children) == 2\n        and node.children[0].type == token.LPAR\n        and node.children[1].type == token.RPAR\n    )",
                "def is_one_tuple(node: LN) -> bool:\n    \"\"\"Return True if `node` holds a tuple with one element, with or without parens.\"\"\"\n    if node.type == syms.atom:\n        if len(node.children) != 3:\n            return False\n\n        lpar, gexp, rpar = node.children\n        if not (\n            lpar.type == token.LPAR\n            and gexp.type == syms.testlist_gexp\n            and rpar.type == token.RPAR\n        ):\n            return False\n\n        return len(gexp.children) == 2 and gexp.children[1].type == token.COMMA\n\n    return (\n        node.type in IMPLICIT_TUPLE\n        and len(node.children) == 2\n        and node.children[1].type == token.COMMA\n    )",
                "def is_yield(node: LN) -> bool:\n    \"\"\"Return True if `node` holds a `yield` or `yield from` expression.\"\"\"\n    if node.type == syms.yield_expr:\n        return True\n\n    if node.type == token.NAME and node.value == \"yield\":  # type: ignore\n        return True\n\n    if node.type != syms.atom:\n        return False\n\n    if len(node.children) != 3:\n        return False\n\n    lpar, expr, rpar = node.children\n    if lpar.type == token.LPAR and rpar.type == token.RPAR:\n        return is_yield(expr)\n\n    return False",
                "def is_vararg(leaf: Leaf, within: Set[NodeType]) -> bool:\n    \"\"\"Return True if `leaf` is a star or double star in a vararg or kwarg.\n\n    If `within` includes VARARGS_PARENTS, this applies to function signatures.\n    If `within` includes UNPACKING_PARENTS, it applies to right hand-side\n    extended iterable unpacking (PEP 3132) and additional unpacking\n    generalizations (PEP 448).\n    \"\"\"\n    if leaf.type not in STARS or not leaf.parent:\n        return False\n\n    p = leaf.parent\n    if p.type == syms.star_expr:\n        # Star expressions are also used as assignment targets in extended\n        # iterable unpacking (PEP 3132).  See what its parent is instead.\n        if not p.parent:\n            return False\n\n        p = p.parent\n\n    return p.type in within",
                "def is_multiline_string(leaf: Leaf) -> bool:\n    \"\"\"Return True if `leaf` is a multiline string that actually spans many lines.\"\"\"\n    value = leaf.value.lstrip(\"furbFURB\")\n    return value[:3] in {'\"\"\"', \"'''\"} and \"\\n\" in value",
                "def is_stub_suite(node: Node) -> bool:\n    \"\"\"Return True if `node` is a suite with a stub body.\"\"\"\n    if (\n        len(node.children) != 4\n        or node.children[0].type != token.NEWLINE\n        or node.children[1].type != token.INDENT\n        or node.children[3].type != token.DEDENT\n    ):\n        return False\n\n    return is_stub_body(node.children[2])",
                "def is_stub_body(node: LN) -> bool:\n    \"\"\"Return True if `node` is a simple statement containing an ellipsis.\"\"\"\n    if not isinstance(node, Node) or node.type != syms.simple_stmt:\n        return False\n\n    if len(node.children) != 2:\n        return False\n\n    child = node.children[0]\n    return (\n        child.type == syms.atom\n        and len(child.children) == 3\n        and all(leaf == Leaf(token.DOT, \".\") for leaf in child.children)\n    )",
                "def max_delimiter_priority_in_atom(node: LN) -> int:\n    \"\"\"Return maximum delimiter priority inside `node`.\n\n    This is specific to atoms with contents contained in a pair of parentheses.\n    If `node` isn't an atom or there are no enclosing parentheses, returns 0.\n    \"\"\"\n    if node.type != syms.atom:\n        return 0\n\n    first = node.children[0]\n    last = node.children[-1]\n    if not (first.type == token.LPAR and last.type == token.RPAR):\n        return 0\n\n    bt = BracketTracker()\n    for c in node.children[1:-1]:\n        if isinstance(c, Leaf):\n            bt.mark(c)\n        else:\n            for leaf in c.leaves():\n                bt.mark(leaf)\n    try:\n        return bt.max_delimiter_priority()\n\n    except ValueError:\n        return 0",
                "def ensure_visible(leaf: Leaf) -> None:\n    \"\"\"Make sure parentheses are visible.\n\n    They could be invisible as part of some statements (see\n    :func:`normalize_invible_parens` and :func:`visit_import_from`).\n    \"\"\"\n    if leaf.type == token.LPAR:\n        leaf.value = \"(\"\n    elif leaf.type == token.RPAR:\n        leaf.value = \")\"",
                "def should_explode(line: Line, opening_bracket: Leaf) -> bool:\n    \"\"\"Should `line` immediately be split with `delimiter_split()` after RHS?\"\"\"\n    if not (\n        opening_bracket.parent\n        and opening_bracket.parent.type in {syms.atom, syms.import_from}\n        and opening_bracket.value in \"[{(\"\n    ):\n        return False\n\n    try:\n        last_leaf = line.leaves[-1]\n        exclude = {id(last_leaf)} if last_leaf.type == token.COMMA else set()\n        max_priority = line.bracket_tracker.max_delimiter_priority(exclude=exclude)\n    except (IndexError, ValueError):\n        return False\n\n    return max_priority == COMMA_PRIORITY",
                "def is_python36(node: Node) -> bool:\n    \"\"\"Return True if the current file is using Python 3.6+ features.\n\n    Currently looking for:\n    - f-strings;\n    - underscores in numeric literals; and\n    - trailing commas after * or ** in function signatures and calls.\n    \"\"\"\n    for n in node.pre_order():\n        if n.type == token.STRING:\n            value_head = n.value[:2]  # type: ignore\n            if value_head in {'f\"', 'F\"', \"f'\", \"F'\", \"rf\", \"fr\", \"RF\", \"FR\"}:\n                return True\n\n        elif n.type == token.NUMBER:\n            if \"_\" in n.value:  # type: ignore\n                return True\n\n        elif (\n            n.type in {syms.typedargslist, syms.arglist}\n            and n.children\n            and n.children[-1].type == token.COMMA\n        ):\n            for ch in n.children:\n                if ch.type in STARS:\n                    return True\n\n                if ch.type == syms.argument:\n                    for argch in ch.children:\n                        if argch.type in STARS:\n                            return True\n\n    return False",
                "def generate_trailers_to_omit(line: Line, line_length: int) -> Iterator[Set[LeafID]]:\n    \"\"\"Generate sets of closing bracket IDs that should be omitted in a RHS.\n\n    Brackets can be omitted if the entire trailer up to and including\n    a preceding closing bracket fits in one line.\n\n    Yielded sets are cumulative (contain results of previous yields, too).  First\n    set is empty.\n    \"\"\"\n\n    omit: Set[LeafID] = set()\n    yield omit\n\n    length = 4 * line.depth\n    opening_bracket = None\n    closing_bracket = None\n    optional_brackets: Set[LeafID] = set()\n    inner_brackets: Set[LeafID] = set()\n    for index, leaf, leaf_length in enumerate_with_length(line, reversed=True):\n        length += leaf_length\n        if length > line_length:\n            break\n\n        has_inline_comment = leaf_length > len(leaf.value) + len(leaf.prefix)\n        if leaf.type == STANDALONE_COMMENT or has_inline_comment:\n            break\n\n        optional_brackets.discard(id(leaf))\n        if opening_bracket:\n            if leaf is opening_bracket:\n                opening_bracket = None\n            elif leaf.type in CLOSING_BRACKETS:\n                inner_brackets.add(id(leaf))\n        elif leaf.type in CLOSING_BRACKETS:\n            if not leaf.value:\n                optional_brackets.add(id(opening_bracket))\n                continue\n\n            if index > 0 and line.leaves[index - 1].type in OPENING_BRACKETS:\n                # Empty brackets would fail a split so treat them as \"inner\"\n                # brackets (e.g. only add them to the `omit` set if another\n                # pair of brackets was good enough.\n                inner_brackets.add(id(leaf))\n                continue\n\n            opening_bracket = leaf.opening_bracket\n            if closing_bracket:\n                omit.add(id(closing_bracket))\n                omit.update(inner_brackets)\n                inner_brackets.clear()\n                yield omit\n            closing_bracket = leaf",
                "def get_future_imports(node: Node) -> Set[str]:\n    \"\"\"Return a set of __future__ imports in the file.\"\"\"\n    imports: Set[str] = set()\n\n    def get_imports_from_children(children: List[LN]) -> Generator[str, None, None]:\n        for child in children:\n            if isinstance(child, Leaf):\n                if child.type == token.NAME:\n                    yield child.value\n            elif child.type == syms.import_as_name:\n                orig_name = child.children[0]\n                assert isinstance(orig_name, Leaf), \"Invalid syntax parsing imports\"\n                assert orig_name.type == token.NAME, \"Invalid syntax parsing imports\"\n                yield orig_name.value\n            elif child.type == syms.import_as_names:\n                yield from get_imports_from_children(child.children)\n            else:\n                assert False, \"Invalid syntax parsing imports\"\n\n    for child in node.children:\n        if child.type != syms.simple_stmt:\n            break\n        first_child = child.children[0]\n        if isinstance(first_child, Leaf):\n            # Continue looking if we see a docstring; otherwise stop.\n            if (\n                len(child.children) == 2\n                and first_child.type == token.STRING\n                and child.children[1].type == token.NEWLINE\n            ):\n                continue\n            else:\n                break\n        elif first_child.type == syms.import_from:\n            module_name = first_child.children[1]\n            if not isinstance(module_name, Leaf) or module_name.value != \"__future__\":\n                break\n            imports |= set(get_imports_from_children(first_child.children[3:]))\n        else:\n            break\n    return imports",
                "def gen_python_files_in_dir(\n    path: Path,\n    root: Path,\n    include: Pattern[str],\n    exclude: Pattern[str],\n    report: \"Report\",\n) -> Iterator[Path]:\n    \"\"\"Generate all files under `path` whose paths are not excluded by the\n    `exclude` regex, but are included by the `include` regex.\n\n    Symbolic links pointing outside of the `root` directory are ignored.\n\n    `report` is where output about exclusions goes.\n    \"\"\"\n    assert root.is_absolute(), f\"INTERNAL ERROR: `root` must be absolute but is {root}\"\n    for child in path.iterdir():\n        try:\n            normalized_path = \"/\" + child.resolve().relative_to(root).as_posix()\n        except ValueError:\n            if child.is_symlink():\n                report.path_ignored(\n                    child, f\"is a symbolic link that points outside {root}\"\n                )\n                continue\n\n            raise\n\n        if child.is_dir():\n            normalized_path += \"/\"\n        exclude_match = exclude.search(normalized_path)\n        if exclude_match and exclude_match.group(0):\n            report.path_ignored(child, f\"matches the --exclude regular expression\")\n            continue\n\n        if child.is_dir():\n            yield from gen_python_files_in_dir(child, root, include, exclude, report)\n\n        elif child.is_file():\n            include_match = include.search(normalized_path)\n            if include_match:\n                yield child",
                "@lru_cache()\ndef find_project_root(srcs: Iterable[str]) -> Path:\n    \"\"\"Return a directory containing .git, .hg, or pyproject.toml.\n\n    That directory can be one of the directories passed in `srcs` or their\n    common parent.\n\n    If no directory in the tree contains a marker that would specify it's the\n    project root, the root of the file system is returned.\n    \"\"\"\n    if not srcs:\n        return Path(\"/\").resolve()\n\n    common_base = min(Path(src).resolve() for src in srcs)\n    if common_base.is_dir():\n        # Append a fake file so `parents` below returns `common_base_dir`, too.\n        common_base /= \"fake-file\"\n    for directory in common_base.parents:\n        if (directory / \".git\").is_dir():\n            return directory\n\n        if (directory / \".hg\").is_dir():\n            return directory\n\n        if (directory / \"pyproject.toml\").is_file():\n            return directory\n\n    return directory",
                "def assert_equivalent(src: str, dst: str) -> None:\n    \"\"\"Raise AssertionError if `src` and `dst` aren't equivalent.\"\"\"\n\n    import ast\n    import traceback\n\n    def _v(node: ast.AST, depth: int = 0) -> Iterator[str]:\n        \"\"\"Simple visitor generating strings to compare ASTs by content.\"\"\"\n        yield f\"{'  ' * depth}{node.__class__.__name__}(\"\n\n        for field in sorted(node._fields):\n            try:\n                value = getattr(node, field)\n            except AttributeError:\n                continue\n\n            yield f\"{'  ' * (depth+1)}{field}=\"\n\n            if isinstance(value, list):\n                for item in value:\n                    if isinstance(item, ast.AST):\n                        yield from _v(item, depth + 2)\n\n            elif isinstance(value, ast.AST):\n                yield from _v(value, depth + 2)\n\n            else:\n                yield f\"{'  ' * (depth+2)}{value!r},  # {value.__class__.__name__}\"\n\n        yield f\"{'  ' * depth})  # /{node.__class__.__name__}\"\n\n    try:\n        src_ast = ast.parse(src)\n    except Exception as exc:\n        major, minor = sys.version_info[:2]\n        raise AssertionError(\n            f\"cannot use --safe with this file; failed to parse source file \"\n            f\"with Python {major}.{minor}'s builtin AST. Re-run with --fast \"\n            f\"or stop using deprecated Python 2 syntax. AST error message: {exc}\"\n        )\n\n    try:\n        dst_ast = ast.parse(dst)\n    except Exception as exc:\n        log = dump_to_file(\"\".join(traceback.format_tb(exc.__traceback__)), dst)\n        raise AssertionError(\n            f\"INTERNAL ERROR: Black produced invalid code: {exc}. \"\n            f\"Please report a bug on https://github.com/ambv/black/issues.  \"\n            f\"This invalid output might be helpful: {log}\"\n        ) from None\n\n    src_ast_str = \"\\n\".join(_v(src_ast))\n    dst_ast_str = \"\\n\".join(_v(dst_ast))\n    if src_ast_str != dst_ast_str:\n        log = dump_to_file(diff(src_ast_str, dst_ast_str, \"src\", \"dst\"))\n        raise AssertionError(\n            f\"INTERNAL ERROR: Black produced code that is not equivalent to \"\n            f\"the source.  \"\n            f\"Please report a bug on https://github.com/ambv/black/issues.  \"\n            f\"This diff might be helpful: {log}\"\n        ) from None",
                "def assert_stable(\n    src: str, dst: str, line_length: int, mode: FileMode = FileMode.AUTO_DETECT\n) -> None:\n    \"\"\"Raise AssertionError if `dst` reformats differently the second time.\"\"\"\n    newdst = format_str(dst, line_length=line_length, mode=mode)\n    if dst != newdst:\n        log = dump_to_file(\n            diff(src, dst, \"source\", \"first pass\"),\n            diff(dst, newdst, \"first pass\", \"second pass\"),\n        )\n        raise AssertionError(\n            f\"INTERNAL ERROR: Black produced different code on the second pass \"\n            f\"of the formatter.  \"\n            f\"Please report a bug on https://github.com/ambv/black/issues.  \"\n            f\"This diff might be helpful: {log}\"\n        ) from None",
                "def dump_to_file(*output: str) -> str:\n    \"\"\"Dump `output` to a temporary file. Return path to the file.\"\"\"\n    import tempfile\n\n    with tempfile.NamedTemporaryFile(\n        mode=\"w\", prefix=\"blk_\", suffix=\".log\", delete=False, encoding=\"utf8\"\n    ) as f:\n        for lines in output:\n            f.write(lines)\n            if lines and lines[-1] != \"\\n\":\n                f.write(\"\\n\")\n    return f.name",
                "def diff(a: str, b: str, a_name: str, b_name: str) -> str:\n    \"\"\"Return a unified diff string between strings `a` and `b`.\"\"\"\n    import difflib\n\n    a_lines = [line + \"\\n\" for line in a.split(\"\\n\")]\n    b_lines = [line + \"\\n\" for line in b.split(\"\\n\")]\n    return \"\".join(\n        difflib.unified_diff(a_lines, b_lines, fromfile=a_name, tofile=b_name, n=5)\n    )",
                "def cancel(tasks: Iterable[asyncio.Task]) -> None:\n    \"\"\"asyncio signal handler that cancels all `tasks` and reports to stderr.\"\"\"\n    err(\"Aborted!\")\n    for task in tasks:\n        task.cancel()",
                "def shutdown(loop: BaseEventLoop) -> None:\n    \"\"\"Cancel all pending tasks on `loop`, wait for them, and close the loop.\"\"\"\n    try:\n        # This part is borrowed from asyncio/runners.py in Python 3.7b2.\n        to_cancel = [task for task in asyncio.Task.all_tasks(loop) if not task.done()]\n        if not to_cancel:\n            return\n\n        for task in to_cancel:\n            task.cancel()\n        loop.run_until_complete(\n            asyncio.gather(*to_cancel, loop=loop, return_exceptions=True)\n        )\n    finally:\n        # `concurrent.futures.Future` objects cannot be cancelled once they\n        # are already running. There might be some when the `shutdown()` happened.\n        # Silence their logger's spew about the event loop being closed.\n        cf_logger = logging.getLogger(\"concurrent.futures\")\n        cf_logger.setLevel(logging.CRITICAL)\n        loop.close()",
                "def sub_twice(regex: Pattern[str], replacement: str, original: str) -> str:\n    \"\"\"Replace `regex` with `replacement` twice on `original`.\n\n    This is used by string normalization to perform replaces on\n    overlapping matches.\n    \"\"\"\n    return regex.sub(replacement, regex.sub(replacement, original))",
                "def re_compile_maybe_verbose(regex: str) -> Pattern[str]:\n    \"\"\"Compile a regular expression string in `regex`.\n\n    If it contains newlines, use verbose mode.\n    \"\"\"\n    if \"\\n\" in regex:\n        regex = \"(?x)\" + regex\n    return re.compile(regex)",
                "def enumerate_reversed(sequence: Sequence[T]) -> Iterator[Tuple[Index, T]]:\n    \"\"\"Like `reversed(enumerate(sequence))` if that were possible.\"\"\"\n    index = len(sequence) - 1\n    for element in reversed(sequence):\n        yield (index, element)\n        index -= 1",
                "def enumerate_with_length(\n    line: Line, reversed: bool = False\n) -> Iterator[Tuple[Index, Leaf, int]]:\n    \"\"\"Return an enumeration of leaves with their length.\n\n    Stops prematurely on multiline strings and standalone comments.\n    \"\"\"\n    op = cast(\n        Callable[[Sequence[Leaf]], Iterator[Tuple[Index, Leaf]]],\n        enumerate_reversed if reversed else enumerate,\n    )\n    for index, leaf in op(line.leaves):\n        length = len(leaf.prefix) + len(leaf.value)\n        if \"\\n\" in leaf.value:\n            return  # Multiline strings, we can't continue.\n\n        comment: Optional[Leaf]\n        for comment in line.comments_after(leaf, index):\n            length += len(comment.value)\n\n        yield index, leaf, length",
                "def is_line_short_enough(line: Line, *, line_length: int, line_str: str = \"\") -> bool:\n    \"\"\"Return True if `line` is no longer than `line_length`.\n\n    Uses the provided `line_str` rendering, if any, otherwise computes a new one.\n    \"\"\"\n    if not line_str:\n        line_str = str(line).strip(\"\\n\")\n    return (\n        len(line_str) <= line_length\n        and \"\\n\" not in line_str  # multiline strings\n        and not line.contains_standalone_comments()\n    )",
                "def can_be_split(line: Line) -> bool:\n    \"\"\"Return False if the line cannot be split *for sure*.\n\n    This is not an exhaustive search but a cheap heuristic that we can use to\n    avoid some unfortunate formattings (mostly around wrapping unsplittable code\n    in unnecessary parentheses).\n    \"\"\"\n    leaves = line.leaves\n    if len(leaves) < 2:\n        return False\n\n    if leaves[0].type == token.STRING and leaves[1].type == token.DOT:\n        call_count = 0\n        dot_count = 0\n        next = leaves[-1]\n        for leaf in leaves[-2::-1]:\n            if leaf.type in OPENING_BRACKETS:\n                if next.type not in CLOSING_BRACKETS:\n                    return False\n\n                call_count += 1\n            elif leaf.type == token.DOT:\n                dot_count += 1\n            elif leaf.type == token.NAME:\n                if not (next.type == token.DOT or next.type in OPENING_BRACKETS):\n                    return False\n\n            elif leaf.type not in CLOSING_BRACKETS:\n                return False\n\n            if dot_count > 1 and call_count > 1:\n                return False\n\n    return True",
                "def can_omit_invisible_parens(line: Line, line_length: int) -> bool:\n    \"\"\"Does `line` have a shape safe to reformat without optional parens around it?\n\n    Returns True for only a subset of potentially nice looking formattings but\n    the point is to not return false positives that end up producing lines that\n    are too long.\n    \"\"\"\n    bt = line.bracket_tracker\n    if not bt.delimiters:\n        # Without delimiters the optional parentheses are useless.\n        return True\n\n    max_priority = bt.max_delimiter_priority()\n    if bt.delimiter_count_with_priority(max_priority) > 1:\n        # With more than one delimiter of a kind the optional parentheses read better.\n        return False\n\n    if max_priority == DOT_PRIORITY:\n        # A single stranded method call doesn't require optional parentheses.\n        return True\n\n    assert len(line.leaves) >= 2, \"Stranded delimiter\"\n\n    first = line.leaves[0]\n    second = line.leaves[1]\n    penultimate = line.leaves[-2]\n    last = line.leaves[-1]\n\n    # With a single delimiter, omit if the expression starts or ends with\n    # a bracket.\n    if first.type in OPENING_BRACKETS and second.type not in CLOSING_BRACKETS:\n        remainder = False\n        length = 4 * line.depth\n        for _index, leaf, leaf_length in enumerate_with_length(line):\n            if leaf.type in CLOSING_BRACKETS and leaf.opening_bracket is first:\n                remainder = True\n            if remainder:\n                length += leaf_length\n                if length > line_length:\n                    break\n\n                if leaf.type in OPENING_BRACKETS:\n                    # There are brackets we can further split on.\n                    remainder = False\n\n        else:\n            # checked the entire string and line length wasn't exceeded\n            if len(line.leaves) == _index + 1:\n                return True\n\n        # Note: we are not returning False here because a line might have *both*\n        # a leading opening bracket and a trailing closing bracket.  If the\n        # opening bracket doesn't match our rule, maybe the closing will.\n\n    if (\n        last.type == token.RPAR\n        or last.type == token.RBRACE\n        or (\n            # don't use indexing for omitting optional parentheses;\n            # it looks weird\n            last.type == token.RSQB\n            and last.parent\n            and last.parent.type != syms.trailer\n        )\n    ):\n        if penultimate.type in OPENING_BRACKETS:\n            # Empty brackets don't help.\n            return False\n\n        if is_multiline_string(first):\n            # Additional wrapping of a multiline string in this situation is\n            # unnecessary.\n            return True\n\n        length = 4 * line.depth\n        seen_other_brackets = False\n        for _index, leaf, leaf_length in enumerate_with_length(line):\n            length += leaf_length\n            if leaf is last.opening_bracket:\n                if seen_other_brackets or length <= line_length:\n                    return True\n\n            elif leaf.type in OPENING_BRACKETS:\n                # There are brackets we can further split on.\n                seen_other_brackets = True\n\n    return False",
                "def get_cache_file(line_length: int, mode: FileMode) -> Path:\n    return CACHE_DIR / f\"cache.{line_length}.{mode.value}.pickle\"",
                "def read_cache(line_length: int, mode: FileMode) -> Cache:\n    \"\"\"Read the cache if it exists and is well formed.\n\n    If it is not well formed, the call to write_cache later should resolve the issue.\n    \"\"\"\n    cache_file = get_cache_file(line_length, mode)\n    if not cache_file.exists():\n        return {}\n\n    with cache_file.open(\"rb\") as fobj:\n        try:\n            cache: Cache = pickle.load(fobj)\n        except pickle.UnpicklingError:\n            return {}\n\n    return cache",
                "def get_cache_info(path: Path) -> CacheInfo:\n    \"\"\"Return the information used to check if a file is already formatted or not.\"\"\"\n    stat = path.stat()\n    return stat.st_mtime, stat.st_size",
                "def filter_cached(cache: Cache, sources: Iterable[Path]) -> Tuple[Set[Path], Set[Path]]:\n    \"\"\"Split an iterable of paths in `sources` into two sets.\n\n    The first contains paths of files that modified on disk or are not in the\n    cache. The other contains paths to non-modified files.\n    \"\"\"\n    todo, done = set(), set()\n    for src in sources:\n        src = src.resolve()\n        if cache.get(src) != get_cache_info(src):\n            todo.add(src)\n        else:\n            done.add(src)\n    return todo, done",
                "def write_cache(\n    cache: Cache, sources: Iterable[Path], line_length: int, mode: FileMode\n) -> None:\n    \"\"\"Update the cache file.\"\"\"\n    cache_file = get_cache_file(line_length, mode)\n    try:\n        if not CACHE_DIR.exists():\n            CACHE_DIR.mkdir(parents=True)\n        new_cache = {**cache, **{src.resolve(): get_cache_info(src) for src in sources}}\n        with cache_file.open(\"wb\") as fobj:\n            pickle.dump(new_cache, fobj, protocol=pickle.HIGHEST_PROTOCOL)\n    except OSError:\n        pass",
                "def patch_click() -> None:\n    \"\"\"Make Click not crash.\n\n    On certain misconfigured environments, Python 3 selects the ASCII encoding as the\n    default which restricts paths that it can access during the lifetime of the\n    application.  Click refuses to work in this scenario by raising a RuntimeError.\n\n    In case of Black the likelihood that non-ASCII characters are going to be used in\n    file paths is minimal since it's Python source code.  Moreover, this crash was\n    spurious on Python 3.7 thanks to PEP 538 and PEP 540.\n    \"\"\"\n    try:\n        from click import core\n        from click import _unicodefun  # type: ignore\n    except ModuleNotFoundError:\n        return\n\n    for module in (core, _unicodefun):\n        if hasattr(module, \"_verify_python3_env\"):\n            module._verify_python3_env = lambda: None",
                "@classmethod\ndef from_configuration(cls, *, check: bool, diff: bool) -> \"WriteBack\":\n    if check and not diff:\n        return cls.CHECK\n\n    return cls.DIFF if diff else cls.YES",
                "@classmethod\ndef from_configuration(\n    cls, *, py36: bool, pyi: bool, skip_string_normalization: bool\n) -> \"FileMode\":\n    mode = cls.AUTO_DETECT\n    if py36:\n        mode |= cls.PYTHON36\n    if pyi:\n        mode |= cls.PYI\n    if skip_string_normalization:\n        mode |= cls.NO_STRING_NORMALIZATION\n    return mode",
                "def visit(self, node: LN) -> Iterator[T]:\n    \"\"\"Main method to visit `node` and its children.\n\n    It tries to find a `visit_*()` method for the given `node.type`, like\n    `visit_simple_stmt` for Node objects or `visit_INDENT` for Leaf objects.\n    If no dedicated `visit_*()` method is found, chooses `visit_default()`\n    instead.\n\n    Then yields objects of type `T` from the selected visitor.\n    \"\"\"\n    if node.type < 256:\n        name = token.tok_name[node.type]\n    else:\n        name = type_repr(node.type)\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)",
                "def visit_default(self, node: LN) -> Iterator[T]:\n    \"\"\"Default `visit_*()` implementation. Recurses to children of `node`.\"\"\"\n    if isinstance(node, Node):\n        for child in node.children:\n            yield from self.visit(child)",
                "def visit_default(self, node: LN) -> Iterator[T]:\n    indent = \" \" * (2 * self.tree_depth)\n    if isinstance(node, Node):\n        _type = type_repr(node.type)\n        out(f\"{indent}{_type}\", fg=\"yellow\")\n        self.tree_depth += 1\n        for child in node.children:\n            yield from self.visit(child)\n\n        self.tree_depth -= 1\n        out(f\"{indent}/{_type}\", fg=\"yellow\", bold=False)\n    else:\n        _type = token.tok_name.get(node.type, str(node.type))\n        out(f\"{indent}{_type}\", fg=\"blue\", nl=False)\n        if node.prefix:\n            # We don't have to handle prefixes for `Node` objects since\n            # that delegates to the first child anyway.\n            out(f\" {node.prefix!r}\", fg=\"green\", bold=False, nl=False)\n        out(f\" {node.value!r}\", fg=\"blue\", bold=False)",
                "@classmethod\ndef show(cls, code: Union[str, Leaf, Node]) -> None:\n    \"\"\"Pretty-print the lib2to3 AST of a given string of `code`.\n\n    Convenience method for debugging.\n    \"\"\"\n    v: DebugVisitor[None] = DebugVisitor()\n    if isinstance(code, str):\n        code = lib2to3_parse(code)\n    list(v.visit(code))",
                "def mark(self, leaf: Leaf) -> None:\n    \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n\n    All leaves receive an int `bracket_depth` field that stores how deep\n    within brackets a given leaf is. 0 means there are no enclosing brackets\n    that started on this line.\n\n    If a leaf is itself a closing bracket, it receives an `opening_bracket`\n    field that it forms a pair with. This is a one-directional link to\n    avoid reference cycles.\n\n    If a leaf is a delimiter (a token on which Black can split the line if\n    needed) and it's on depth 0, its `id()` is stored in the tracker's\n    `delimiters` field.\n    \"\"\"\n    if leaf.type == token.COMMENT:\n        return\n\n    self.maybe_decrement_after_for_loop_variable(leaf)\n    self.maybe_decrement_after_lambda_arguments(leaf)\n    if leaf.type in CLOSING_BRACKETS:\n        self.depth -= 1\n        opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\n        leaf.opening_bracket = opening_bracket\n    leaf.bracket_depth = self.depth\n    if self.depth == 0:\n        delim = is_split_before_delimiter(leaf, self.previous)\n        if delim and self.previous is not None:\n            self.delimiters[id(self.previous)] = delim\n        else:\n            delim = is_split_after_delimiter(leaf, self.previous)\n            if delim:\n                self.delimiters[id(leaf)] = delim\n    if leaf.type in OPENING_BRACKETS:\n        self.bracket_match[self.depth, BRACKET[leaf.type]] = leaf\n        self.depth += 1\n    self.previous = leaf\n    self.maybe_increment_lambda_arguments(leaf)\n    self.maybe_increment_for_loop_variable(leaf)",
                "def any_open_brackets(self) -> bool:\n    \"\"\"Return True if there is an yet unmatched open bracket on the line.\"\"\"\n    return bool(self.bracket_match)",
                "def max_delimiter_priority(self, exclude: Iterable[LeafID] = ()) -> int:\n    \"\"\"Return the highest priority of a delimiter found on the line.\n\n    Values are consistent with what `is_split_*_delimiter()` return.\n    Raises ValueError on no delimiters.\n    \"\"\"\n    return max(v for k, v in self.delimiters.items() if k not in exclude)",
                "def delimiter_count_with_priority(self, priority: int = 0) -> int:\n    \"\"\"Return the number of delimiters with the given `priority`.\n\n    If no `priority` is passed, defaults to max priority on the line.\n    \"\"\"\n    if not self.delimiters:\n        return 0\n\n    priority = priority or self.max_delimiter_priority()\n    return sum(1 for p in self.delimiters.values() if p == priority)",
                "def maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"In a for loop, or comprehension, the variables are often unpacks.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `for` and `in`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == \"for\":\n        self.depth += 1\n        self._for_loop_variable += 1\n        return True\n\n    return False",
                "def maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_for_loop_variable` above for explanation.\"\"\"\n    if self._for_loop_variable and leaf.type == token.NAME and leaf.value == \"in\":\n        self.depth -= 1\n        self._for_loop_variable -= 1\n        return True\n\n    return False",
                "def maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"In a lambda expression, there might be more than one argument.\n\n    To avoid splitting on the comma in this situation, increase the depth of\n    tokens between `lambda` and `:`.\n    \"\"\"\n    if leaf.type == token.NAME and leaf.value == \"lambda\":\n        self.depth += 1\n        self._lambda_arguments += 1\n        return True\n\n    return False",
                "def maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool:\n    \"\"\"See `maybe_increment_lambda_arguments` above for explanation.\"\"\"\n    if self._lambda_arguments and leaf.type == token.COLON:\n        self.depth -= 1\n        self._lambda_arguments -= 1\n        return True\n\n    return False",
                "def get_open_lsqb(self) -> Optional[Leaf]:\n    \"\"\"Return the most recent opening square bracket (if any).\"\"\"\n    return self.bracket_match.get((self.depth - 1, token.RSQB))",
                "def append(self, leaf: Leaf, preformatted: bool = False) -> None:\n    \"\"\"Add a new `leaf` to the end of the line.\n\n    Unless `preformatted` is True, the `leaf` will receive a new consistent\n    whitespace prefix and metadata applied by :class:`BracketTracker`.\n    Trailing commas are maybe removed, unpacked for loop variables are\n    demoted from being delimiters.\n\n    Inline comments are put aside.\n    \"\"\"\n    has_value = leaf.type in BRACKETS or bool(leaf.value.strip())\n    if not has_value:\n        return\n\n    if token.COLON == leaf.type and self.is_class_paren_empty:\n        del self.leaves[-2:]\n    if self.leaves and not preformatted:\n        # Note: at this point leaf.prefix should be empty except for\n        # imports, for which we only preserve newlines.\n        leaf.prefix += whitespace(\n            leaf, complex_subscript=self.is_complex_subscript(leaf)\n        )\n    if self.inside_brackets or not preformatted:\n        self.bracket_tracker.mark(leaf)\n        self.maybe_remove_trailing_comma(leaf)\n    if not self.append_comment(leaf):\n        self.leaves.append(leaf)",
                "def append_safe(self, leaf: Leaf, preformatted: bool = False) -> None:\n    \"\"\"Like :func:`append()` but disallow invalid standalone comment structure.\n\n    Raises ValueError when any `leaf` is appended after a standalone comment\n    or when a standalone comment is not the first leaf on the line.\n    \"\"\"\n    if self.bracket_tracker.depth == 0:\n        if self.is_comment:\n            raise ValueError(\"cannot append to standalone comments\")\n\n        if self.leaves and leaf.type == STANDALONE_COMMENT:\n            raise ValueError(\n                \"cannot append standalone comments to a populated line\"\n            )\n\n    self.append(leaf, preformatted=preformatted)",
                "@property\ndef is_comment(self) -> bool:\n    \"\"\"Is this line a standalone comment?\"\"\"\n    return len(self.leaves) == 1 and self.leaves[0].type == STANDALONE_COMMENT",
                "@property\ndef is_decorator(self) -> bool:\n    \"\"\"Is this line a decorator?\"\"\"\n    return bool(self) and self.leaves[0].type == token.AT",
                "@property\ndef is_import(self) -> bool:\n    \"\"\"Is this an import line?\"\"\"\n    return bool(self) and is_import(self.leaves[0])",
                "@property\ndef is_class(self) -> bool:\n    \"\"\"Is this line a class definition?\"\"\"\n    return (\n        bool(self)\n        and self.leaves[0].type == token.NAME\n        and self.leaves[0].value == \"class\"\n    )",
                "@property\ndef is_stub_class(self) -> bool:\n    \"\"\"Is this line a class definition with a body consisting only of \"...\"?\"\"\"\n    return self.is_class and self.leaves[-3:] == [\n        Leaf(token.DOT, \".\") for _ in range(3)\n    ]",
                "@property\ndef is_def(self) -> bool:\n    \"\"\"Is this a function definition? (Also returns True for async defs.)\"\"\"\n    try:\n        first_leaf = self.leaves[0]\n    except IndexError:\n        return False\n\n    try:\n        second_leaf: Optional[Leaf] = self.leaves[1]\n    except IndexError:\n        second_leaf = None\n    return (first_leaf.type == token.NAME and first_leaf.value == \"def\") or (\n        first_leaf.type == token.ASYNC\n        and second_leaf is not None\n        and second_leaf.type == token.NAME\n        and second_leaf.value == \"def\"\n    )",
                "@property\ndef is_class_paren_empty(self) -> bool:\n    \"\"\"Is this a class with no base classes but using parentheses?\n\n    Those are unnecessary and should be removed.\n    \"\"\"\n    return (\n        bool(self)\n        and len(self.leaves) == 4\n        and self.is_class\n        and self.leaves[2].type == token.LPAR\n        and self.leaves[2].value == \"(\"\n        and self.leaves[3].type == token.RPAR\n        and self.leaves[3].value == \")\"\n    )",
                "@property\ndef is_triple_quoted_string(self) -> bool:\n    \"\"\"Is the line a triple quoted string?\"\"\"\n    return (\n        bool(self)\n        and self.leaves[0].type == token.STRING\n        and self.leaves[0].value.startswith(('\"\"\"', \"'''\"))\n    )",
                "def contains_standalone_comments(self, depth_limit: int = sys.maxsize) -> bool:\n    \"\"\"If so, needs to be split before emitting.\"\"\"\n    for leaf in self.leaves:\n        if leaf.type == STANDALONE_COMMENT:\n            if leaf.bracket_depth <= depth_limit:\n                return True\n\n    return False",
                "def contains_multiline_strings(self) -> bool:\n    for leaf in self.leaves:\n        if is_multiline_string(leaf):\n            return True\n\n    return False",
                "def maybe_remove_trailing_comma(self, closing: Leaf) -> bool:\n    \"\"\"Remove trailing comma if there is one and it's safe.\"\"\"\n    if not (\n        self.leaves\n        and self.leaves[-1].type == token.COMMA\n        and closing.type in CLOSING_BRACKETS\n    ):\n        return False\n\n    if closing.type == token.RBRACE:\n        self.remove_trailing_comma()\n        return True\n\n    if closing.type == token.RSQB:\n        comma = self.leaves[-1]\n        if comma.parent and comma.parent.type == syms.listmaker:\n            self.remove_trailing_comma()\n            return True\n\n    # For parens let's check if it's safe to remove the comma.\n    # Imports are always safe.\n    if self.is_import:\n        self.remove_trailing_comma()\n        return True\n\n    # Otherwise, if the trailing one is the only one, we might mistakenly\n    # change a tuple into a different type by removing the comma.\n    depth = closing.bracket_depth + 1\n    commas = 0\n    opening = closing.opening_bracket\n    for _opening_index, leaf in enumerate(self.leaves):\n        if leaf is opening:\n            break\n\n    else:\n        return False\n\n    for leaf in self.leaves[_opening_index + 1 :]:\n        if leaf is closing:\n            break\n\n        bracket_depth = leaf.bracket_depth\n        if bracket_depth == depth and leaf.type == token.COMMA:\n            commas += 1\n            if leaf.parent and leaf.parent.type == syms.arglist:\n                commas += 1\n                break\n\n    if commas > 1:\n        self.remove_trailing_comma()\n        return True\n\n    return False",
                "def append_comment(self, comment: Leaf) -> bool:\n    \"\"\"Add an inline or standalone comment to the line.\"\"\"\n    if (\n        comment.type == STANDALONE_COMMENT\n        and self.bracket_tracker.any_open_brackets()\n    ):\n        comment.prefix = \"\"\n        return False\n\n    if comment.type != token.COMMENT:\n        return False\n\n    after = len(self.leaves) - 1\n    if after == -1:\n        comment.type = STANDALONE_COMMENT\n        comment.prefix = \"\"\n        return False\n\n    else:\n        self.comments.append((after, comment))\n        return True",
                "def comments_after(self, leaf: Leaf, _index: int = -1) -> Iterator[Leaf]:\n    \"\"\"Generate comments that should appear directly after `leaf`.\n\n    Provide a non-negative leaf `_index` to speed up the function.\n    \"\"\"\n    if not self.comments:\n        return\n\n    if _index == -1:\n        for _index, _leaf in enumerate(self.leaves):\n            if leaf is _leaf:\n                break\n\n        else:\n            return\n\n    for index, comment_after in self.comments:\n        if _index == index:\n            yield comment_after",
                "def remove_trailing_comma(self) -> None:\n    \"\"\"Remove the trailing comma and moves the comments attached to it.\"\"\"\n    comma_index = len(self.leaves) - 1\n    for i in range(len(self.comments)):\n        comment_index, comment = self.comments[i]\n        if comment_index == comma_index:\n            self.comments[i] = (comma_index - 1, comment)\n    self.leaves.pop()",
                "def is_complex_subscript(self, leaf: Leaf) -> bool:\n    \"\"\"Return True iff `leaf` is part of a slice with non-trivial exprs.\"\"\"\n    open_lsqb = self.bracket_tracker.get_open_lsqb()\n    if open_lsqb is None:\n        return False\n\n    subscript_start = open_lsqb.next_sibling\n\n    if isinstance(subscript_start, Node):\n        if subscript_start.type == syms.listmaker:\n            return False\n\n        if subscript_start.type == syms.subscriptlist:\n            subscript_start = child_towards(subscript_start, leaf)\n    return subscript_start is not None and any(\n        n.type in TEST_DESCENDANTS for n in subscript_start.pre_order()\n    )",
                "def __str__(self) -> str:\n    \"\"\"Render the line.\"\"\"\n    if not self:\n        return \"\\n\"\n\n    indent = \"    \" * self.depth\n    leaves = iter(self.leaves)\n    first = next(leaves)\n    res = f\"{first.prefix}{indent}{first.value}\"\n    for leaf in leaves:\n        res += str(leaf)\n    for _, comment in self.comments:\n        res += str(comment)\n    return res + \"\\n\"",
                "def __bool__(self) -> bool:\n    \"\"\"Return True if the line has leaves or comments.\"\"\"\n    return bool(self.leaves or self.comments)",
                "def maybe_empty_lines(self, current_line: Line) -> Tuple[int, int]:\n    \"\"\"Return the number of extra empty lines before and after the `current_line`.\n\n    This is for separating `def`, `async def` and `class` with extra empty\n    lines (two on module-level).\n    \"\"\"\n    before, after = self._maybe_empty_lines(current_line)\n    before -= self.previous_after\n    self.previous_after = after\n    self.previous_line = current_line\n    return before, after",
                "def _maybe_empty_lines(self, current_line: Line) -> Tuple[int, int]:\n    max_allowed = 1\n    if current_line.depth == 0:\n        max_allowed = 1 if self.is_pyi else 2\n    if current_line.leaves:\n        # Consume the first leaf's extra newlines.\n        first_leaf = current_line.leaves[0]\n        before = first_leaf.prefix.count(\"\\n\")\n        before = min(before, max_allowed)\n        first_leaf.prefix = \"\"\n    else:\n        before = 0\n    depth = current_line.depth\n    while self.previous_defs and self.previous_defs[-1] >= depth:\n        self.previous_defs.pop()\n        if self.is_pyi:\n            before = 0 if depth else 1\n        else:\n            before = 1 if depth else 2\n    if current_line.is_decorator or current_line.is_def or current_line.is_class:\n        return self._maybe_empty_lines_for_class_or_def(current_line, before)\n\n    if (\n        self.previous_line\n        and self.previous_line.is_import\n        and not current_line.is_import\n        and depth == self.previous_line.depth\n    ):\n        return (before or 1), 0\n\n    if (\n        self.previous_line\n        and self.previous_line.is_class\n        and current_line.is_triple_quoted_string\n    ):\n        return before, 1\n\n    return before, 0",
                "def _maybe_empty_lines_for_class_or_def(\n    self, current_line: Line, before: int\n) -> Tuple[int, int]:\n    if not current_line.is_decorator:\n        self.previous_defs.append(current_line.depth)\n    if self.previous_line is None:\n        # Don't insert empty lines before the first line in the file.\n        return 0, 0\n\n    if self.previous_line.is_decorator:\n        return 0, 0\n\n    if self.previous_line.depth < current_line.depth and (\n        self.previous_line.is_class or self.previous_line.is_def\n    ):\n        return 0, 0\n\n    if (\n        self.previous_line.is_comment\n        and self.previous_line.depth == current_line.depth\n        and before == 0\n    ):\n        return 0, 0\n\n    if self.is_pyi:\n        if self.previous_line.depth > current_line.depth:\n            newlines = 1\n        elif current_line.is_class or self.previous_line.is_class:\n            if current_line.is_stub_class and self.previous_line.is_stub_class:\n                # No blank line between classes with an empty body\n                newlines = 0\n            else:\n                newlines = 1\n        elif current_line.is_def and not self.previous_line.is_def:\n            # Blank line between a block of functions and a block of non-functions\n            newlines = 1\n        else:\n            newlines = 0\n    else:\n        newlines = 2\n    if current_line.depth and newlines:\n        newlines -= 1\n    return newlines, 0",
                "def line(self, indent: int = 0) -> Iterator[Line]:\n    \"\"\"Generate a line.\n\n    If the line is empty, only emit if it makes sense.\n    If the line is too long, split it first and then generate.\n\n    If any lines were generated, set up a new current_line.\n    \"\"\"\n    if not self.current_line:\n        self.current_line.depth += indent\n        return  # Line is empty, don't emit. Creating a new one unnecessary.\n\n    complete_line = self.current_line\n    self.current_line = Line(depth=complete_line.depth + indent)\n    yield complete_line",
                "def visit_default(self, node: LN) -> Iterator[Line]:\n    \"\"\"Default `visit_*()` implementation. Recurses to children of `node`.\"\"\"\n    if isinstance(node, Leaf):\n        any_open_brackets = self.current_line.bracket_tracker.any_open_brackets()\n        for comment in generate_comments(node):\n            if any_open_brackets:\n                # any comment within brackets is subject to splitting\n                self.current_line.append(comment)\n            elif comment.type == token.COMMENT:\n                # regular trailing comment\n                self.current_line.append(comment)\n                yield from self.line()\n\n            else:\n                # regular standalone comment\n                yield from self.line()\n\n                self.current_line.append(comment)\n                yield from self.line()\n\n        normalize_prefix(node, inside_brackets=any_open_brackets)\n        if self.normalize_strings and node.type == token.STRING:\n            normalize_string_prefix(node, remove_u_prefix=self.remove_u_prefix)\n            normalize_string_quotes(node)\n        if node.type == token.NUMBER:\n            normalize_numeric_literal(node, self.allow_underscores)\n        if node.type not in WHITESPACE:\n            self.current_line.append(node)\n    yield from super().visit_default(node)",
                "def visit_INDENT(self, node: Node) -> Iterator[Line]:\n    \"\"\"Increase indentation level, maybe yield a line.\"\"\"\n    # In blib2to3 INDENT never holds comments.\n    yield from self.line(+1)\n    yield from self.visit_default(node)",
                "def visit_DEDENT(self, node: Node) -> Iterator[Line]:\n    \"\"\"Decrease indentation level, maybe yield a line.\"\"\"\n    # The current line might still wait for trailing comments.  At DEDENT time\n    # there won't be any (they would be prefixes on the preceding NEWLINE).\n    # Emit the line then.\n    yield from self.line()\n\n    # While DEDENT has no value, its prefix may contain standalone comments\n    # that belong to the current indentation level.  Get 'em.\n    yield from self.visit_default(node)\n\n    # Finally, emit the dedent.\n    yield from self.line(-1)",
                "def visit_stmt(\n    self, node: Node, keywords: Set[str], parens: Set[str]\n) -> Iterator[Line]:\n    \"\"\"Visit a statement.\n\n    This implementation is shared for `if`, `while`, `for`, `try`, `except`,\n    `def`, `with`, `class`, `assert` and assignments.\n\n    The relevant Python language `keywords` for a given statement will be\n    NAME leaves within it. This methods puts those on a separate line.\n\n    `parens` holds a set of string leaf values immediately after which\n    invisible parens should be put.\n    \"\"\"\n    normalize_invisible_parens(node, parens_after=parens)\n    for child in node.children:\n        if child.type == token.NAME and child.value in keywords:  # type: ignore\n            yield from self.line()\n\n        yield from self.visit(child)",
                "def visit_suite(self, node: Node) -> Iterator[Line]:\n    \"\"\"Visit a suite.\"\"\"\n    if self.is_pyi and is_stub_suite(node):\n        yield from self.visit(node.children[2])\n    else:\n        yield from self.visit_default(node)",
                "def visit_simple_stmt(self, node: Node) -> Iterator[Line]:\n    \"\"\"Visit a statement without nested statements.\"\"\"\n    is_suite_like = node.parent and node.parent.type in STATEMENT\n    if is_suite_like:\n        if self.is_pyi and is_stub_body(node):\n            yield from self.visit_default(node)\n        else:\n            yield from self.line(+1)\n            yield from self.visit_default(node)\n            yield from self.line(-1)\n\n    else:\n        if not self.is_pyi or not node.parent or not is_stub_suite(node.parent):\n            yield from self.line()\n        yield from self.visit_default(node)",
                "def visit_async_stmt(self, node: Node) -> Iterator[Line]:\n    \"\"\"Visit `async def`, `async for`, `async with`.\"\"\"\n    yield from self.line()\n\n    children = iter(node.children)\n    for child in children:\n        yield from self.visit(child)\n\n        if child.type == token.ASYNC:\n            break\n\n    internal_stmt = next(children)\n    for child in internal_stmt.children:\n        yield from self.visit(child)",
                "def visit_decorators(self, node: Node) -> Iterator[Line]:\n    \"\"\"Visit decorators.\"\"\"\n    for child in node.children:\n        yield from self.line()\n        yield from self.visit(child)",
                "def visit_SEMI(self, leaf: Leaf) -> Iterator[Line]:\n    \"\"\"Remove a semicolon and put the other statement on a separate line.\"\"\"\n    yield from self.line()",
                "def visit_ENDMARKER(self, leaf: Leaf) -> Iterator[Line]:\n    \"\"\"End of file. Process outstanding comments and end with a newline.\"\"\"\n    yield from self.visit_default(leaf)\n    yield from self.line()",
                "def visit_STANDALONE_COMMENT(self, leaf: Leaf) -> Iterator[Line]:\n    if not self.current_line.bracket_tracker.any_open_brackets():\n        yield from self.line()\n    yield from self.visit_default(leaf)",
                "def __attrs_post_init__(self) -> None:\n    \"\"\"You are in a twisty little maze of passages.\"\"\"\n    v = self.visit_stmt\n    \u00d8: Set[str] = set()\n    self.visit_assert_stmt = partial(v, keywords={\"assert\"}, parens={\"assert\", \",\"})\n    self.visit_if_stmt = partial(\n        v, keywords={\"if\", \"else\", \"elif\"}, parens={\"if\", \"elif\"}\n    )\n    self.visit_while_stmt = partial(v, keywords={\"while\", \"else\"}, parens={\"while\"})\n    self.visit_for_stmt = partial(v, keywords={\"for\", \"else\"}, parens={\"for\", \"in\"})\n    self.visit_try_stmt = partial(\n        v, keywords={\"try\", \"except\", \"else\", \"finally\"}, parens=\u00d8\n    )\n    self.visit_except_clause = partial(v, keywords={\"except\"}, parens=\u00d8)\n    self.visit_with_stmt = partial(v, keywords={\"with\"}, parens=\u00d8)\n    self.visit_funcdef = partial(v, keywords={\"def\"}, parens=\u00d8)\n    self.visit_classdef = partial(v, keywords={\"class\"}, parens=\u00d8)\n    self.visit_expr_stmt = partial(v, keywords=\u00d8, parens=ASSIGNMENTS)\n    self.visit_return_stmt = partial(v, keywords={\"return\"}, parens={\"return\"})\n    self.visit_import_from = partial(v, keywords=\u00d8, parens={\"import\"})\n    self.visit_async_funcdef = self.visit_async_stmt\n    self.visit_decorated = self.visit_decorators",
                "@wraps(split_func)\ndef split_wrapper(line: Line, py36: bool = False) -> Iterator[Line]:\n    for l in split_func(line, py36):\n        normalize_prefix(l.leaves[0], inside_brackets=True)\n        yield l",
                "def append_to_line(leaf: Leaf) -> Iterator[Line]:\n    \"\"\"Append `leaf` to current line or to new line if appending impossible.\"\"\"\n    nonlocal current_line\n    try:\n        current_line.append_safe(leaf, preformatted=True)\n    except ValueError as ve:\n        yield current_line\n\n        current_line = Line(depth=line.depth, inside_brackets=line.inside_brackets)\n        current_line.append(leaf)",
                "def append_to_line(leaf: Leaf) -> Iterator[Line]:\n    \"\"\"Append `leaf` to current line or to new line if appending impossible.\"\"\"\n    nonlocal current_line\n    try:\n        current_line.append_safe(leaf, preformatted=True)\n    except ValueError as ve:\n        yield current_line\n\n        current_line = Line(depth=line.depth, inside_brackets=line.inside_brackets)\n        current_line.append(leaf)",
                "def get_imports_from_children(children: List[LN]) -> Generator[str, None, None]:\n    for child in children:\n        if isinstance(child, Leaf):\n            if child.type == token.NAME:\n                yield child.value\n        elif child.type == syms.import_as_name:\n            orig_name = child.children[0]\n            assert isinstance(orig_name, Leaf), \"Invalid syntax parsing imports\"\n            assert orig_name.type == token.NAME, \"Invalid syntax parsing imports\"\n            yield orig_name.value\n        elif child.type == syms.import_as_names:\n            yield from get_imports_from_children(child.children)\n        else:\n            assert False, \"Invalid syntax parsing imports\"",
                "def done(self, src: Path, changed: Changed) -> None:\n    \"\"\"Increment the counter for successful reformatting. Write out a message.\"\"\"\n    if changed is Changed.YES:\n        reformatted = \"would reformat\" if self.check else \"reformatted\"\n        if self.verbose or not self.quiet:\n            out(f\"{reformatted} {src}\")\n        self.change_count += 1\n    else:\n        if self.verbose:\n            if changed is Changed.NO:\n                msg = f\"{src} already well formatted, good job.\"\n            else:\n                msg = f\"{src} wasn't modified on disk since last run.\"\n            out(msg, bold=False)\n        self.same_count += 1",
                "def failed(self, src: Path, message: str) -> None:\n    \"\"\"Increment the counter for failed reformatting. Write out a message.\"\"\"\n    err(f\"error: cannot format {src}: {message}\")\n    self.failure_count += 1",
                "def path_ignored(self, path: Path, message: str) -> None:\n    if self.verbose:\n        out(f\"{path} ignored: {message}\", bold=False)",
                "@property\ndef return_code(self) -> int:\n    \"\"\"Return the exit code that the app should use.\n\n    This considers the current state of changed files and failures:\n    - if there were any failures, return 123;\n    - if any files were changed and --check is being used, return 1;\n    - otherwise return 0.\n    \"\"\"\n    # According to http://tldp.org/LDP/abs/html/exitcodes.html starting with\n    # 126 we have special return codes reserved by the shell.\n    if self.failure_count:\n        return 123\n\n    elif self.change_count and self.check:\n        return 1\n\n    return 0",
                "def __str__(self) -> str:\n    \"\"\"Render a color report of the current state.\n\n    Use `click.unstyle` to remove colors.\n    \"\"\"\n    if self.check:\n        reformatted = \"would be reformatted\"\n        unchanged = \"would be left unchanged\"\n        failed = \"would fail to reformat\"\n    else:\n        reformatted = \"reformatted\"\n        unchanged = \"left unchanged\"\n        failed = \"failed to reformat\"\n    report = []\n    if self.change_count:\n        s = \"s\" if self.change_count > 1 else \"\"\n        report.append(\n            click.style(f\"{self.change_count} file{s} {reformatted}\", bold=True)\n        )\n    if self.same_count:\n        s = \"s\" if self.same_count > 1 else \"\"\n        report.append(f\"{self.same_count} file{s} {unchanged}\")\n    if self.failure_count:\n        s = \"s\" if self.failure_count > 1 else \"\"\n        report.append(\n            click.style(f\"{self.failure_count} file{s} {failed}\", fg=\"red\")\n        )\n    return \", \".join(report) + \".\"",
                "def _v(node: ast.AST, depth: int = 0) -> Iterator[str]:\n    \"\"\"Simple visitor generating strings to compare ASTs by content.\"\"\"\n    yield f\"{'  ' * depth}{node.__class__.__name__}(\"\n\n    for field in sorted(node._fields):\n        try:\n            value = getattr(node, field)\n        except AttributeError:\n            continue\n\n        yield f\"{'  ' * (depth+1)}{field}=\"\n\n        if isinstance(value, list):\n            for item in value:\n                if isinstance(item, ast.AST):\n                    yield from _v(item, depth + 2)\n\n        elif isinstance(value, ast.AST):\n            yield from _v(value, depth + 2)\n\n        else:\n            yield f\"{'  ' * (depth+2)}{value!r},  # {value.__class__.__name__}\"\n\n    yield f\"{'  ' * depth})  # /{node.__class__.__name__}\"",
                "def rhs(line: Line, py36: bool = False) -> Iterator[Line]:\n    for omit in generate_trailers_to_omit(line, line_length):\n        lines = list(right_hand_split(line, line_length, py36, omit=omit))\n        if is_line_short_enough(lines[0], line_length=line_length):\n            yield from lines\n            return\n\n    # All splits failed, best effort split with no omits.\n    # This mostly happens to multiline strings that are by definition\n    # reported as not fitting a single line.\n    yield from right_hand_split(line, py36)"
            ],
            "inscope_function_signatures": [
                "read_pyproject_toml(ctx: click.Context, param: click.Parameter, value: Union[str, int, bool, None]) -> Optional[str]",
                "main(ctx: click.Context, line_length: int, check: bool, diff: bool, fast: bool, pyi: bool, py36: bool, skip_string_normalization: bool, quiet: bool, verbose: bool, include: str, exclude: str, src: Tuple[str], config: Optional[str]) -> None",
                "reformat_one(src: Path, line_length: int, fast: bool, write_back: WriteBack, mode: FileMode, report: 'Report') -> None",
                "schedule_formatting(sources: Set[Path], line_length: int, fast: bool, write_back: WriteBack, mode: FileMode, report: 'Report', loop: BaseEventLoop, executor: Executor) -> None",
                "format_file_in_place(src: Path, line_length: int, fast: bool, write_back: WriteBack=WriteBack.NO, mode: FileMode=FileMode.AUTO_DETECT, lock: Any=None) -> bool",
                "format_stdin_to_stdout(line_length: int, fast: bool, write_back: WriteBack=WriteBack.NO, mode: FileMode=FileMode.AUTO_DETECT) -> bool",
                "format_file_contents(src_contents: str) -> FileContent",
                "format_str(src_contents: str, line_length: int) -> FileContent",
                "decode_bytes(src: bytes) -> Tuple[FileContent, Encoding, NewLine]",
                "lib2to3_parse(src_txt: str) -> Node",
                "lib2to3_unparse(node: Node) -> str",
                "whitespace(leaf: Leaf) -> str",
                "preceding_leaf(node: Optional[LN]) -> Optional[Leaf]",
                "child_towards(ancestor: Node, descendant: LN) -> Optional[LN]",
                "container_of(leaf: Leaf) -> LN",
                "is_split_after_delimiter(leaf: Leaf, previous: Leaf=None) -> int",
                "is_split_before_delimiter(leaf: Leaf, previous: Leaf=None) -> int",
                "generate_comments(leaf: LN) -> Iterator[Leaf]",
                "list_comments(prefix: str) -> List[ProtoComment]",
                "make_comment(content: str) -> str",
                "split_line(line: Line, line_length: int, inner: bool=False, py36: bool=False) -> Iterator[Line]",
                "left_hand_split(line: Line, py36: bool=False) -> Iterator[Line]",
                "right_hand_split(line: Line, line_length: int, py36: bool=False, omit: Collection[LeafID]=()) -> Iterator[Line]",
                "bracket_split_succeeded_or_raise(head: Line, body: Line, tail: Line) -> None",
                "dont_increase_indentation(split_func: SplitFunc) -> SplitFunc",
                "delimiter_split(line: Line, py36: bool=False) -> Iterator[Line]",
                "standalone_comment_split(line: Line, py36: bool=False) -> Iterator[Line]",
                "is_import(leaf: Leaf) -> bool",
                "normalize_prefix(leaf: Leaf) -> None",
                "normalize_string_prefix(leaf: Leaf, remove_u_prefix: bool=False) -> None",
                "normalize_string_quotes(leaf: Leaf) -> None",
                "normalize_numeric_literal(leaf: Leaf, allow_underscores: bool) -> None",
                "format_float_or_int_string(text: str, allow_underscores: bool) -> str",
                "format_int_string(text: str, allow_underscores: bool) -> str",
                "normalize_invisible_parens(node: Node, parens_after: Set[str]) -> None",
                "normalize_fmt_off(node: Node) -> None",
                "convert_one_fmt_off_pair(node: Node) -> bool",
                "generate_ignored_nodes(leaf: Leaf) -> Iterator[LN]",
                "maybe_make_parens_invisible_in_atom(node: LN) -> bool",
                "is_empty_tuple(node: LN) -> bool",
                "is_one_tuple(node: LN) -> bool",
                "is_yield(node: LN) -> bool",
                "is_vararg(leaf: Leaf, within: Set[NodeType]) -> bool",
                "is_multiline_string(leaf: Leaf) -> bool",
                "is_stub_suite(node: Node) -> bool",
                "is_stub_body(node: LN) -> bool",
                "max_delimiter_priority_in_atom(node: LN) -> int",
                "ensure_visible(leaf: Leaf) -> None",
                "should_explode(line: Line, opening_bracket: Leaf) -> bool",
                "is_python36(node: Node) -> bool",
                "generate_trailers_to_omit(line: Line, line_length: int) -> Iterator[Set[LeafID]]",
                "get_future_imports(node: Node) -> Set[str]",
                "gen_python_files_in_dir(path: Path, root: Path, include: Pattern[str], exclude: Pattern[str], report: 'Report') -> Iterator[Path]",
                "find_project_root(srcs: Iterable[str]) -> Path",
                "assert_equivalent(src: str, dst: str) -> None",
                "assert_stable(src: str, dst: str, line_length: int, mode: FileMode=FileMode.AUTO_DETECT) -> None",
                "dump_to_file(*output: str) -> str",
                "diff(a: str, b: str, a_name: str, b_name: str) -> str",
                "cancel(tasks: Iterable[asyncio.Task]) -> None",
                "shutdown(loop: BaseEventLoop) -> None",
                "sub_twice(regex: Pattern[str], replacement: str, original: str) -> str",
                "re_compile_maybe_verbose(regex: str) -> Pattern[str]",
                "enumerate_reversed(sequence: Sequence[T]) -> Iterator[Tuple[Index, T]]",
                "enumerate_with_length(line: Line, reversed: bool=False) -> Iterator[Tuple[Index, Leaf, int]]",
                "is_line_short_enough(line: Line) -> bool",
                "can_be_split(line: Line) -> bool",
                "can_omit_invisible_parens(line: Line, line_length: int) -> bool",
                "get_cache_file(line_length: int, mode: FileMode) -> Path",
                "read_cache(line_length: int, mode: FileMode) -> Cache",
                "get_cache_info(path: Path) -> CacheInfo",
                "filter_cached(cache: Cache, sources: Iterable[Path]) -> Tuple[Set[Path], Set[Path]]",
                "write_cache(cache: Cache, sources: Iterable[Path], line_length: int, mode: FileMode) -> None",
                "patch_click() -> None",
                "from_configuration(cls) -> 'WriteBack'",
                "from_configuration(cls) -> 'FileMode'",
                "visit(self, node: LN) -> Iterator[T]",
                "visit_default(self, node: LN) -> Iterator[T]",
                "visit_default(self, node: LN) -> Iterator[T]",
                "show(cls, code: Union[str, Leaf, Node]) -> None",
                "mark(self, leaf: Leaf) -> None",
                "any_open_brackets(self) -> bool",
                "max_delimiter_priority(self, exclude: Iterable[LeafID]=()) -> int",
                "delimiter_count_with_priority(self, priority: int=0) -> int",
                "maybe_increment_for_loop_variable(self, leaf: Leaf) -> bool",
                "maybe_decrement_after_for_loop_variable(self, leaf: Leaf) -> bool",
                "maybe_increment_lambda_arguments(self, leaf: Leaf) -> bool",
                "maybe_decrement_after_lambda_arguments(self, leaf: Leaf) -> bool",
                "get_open_lsqb(self) -> Optional[Leaf]",
                "append(self, leaf: Leaf, preformatted: bool=False) -> None",
                "append_safe(self, leaf: Leaf, preformatted: bool=False) -> None",
                "is_comment(self) -> bool",
                "is_decorator(self) -> bool",
                "is_import(self) -> bool",
                "is_class(self) -> bool",
                "is_stub_class(self) -> bool",
                "is_def(self) -> bool",
                "is_class_paren_empty(self) -> bool",
                "is_triple_quoted_string(self) -> bool",
                "contains_standalone_comments(self, depth_limit: int=sys.maxsize) -> bool",
                "contains_multiline_strings(self) -> bool",
                "maybe_remove_trailing_comma(self, closing: Leaf) -> bool",
                "append_comment(self, comment: Leaf) -> bool",
                "comments_after(self, leaf: Leaf, _index: int=-1) -> Iterator[Leaf]",
                "remove_trailing_comma(self) -> None",
                "is_complex_subscript(self, leaf: Leaf) -> bool",
                "__str__(self) -> str",
                "__bool__(self) -> bool",
                "maybe_empty_lines(self, current_line: Line) -> Tuple[int, int]",
                "_maybe_empty_lines(self, current_line: Line) -> Tuple[int, int]",
                "_maybe_empty_lines_for_class_or_def(self, current_line: Line, before: int) -> Tuple[int, int]",
                "line(self, indent: int=0) -> Iterator[Line]",
                "visit_default(self, node: LN) -> Iterator[Line]",
                "visit_INDENT(self, node: Node) -> Iterator[Line]",
                "visit_DEDENT(self, node: Node) -> Iterator[Line]",
                "visit_stmt(self, node: Node, keywords: Set[str], parens: Set[str]) -> Iterator[Line]",
                "visit_suite(self, node: Node) -> Iterator[Line]",
                "visit_simple_stmt(self, node: Node) -> Iterator[Line]",
                "visit_async_stmt(self, node: Node) -> Iterator[Line]",
                "visit_decorators(self, node: Node) -> Iterator[Line]",
                "visit_SEMI(self, leaf: Leaf) -> Iterator[Line]",
                "visit_ENDMARKER(self, leaf: Leaf) -> Iterator[Line]",
                "visit_STANDALONE_COMMENT(self, leaf: Leaf) -> Iterator[Line]",
                "__attrs_post_init__(self) -> None",
                "split_wrapper(line: Line, py36: bool=False) -> Iterator[Line]",
                "append_to_line(leaf: Leaf) -> Iterator[Line]",
                "append_to_line(leaf: Leaf) -> Iterator[Line]",
                "get_imports_from_children(children: List[LN]) -> Generator[str, None, None]",
                "done(self, src: Path, changed: Changed) -> None",
                "failed(self, src: Path, message: str) -> None",
                "path_ignored(self, path: Path, message: str) -> None",
                "return_code(self) -> int",
                "__str__(self) -> str",
                "_v(node: ast.AST, depth: int=0) -> Iterator[str]",
                "rhs(line: Line, py36: bool=False) -> Iterator[Line]"
            ],
            "variables_in_file": {
                "__version__": [
                    56,
                    50,
                    261
                ],
                "DEFAULT_LINE_LENGTH": [
                    51,
                    172
                ],
                "DEFAULT_EXCLUDES": [
                    234,
                    52
                ],
                "DEFAULT_INCLUDES": [
                    221,
                    55
                ],
                "CACHE_DIR": [
                    3564,
                    3565,
                    77,
                    56,
                    3515
                ],
                "Path": [
                    3076,
                    3086,
                    3088,
                    412,
                    3116,
                    56,
                    3514,
                    315,
                    3132,
                    317,
                    3137,
                    73,
                    3536,
                    3542,
                    3033,
                    3034,
                    3038,
                    3559,
                    489,
                    367
                ],
                "user_cache_dir": [
                    56
                ],
                "FileContent": [
                    637,
                    60,
                    605,
                    583
                ],
                "str": [
                    3076,
                    134,
                    135,
                    3334,
                    2572,
                    146,
                    661,
                    1558,
                    408,
                    2074,
                    291,
                    292,
                    293,
                    294,
                    2989,
                    2991,
                    688,
                    2993,
                    690,
                    1587,
                    3375,
                    3381,
                    3254,
                    60,
                    61,
                    62,
                    2109,
                    2496,
                    3132,
                    578,
                    3137,
                    1477,
                    3271,
                    2003,
                    3285,
                    472,
                    2009,
                    3160,
                    3035,
                    220,
                    604,
                    3036,
                    3325,
                    2657,
                    739,
                    2278,
                    233,
                    362,
                    748,
                    2543,
                    1265,
                    754,
                    628,
                    2038,
                    631,
                    3190,
                    633,
                    2554,
                    1275,
                    3196,
                    1277,
                    382
                ],
                "Encoding": [
                    637,
                    61
                ],
                "NewLine": [
                    637,
                    62
                ],
                "Depth": [
                    877,
                    63
                ],
                "int": [
                    1410,
                    134,
                    2569,
                    2058,
                    141,
                    1297,
                    1298,
                    1300,
                    2841,
                    282,
                    3354,
                    541,
                    413,
                    927,
                    1312,
                    935,
                    3112,
                    3113,
                    3114,
                    171,
                    3375,
                    3254,
                    3514,
                    3518,
                    63,
                    64,
                    65,
                    66,
                    67,
                    580,
                    1218,
                    3142,
                    71,
                    1352,
                    1353,
                    1868,
                    2002,
                    2004,
                    725,
                    2005,
                    1882,
                    604,
                    3425,
                    1126,
                    999,
                    3559,
                    490,
                    876,
                    368,
                    880,
                    881,
                    2935,
                    2169,
                    3196
                ],
                "NodeType": [
                    64,
                    877,
                    2783
                ],
                "LeafID": [
                    65,
                    2945,
                    2951,
                    2952,
                    878,
                    2935,
                    2169,
                    927
                ],
                "Priority": [
                    66,
                    878
                ],
                "Index": [
                    3360,
                    67,
                    1001,
                    3344,
                    3354
                ],
                "LN": [
                    2690,
                    2825,
                    2701,
                    1426,
                    2841,
                    1817,
                    2729,
                    1835,
                    1837,
                    2993,
                    1843,
                    2739,
                    1849,
                    1977,
                    700,
                    68,
                    2762,
                    716,
                    727,
                    2685
                ],
                "Union": [
                    68,
                    748,
                    134
                ],
                "Leaf": [
                    1541,
                    2182,
                    2183,
                    2184,
                    1545,
                    1034,
                    1550,
                    2446,
                    1428,
                    2837,
                    1817,
                    3354,
                    2331,
                    1822,
                    2591,
                    2592,
                    3360,
                    2597,
                    2598,
                    3368,
                    2857,
                    683,
                    1196,
                    946,
                    1587,
                    1843,
                    2610,
                    2611,
                    1079,
                    2614,
                    1977,
                    2616,
                    2617,
                    2869,
                    2365,
                    2621,
                    959,
                    3000,
                    2881,
                    1218,
                    1091,
                    68,
                    3012,
                    968,
                    2377,
                    1868,
                    1997,
                    3024,
                    2513,
                    981,
                    2136,
                    2137,
                    1882,
                    2138,
                    2995,
                    990,
                    1247,
                    2398,
                    2783,
                    1000,
                    1001,
                    748,
                    877,
                    1006,
                    879,
                    2412,
                    2672,
                    883,
                    1142,
                    2806,
                    2685,
                    2430
                ],
                "Node": [
                    2827,
                    2572,
                    661,
                    2594,
                    2600,
                    1835,
                    684,
                    2989,
                    688,
                    1456,
                    1462,
                    2619,
                    2624,
                    68,
                    1477,
                    2631,
                    718,
                    2900,
                    1497,
                    729,
                    1504,
                    1255,
                    748,
                    1520,
                    2812,
                    1535
                ],
                "SplitFunc": [
                    2081,
                    2290,
                    69
                ],
                "Callable": [
                    3360,
                    69
                ],
                "bool": [
                    1034,
                    2058,
                    1052,
                    542,
                    545,
                    1057,
                    1059,
                    3109,
                    2086,
                    1062,
                    1064,
                    3110,
                    3111,
                    1067,
                    1070,
                    1587,
                    1076,
                    1083,
                    69,
                    581,
                    2631,
                    1102,
                    2126,
                    1108,
                    1118,
                    1121,
                    100,
                    613,
                    614,
                    615,
                    1126,
                    1135,
                    1142,
                    2169,
                    121,
                    134,
                    141,
                    2701,
                    2729,
                    1196,
                    2739,
                    2762,
                    1247,
                    2783,
                    2806,
                    2297,
                    2812,
                    1280,
                    1282,
                    2306,
                    2825,
                    1295,
                    3353,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    3375,
                    3389,
                    2881,
                    2370,
                    2900,
                    2398,
                    3425,
                    2403,
                    2412,
                    369,
                    1404,
                    1405,
                    2430,
                    1407,
                    1408,
                    923,
                    925,
                    414,
                    946,
                    959,
                    968,
                    2513,
                    981,
                    2009,
                    491,
                    1003,
                    1004,
                    1006,
                    495,
                    2543,
                    1016,
                    2554
                ],
                "Iterator": [
                    1410,
                    2306,
                    1541,
                    1545,
                    2059,
                    1550,
                    3344,
                    1426,
                    3354,
                    2331,
                    3360,
                    2086,
                    1456,
                    1462,
                    1977,
                    700,
                    1218,
                    2370,
                    69,
                    1478,
                    2377,
                    716,
                    2126,
                    727,
                    1497,
                    3038,
                    1504,
                    1520,
                    2935,
                    2297,
                    2170,
                    3196,
                    2685,
                    1535
                ],
                "Timestamp": [
                    72,
                    70
                ],
                "float": [
                    70
                ],
                "FileSize": [
                    72,
                    71
                ],
                "CacheInfo": [
                    72,
                    73,
                    3536
                ],
                "Tuple": [
                    1312,
                    3360,
                    293,
                    72,
                    1001,
                    1353,
                    877,
                    3344,
                    1300,
                    3542,
                    3354,
                    637
                ],
                "Cache": [
                    388,
                    3559,
                    3529,
                    73,
                    428,
                    3542,
                    3518
                ],
                "Dict": [
                    73,
                    877,
                    878
                ],
                "out": [
                    737,
                    3139,
                    740,
                    744,
                    329,
                    74,
                    361,
                    745,
                    302,
                    3121,
                    3129,
                    731
                ],
                "partial": [
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    74,
                    75,
                    1559,
                    1560,
                    1563,
                    1564,
                    1565
                ],
                "click.secho": [
                    74,
                    75,
                    362
                ],
                "click": [
                    261,
                    134,
                    262,
                    265,
                    270,
                    272,
                    279,
                    281,
                    154,
                    167,
                    168,
                    176,
                    185,
                    193,
                    199,
                    74,
                    75,
                    208,
                    213,
                    218,
                    231,
                    3177,
                    362,
                    3185,
                    243,
                    252
                ],
                "err": [
                    3298,
                    326,
                    75,
                    306,
                    311,
                    3134
                ],
                "pygram.initialize": [
                    77
                ],
                "pygram": [
                    77,
                    78,
                    655,
                    656,
                    657,
                    663
                ],
                "syms": [
                    2589,
                    2594,
                    2600,
                    2601,
                    1579,
                    2619,
                    1607,
                    1608,
                    1609,
                    78,
                    1631,
                    1632,
                    1633,
                    1634,
                    1638,
                    1649,
                    1654,
                    1662,
                    1157,
                    1673,
                    1678,
                    1683,
                    2708,
                    1689,
                    1186,
                    1700,
                    1707,
                    684,
                    2732,
                    2741,
                    1724,
                    2748,
                    1737,
                    2764,
                    1741,
                    2770,
                    1749,
                    1756,
                    1760,
                    1256,
                    1768,
                    1259,
                    2795,
                    1773,
                    1778,
                    763,
                    1788,
                    1789,
                    764,
                    765,
                    768,
                    769,
                    770,
                    1793,
                    766,
                    767,
                    1799,
                    2827,
                    1811,
                    2835,
                    2847,
                    801,
                    802,
                    803,
                    804,
                    805,
                    808,
                    809,
                    810,
                    811,
                    812,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    1858,
                    2885,
                    2406,
                    2407,
                    2919,
                    1898,
                    2927,
                    1906,
                    1926,
                    1933,
                    1937,
                    1946,
                    3487,
                    1958,
                    2998,
                    3003,
                    3009,
                    3022
                ],
                "pygram.python_symbols": [
                    78
                ],
                "UserWarning": [
                    81
                ],
                "Exception": [
                    3223,
                    3233,
                    85,
                    407
                ],
                "Enum": [
                    107,
                    93
                ],
                "NO": [
                    1794,
                    1668,
                    1797,
                    1671,
                    1802,
                    1676,
                    1681,
                    1809,
                    1812,
                    1686,
                    1690,
                    1698,
                    1705,
                    1710,
                    1716,
                    1719,
                    1593,
                    1722,
                    1727,
                    1600,
                    1732,
                    1735,
                    1611,
                    1739,
                    1743,
                    1617,
                    1747,
                    1621,
                    1751,
                    1624,
                    1754,
                    94,
                    1763,
                    1636,
                    1766,
                    1771,
                    108,
                    1646,
                    1776,
                    1650,
                    1783,
                    1657,
                    1791
                ],
                "YES": [
                    110,
                    95
                ],
                "DIFF": [
                    96
                ],
                "CHECK": [
                    97
                ],
                "check": [
                    297,
                    3109,
                    101,
                    313
                ],
                "diff": [
                    101,
                    104,
                    297,
                    522,
                    3244,
                    3261,
                    3260,
                    573
                ],
                "cls.CHECK": [
                    102
                ],
                "cls": [
                    129,
                    102,
                    104,
                    123,
                    125,
                    127
                ],
                "cls.DIFF": [
                    104
                ],
                "cls.YES": [
                    104
                ],
                "classmethod": [
                    99,
                    747,
                    119
                ],
                "CACHED": [
                    109
                ],
                "Flag": [
                    113
                ],
                "AUTO_DETECT": [
                    114
                ],
                "PYTHON36": [
                    115
                ],
                "PYI": [
                    116
                ],
                "NO_STRING_NORMALIZATION": [
                    117
                ],
                "mode": [
                    384,
                    129,
                    130,
                    390,
                    399,
                    405,
                    298,
                    557,
                    430,
                    3257,
                    3515,
                    3523,
                    453,
                    593,
                    338,
                    599,
                    351,
                    485,
                    613,
                    614,
                    615,
                    3562,
                    503,
                    123,
                    125,
                    510,
                    127
                ],
                "cls.AUTO_DETECT": [
                    123
                ],
                "py36": [
                    2113,
                    614,
                    2088,
                    618,
                    299,
                    621,
                    2108,
                    2096,
                    2352,
                    632,
                    2298,
                    124,
                    2237
                ],
                "cls.PYTHON36": [
                    125
                ],
                "pyi": [
                    299,
                    126
                ],
                "cls.PYI": [
                    127
                ],
                "skip_string_normalization": [
                    128,
                    299
                ],
                "cls.NO_STRING_NORMALIZATION": [
                    129
                ],
                "click.Context": [
                    281,
                    134
                ],
                "click.Parameter": [
                    134
                ],
                "isinstance": [
                    3208,
                    3210,
                    2827,
                    141,
                    3213,
                    1428,
                    1822,
                    2857,
                    683,
                    2995,
                    2614,
                    3000,
                    2621,
                    3012,
                    718,
                    3024,
                    729,
                    1255,
                    754
                ],
                "value": [
                    3202,
                    3208,
                    3209,
                    141,
                    142,
                    3213,
                    3214,
                    3217,
                    146,
                    2454,
                    2455,
                    151,
                    2458,
                    2461,
                    164,
                    2607,
                    1072,
                    2003,
                    1112,
                    1114,
                    1123,
                    2808,
                    2809
                ],
                "root": [
                    320,
                    3046,
                    3049,
                    3053,
                    143,
                    144,
                    314,
                    3067
                ],
                "find_project_root": [
                    314,
                    143
                ],
                "ctx.params.get": [
                    143
                ],
                "ctx.params": [
                    143
                ],
                "ctx": [
                    160,
                    161,
                    330,
                    363,
                    143,
                    307,
                    312,
                    154,
                    159
                ],
                "path": [
                    3139,
                    3047,
                    144,
                    145,
                    146,
                    3538
                ],
                "path.is_file": [
                    145
                ],
                "pyproject_toml": [
                    152,
                    151
                ],
                "toml.load": [
                    151
                ],
                "toml": [
                    153,
                    151
                ],
                "config": [
                    162,
                    301,
                    302,
                    152,
                    156
                ],
                "get": [
                    152
                ],
                "pyproject_toml.get": [
                    152
                ],
                "toml.TomlDecodeError": [
                    153
                ],
                "OSError": [
                    153,
                    3569
                ],
                "click.BadOptionUsage": [
                    154
                ],
                "e": [
                    154
                ],
                "ctx.default_map": [
                    160,
                    161,
                    159
                ],
                "ctx.default_map.update": [
                    161
                ],
                "replace": [
                    162
                ],
                "k.replace": [
                    162
                ],
                "k": [
                    162,
                    933
                ],
                "v": [
                    1805,
                    1557,
                    1559,
                    1561,
                    1563,
                    1564,
                    1566,
                    1568,
                    1569,
                    162,
                    1570,
                    1571,
                    933,
                    1572,
                    1573,
                    1574,
                    1598,
                    2402,
                    2406,
                    2407,
                    753,
                    756
                ],
                "config.items": [
                    162
                ],
                "Optional": [
                    2690,
                    1091,
                    294,
                    135,
                    3368,
                    1835,
                    1837,
                    879,
                    1296,
                    1817,
                    990
                ],
                "write_back": [
                    384,
                    515,
                    452,
                    389,
                    478,
                    518,
                    297,
                    429,
                    398,
                    337,
                    402,
                    403,
                    567,
                    440,
                    569,
                    477,
                    350
                ],
                "WriteBack.from_configuration": [
                    297
                ],
                "WriteBack": [
                    389,
                    297,
                    492,
                    429,
                    543,
                    370,
                    403,
                    402,
                    567,
                    440,
                    569,
                    477,
                    478,
                    415
                ],
                "FileMode.from_configuration": [
                    298
                ],
                "FileMode": [
                    416,
                    544,
                    613,
                    582,
                    614,
                    615,
                    3559,
                    298,
                    493,
                    371,
                    3254,
                    503,
                    3514,
                    604,
                    3518
                ],
                "verbose": [
                    3111,
                    328,
                    359,
                    301,
                    313
                ],
                "include_regex": [
                    304,
                    320
                ],
                "re_compile_maybe_verbose": [
                    304,
                    309
                ],
                "include": [
                    304,
                    306,
                    3067,
                    3070
                ],
                "re.error": [
                    305,
                    310
                ],
                "re": [
                    2437,
                    2472,
                    2473,
                    2474,
                    3341,
                    305,
                    310,
                    2494
                ],
                "ctx.exit": [
                    312,
                    363,
                    330,
                    307
                ],
                "exclude_regex": [
                    320,
                    309
                ],
                "exclude": [
                    933,
                    2892,
                    2893,
                    309,
                    3061,
                    311,
                    3067
                ],
                "report": [
                    406,
                    408,
                    433,
                    313,
                    320,
                    339,
                    472,
                    352,
                    481,
                    3173,
                    360,
                    3176,
                    362,
                    363,
                    3052,
                    3181,
                    3184,
                    3187,
                    3063,
                    3067
                ],
                "Report": [
                    313
                ],
                "quiet": [
                    328,
                    313,
                    3110,
                    359
                ],
                "src": [
                    643,
                    516,
                    391,
                    520,
                    521,
                    395,
                    3088,
                    405,
                    406,
                    3222,
                    408,
                    554,
                    555,
                    557,
                    432,
                    433,
                    3121,
                    3126,
                    3128,
                    314,
                    316,
                    573,
                    3134,
                    3260,
                    449,
                    455,
                    456,
                    468,
                    472,
                    3549,
                    3550,
                    3551,
                    480,
                    481,
                    3552,
                    3554,
                    3566,
                    502,
                    505,
                    506,
                    382
                ],
                "sources": [
                    324,
                    327,
                    456,
                    332,
                    334,
                    431,
                    3566,
                    347,
                    434,
                    315,
                    3549,
                    319
                ],
                "Set": [
                    2945,
                    1477,
                    2951,
                    2952,
                    2572,
                    2989,
                    2991,
                    1558,
                    2935,
                    3542,
                    315,
                    412,
                    2783
                ],
                "set": [
                    2945,
                    2951,
                    2952,
                    2892,
                    1581,
                    1582,
                    2991,
                    3026,
                    1558,
                    759,
                    315,
                    3548
                ],
                "s": [
                    322,
                    326,
                    3175,
                    3177,
                    3180,
                    3181,
                    3183,
                    3185,
                    316,
                    317
                ],
                "p": [
                    1799,
                    1673,
                    1678,
                    1683,
                    1811,
                    1700,
                    1703,
                    1707,
                    944,
                    1714,
                    1724,
                    1597,
                    317,
                    318,
                    320,
                    322,
                    1730,
                    324,
                    1605,
                    1606,
                    1737,
                    1741,
                    1615,
                    1745,
                    1749,
                    1756,
                    1759,
                    1760,
                    2400,
                    2406,
                    2407,
                    1768,
                    2794,
                    2795,
                    1773,
                    2798,
                    2801,
                    1778,
                    2803,
                    1781
                ],
                "p.is_dir": [
                    318
                ],
                "sources.update": [
                    319
                ],
                "gen_python_files_in_dir": [
                    320,
                    3067
                ],
                "p.is_file": [
                    322
                ],
                "sources.add": [
                    324
                ],
                "len": [
                    2563,
                    2830,
                    2958,
                    3472,
                    3346,
                    2836,
                    1054,
                    2722,
                    3364,
                    3370,
                    2475,
                    2733,
                    2742,
                    3383,
                    1208,
                    2753,
                    2757,
                    3397,
                    327,
                    3015,
                    332,
                    1109,
                    2773,
                    1240,
                    1241,
                    2017,
                    2278,
                    2422,
                    3446,
                    2815
                ],
                "reformat_one": [
                    333
                ],
                "sources.pop": [
                    334
                ],
                "line_length": [
                    384,
                    390,
                    3463,
                    2955,
                    396,
                    405,
                    2076,
                    2087,
                    2088,
                    2089,
                    557,
                    430,
                    3504,
                    3383,
                    2233,
                    3257,
                    3515,
                    2237,
                    2113,
                    450,
                    2243,
                    3523,
                    335,
                    593,
                    599,
                    348,
                    485,
                    3562,
                    632,
                    510
                ],
                "fast": [
                    384,
                    451,
                    397,
                    557,
                    336,
                    597,
                    349,
                    510
                ],
                "loop": [
                    353,
                    483,
                    358,
                    3307,
                    460,
                    461,
                    3313,
                    3314,
                    342,
                    345,
                    3322,
                    446
                ],
                "asyncio.get_event_loop": [
                    342
                ],
                "asyncio": [
                    3296,
                    483,
                    458,
                    3307,
                    466,
                    3314,
                    342
                ],
                "executor": [
                    447,
                    354,
                    343
                ],
                "ProcessPoolExecutor": [
                    343
                ],
                "os.cpu_count": [
                    343
                ],
                "os": [
                    343
                ],
                "loop.run_until_complete": [
                    345,
                    3313
                ],
                "schedule_formatting": [
                    346
                ],
                "shutdown": [
                    358
                ],
                "bang": [
                    360,
                    361
                ],
                "report.return_code": [
                    360,
                    363
                ],
                "click.command": [
                    167
                ],
                "dict": [
                    877,
                    878,
                    167
                ],
                "click.option": [
                    193,
                    199,
                    168,
                    231,
                    270,
                    176,
                    208,
                    243,
                    213,
                    185,
                    218,
                    252
                ],
                "click.version_option": [
                    261
                ],
                "click.argument": [
                    262
                ],
                "click.Path": [
                    272,
                    265
                ],
                "read_pyproject_toml": [
                    276
                ],
                "click.pass_context": [
                    279
                ],
                "changed": [
                    481,
                    386,
                    393,
                    394,
                    3118,
                    401,
                    402,
                    403,
                    3125,
                    406,
                    474,
                    381,
                    478
                ],
                "Changed.NO": [
                    403,
                    3125,
                    474,
                    381,
                    478
                ],
                "Changed": [
                    386,
                    393,
                    394,
                    3116,
                    3118,
                    401,
                    402,
                    403,
                    433,
                    3125,
                    474,
                    381,
                    478
                ],
                "src.is_file": [
                    382
                ],
                "format_stdin_to_stdout": [
                    383
                ],
                "Changed.YES": [
                    3118,
                    401,
                    386,
                    474
                ],
                "cache": [
                    388,
                    485,
                    390,
                    392,
                    3529,
                    428,
                    3533,
                    430,
                    431,
                    3566,
                    405,
                    3551
                ],
                "WriteBack.DIFF": [
                    440,
                    569,
                    389,
                    429
                ],
                "read_cache": [
                    430,
                    390
                ],
                "res_src": [
                    392,
                    391
                ],
                "src.resolve": [
                    3566,
                    3550,
                    391
                ],
                "get_cache_info": [
                    392,
                    3566,
                    3551
                ],
                "Changed.CACHED": [
                    393,
                    394,
                    433,
                    402
                ],
                "format_file_in_place": [
                    448,
                    394
                ],
                "WriteBack.YES": [
                    402,
                    477,
                    567
                ],
                "WriteBack.CHECK": [
                    403,
                    478
                ],
                "write_cache": [
                    485,
                    405
                ],
                "report.done": [
                    433,
                    481,
                    406
                ],
                "report.failed": [
                    408,
                    472
                ],
                "exc": [
                    3234,
                    3236,
                    679,
                    681,
                    408,
                    3228
                ],
                "BaseEventLoop": [
                    418,
                    3303
                ],
                "Executor": [
                    419
                ],
                "cached": [
                    432,
                    431
                ],
                "filter_cached": [
                    431
                ],
                "sorted": [
                    432,
                    3200,
                    456
                ],
                "cancelled": [
                    482,
                    483,
                    437,
                    470
                ],
                "sources_to_cache": [
                    480,
                    484,
                    485,
                    438
                ],
                "lock": [
                    535,
                    454,
                    523,
                    524,
                    439,
                    536,
                    444
                ],
                "manager": [
                    443,
                    444
                ],
                "Manager": [
                    443
                ],
                "manager.Lock": [
                    444
                ],
                "tasks": [
                    458,
                    3299,
                    468,
                    445
                ],
                "loop.run_in_executor": [
                    446
                ],
                "pending": [
                    458,
                    460,
                    461,
                    465,
                    466
                ],
                "Iterable": [
                    3296,
                    3076,
                    3559,
                    458,
                    3542,
                    927
                ],
                "asyncio.Task": [
                    3296,
                    458,
                    3307
                ],
                "tasks.keys": [
                    458
                ],
                "loop.add_signal_handler": [
                    460,
                    461
                ],
                "signal.SIGINT": [
                    460
                ],
                "signal": [
                    460,
                    461
                ],
                "cancel": [
                    460,
                    461
                ],
                "signal.SIGTERM": [
                    461
                ],
                "NotImplementedError": [
                    462
                ],
                "done": [
                    3554,
                    3555,
                    466,
                    467,
                    3548
                ],
                "_": [
                    466,
                    627,
                    630,
                    1079,
                    1276
                ],
                "asyncio.wait": [
                    466
                ],
                "asyncio.FIRST_COMPLETED": [
                    466
                ],
                "task": [
                    3299,
                    3300,
                    3307,
                    3311,
                    3312,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    474
                ],
                "tasks.pop": [
                    468
                ],
                "task.cancelled": [
                    469
                ],
                "cancelled.append": [
                    470
                ],
                "task.exception": [
                    472,
                    471
                ],
                "task.result": [
                    474
                ],
                "sources_to_cache.append": [
                    480
                ],
                "asyncio.gather": [
                    3314,
                    483
                ],
                "Any": [
                    494
                ],
                "WriteBack.NO": [
                    492,
                    543
                ],
                "FileMode.AUTO_DETECT": [
                    544,
                    582,
                    493,
                    3254,
                    604
                ],
                "src.suffix": [
                    502
                ],
                "FileMode.PYI": [
                    613,
                    503
                ],
                "then": [
                    520,
                    505,
                    571,
                    553
                ],
                "datetime.utcfromtimestamp": [
                    505
                ],
                "datetime": [
                    505,
                    570,
                    553,
                    519
                ],
                "st_mtime": [
                    505
                ],
                "src.stat": [
                    505
                ],
                "open": [
                    506,
                    516
                ],
                "buf": [
                    506,
                    507
                ],
                "src_contents": [
                    610,
                    522,
                    590,
                    593,
                    594,
                    598,
                    599,
                    507,
                    510
                ],
                "encoding": [
                    516,
                    644,
                    646,
                    554,
                    650,
                    651,
                    528,
                    565,
                    507
                ],
                "newline": [
                    516,
                    648,
                    554,
                    651,
                    529,
                    565,
                    507
                ],
                "decode_bytes": [
                    554,
                    507
                ],
                "buf.read": [
                    507
                ],
                "dst_contents": [
                    611,
                    517,
                    631,
                    522,
                    593,
                    594,
                    628,
                    598,
                    599,
                    600,
                    633,
                    634,
                    509
                ],
                "format_file_contents": [
                    557,
                    509
                ],
                "NothingChanged": [
                    512,
                    560,
                    595,
                    591
                ],
                "write_back.YES": [
                    515
                ],
                "f": [
                    516,
                    517,
                    3277,
                    526,
                    3279,
                    3281,
                    3282,
                    532,
                    533,
                    564,
                    568,
                    573,
                    574
                ],
                "f.write": [
                    517,
                    3279,
                    3281,
                    532,
                    568,
                    573
                ],
                "write_back.DIFF": [
                    518
                ],
                "now": [
                    521,
                    570,
                    572,
                    519
                ],
                "datetime.utcnow": [
                    553,
                    570,
                    519
                ],
                "src_name": [
                    520,
                    522,
                    571,
                    573
                ],
                "dst_name": [
                    521,
                    522,
                    572,
                    573
                ],
                "diff_contents": [
                    522,
                    532
                ],
                "lock.acquire": [
                    524
                ],
                "io.TextIOWrapper": [
                    650,
                    564,
                    526
                ],
                "io": [
                    650,
                    643,
                    564,
                    526
                ],
                "sys.stdout.buffer": [
                    565,
                    527
                ],
                "sys.stdout": [
                    565,
                    527
                ],
                "sys": [
                    1126,
                    554,
                    527,
                    565,
                    2328,
                    3224
                ],
                "f.detach": [
                    533,
                    574
                ],
                "lock.release": [
                    536
                ],
                "sys.stdin.buffer.read": [
                    554
                ],
                "sys.stdin.buffer": [
                    554
                ],
                "sys.stdin": [
                    554
                ],
                "dst": [
                    3232,
                    3234,
                    555,
                    557,
                    3261,
                    568,
                    3257,
                    3258,
                    3260,
                    573
                ],
                "src_contents.strip": [
                    590
                ],
                "format_str": [
                    593,
                    3257
                ],
                "assert_equivalent": [
                    598
                ],
                "assert_stable": [
                    599
                ],
                "src_node": [
                    610,
                    612,
                    614,
                    616,
                    626
                ],
                "lib2to3_parse": [
                    610,
                    755
                ],
                "future_imports": [
                    618,
                    612
                ],
                "get_future_imports": [
                    612
                ],
                "is_pyi": [
                    613,
                    619,
                    1295,
                    623,
                    1404
                ],
                "FileMode.PYTHON36": [
                    614
                ],
                "is_python36": [
                    614
                ],
                "normalize_strings": [
                    620,
                    1405,
                    615
                ],
                "FileMode.NO_STRING_NORMALIZATION": [
                    615
                ],
                "normalize_fmt_off": [
                    616
                ],
                "lines": [
                    674,
                    644,
                    645,
                    676,
                    648,
                    617,
                    2088,
                    2089,
                    2090,
                    3278,
                    3279,
                    3280,
                    626
                ],
                "LineGenerator": [
                    617
                ],
                "elt": [
                    629,
                    623
                ],
                "EmptyLineTracker": [
                    623
                ],
                "empty_line": [
                    624,
                    628,
                    631
                ],
                "Line": [
                    1410,
                    2179,
                    2180,
                    1541,
                    2181,
                    2306,
                    1545,
                    2058,
                    2059,
                    1550,
                    1423,
                    1296,
                    1426,
                    1300,
                    2327,
                    3353,
                    2331,
                    1312,
                    2339,
                    2297,
                    2086,
                    3375,
                    1456,
                    2357,
                    1462,
                    2106,
                    3389,
                    2881,
                    2370,
                    1478,
                    2375,
                    1352,
                    2377,
                    2126,
                    2385,
                    2133,
                    2134,
                    2135,
                    2264,
                    1497,
                    1504,
                    3425,
                    624,
                    1520,
                    1397,
                    2935,
                    2169,
                    2170,
                    1406,
                    1535
                ],
                "after": [
                    1306,
                    1308,
                    1310,
                    1208,
                    1209,
                    1215,
                    2524,
                    2526,
                    2527,
                    2529,
                    2530,
                    2532,
                    2533,
                    625,
                    627,
                    2548,
                    629,
                    2550,
                    2551
                ],
                "current_line": [
                    2327,
                    1306,
                    1309,
                    2335,
                    2337,
                    1314,
                    2339,
                    1316,
                    2340,
                    1318,
                    1324,
                    1331,
                    1332,
                    2355,
                    2357,
                    2358,
                    1337,
                    2362,
                    2363,
                    2365,
                    2366,
                    1345,
                    2375,
                    1354,
                    1355,
                    2381,
                    2383,
                    2385,
                    2386,
                    1363,
                    1370,
                    2394,
                    2395,
                    1376,
                    1378,
                    1379,
                    1384,
                    1391,
                    626,
                    629,
                    632,
                    1406
                ],
                "lines.visit": [
                    626
                ],
                "range": [
                    1241,
                    627,
                    630,
                    1079
                ],
                "before": [
                    1306,
                    1307,
                    1310,
                    2551,
                    1319,
                    1320,
                    1323,
                    1328,
                    1330,
                    1332,
                    1340,
                    1347,
                    1349,
                    1371,
                    2524,
                    2531,
                    2533,
                    2548,
                    629,
                    630,
                    2549
                ],
                "elt.maybe_empty_lines": [
                    629
                ],
                "line": [
                    3457,
                    3458,
                    2179,
                    2180,
                    2181,
                    2948,
                    2313,
                    2953,
                    2188,
                    2317,
                    3472,
                    2070,
                    2071,
                    2327,
                    2074,
                    2075,
                    2076,
                    2973,
                    2078,
                    2082,
                    2339,
                    3363,
                    2213,
                    2342,
                    2087,
                    2088,
                    2345,
                    3369,
                    3499,
                    3501,
                    2096,
                    2098,
                    2229,
                    2357,
                    3381,
                    3385,
                    2108,
                    2237,
                    2372,
                    3396,
                    3448,
                    2375,
                    3449,
                    2123,
                    2891,
                    2893,
                    3450,
                    2385,
                    2388,
                    2133,
                    2134,
                    2135,
                    2391,
                    3289,
                    3290,
                    2141,
                    2016,
                    2017,
                    2018,
                    2019,
                    2021,
                    3432,
                    2028,
                    2160,
                    3446,
                    632,
                    633,
                    2298,
                    3451
                ],
                "split_line": [
                    632,
                    2113
                ],
                "bytes": [
                    637
                ],
                "srcbuf": [
                    649,
                    650,
                    643,
                    644
                ],
                "io.BytesIO": [
                    643
                ],
                "tokenize.detect_encoding": [
                    644
                ],
                "tokenize": [
                    644
                ],
                "srcbuf.readline": [
                    644
                ],
                "srcbuf.seek": [
                    649
                ],
                "tiow": [
                    650,
                    651
                ],
                "tiow.read": [
                    651
                ],
                "GRAMMARS": [
                    666,
                    654
                ],
                "pygram.python_grammar_no_print_statement_no_exec_statement": [
                    655
                ],
                "pygram.python_grammar_no_print_statement": [
                    656,
                    663
                ],
                "pygram.python_grammar": [
                    657
                ],
                "grammar": [
                    666,
                    667,
                    663
                ],
                "src_txt": [
                    664,
                    665,
                    674,
                    669
                ],
                "drv": [
                    667,
                    669
                ],
                "driver.Driver": [
                    667
                ],
                "driver": [
                    667
                ],
                "pytree.convert": [
                    667
                ],
                "pytree": [
                    667
                ],
                "result": [
                    669,
                    2210,
                    2212,
                    2214,
                    683,
                    684,
                    685,
                    2106,
                    2112,
                    2119,
                    2259,
                    2260,
                    2261,
                    2010,
                    2012,
                    2029,
                    2157,
                    2159,
                    2161,
                    2035,
                    2163,
                    2164,
                    2165
                ],
                "drv.parse_string": [
                    669
                ],
                "ParseError": [
                    672
                ],
                "lineno": [
                    673,
                    676,
                    679
                ],
                "column": [
                    673,
                    679
                ],
                "pe.context": [
                    673
                ],
                "pe": [
                    673
                ],
                "src_txt.splitlines": [
                    674
                ],
                "faulty_line": [
                    676,
                    678,
                    679
                ],
                "IndexError": [
                    1092,
                    677,
                    1828,
                    2314,
                    2894,
                    1087
                ],
                "ValueError": [
                    2336,
                    679,
                    3050,
                    2382,
                    2894,
                    2320,
                    2865,
                    1042,
                    1045
                ],
                "syms.file_input": [
                    1858,
                    684
                ],
                "code": [
                    754,
                    690,
                    691,
                    756,
                    755
                ],
                "node": [
                    1537,
                    2581,
                    2587,
                    2594,
                    2600,
                    2601,
                    2607,
                    2610,
                    2611,
                    2619,
                    2628,
                    2636,
                    3198,
                    3200,
                    3202,
                    3219,
                    2708,
                    2709,
                    2710,
                    2711,
                    2712,
                    2716,
                    2717,
                    2722,
                    2723,
                    2732,
                    2733,
                    2734,
                    2735,
                    690,
                    2741,
                    2742,
                    2745,
                    2756,
                    2757,
                    710,
                    711,
                    2758,
                    713,
                    714,
                    2764,
                    718,
                    719,
                    2767,
                    2770,
                    2773,
                    2776,
                    729,
                    730,
                    733,
                    739,
                    741,
                    744,
                    745,
                    2815,
                    2816,
                    2817,
                    2818,
                    2822,
                    2827,
                    2830,
                    2833,
                    1819,
                    1820,
                    2847,
                    2850,
                    2851,
                    1831,
                    2856,
                    1837,
                    1838,
                    1839,
                    1840,
                    2908,
                    1428,
                    1430,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1460,
                    1471,
                    3008,
                    1490,
                    1491,
                    1499,
                    1500,
                    1502,
                    1506,
                    1508,
                    1509,
                    1512,
                    1516,
                    1518,
                    1524
                ],
                "T": [
                    716,
                    3344,
                    724,
                    694,
                    727,
                    697,
                    700
                ],
                "TypeVar": [
                    694
                ],
                "Generic": [
                    697
                ],
                "node.type": [
                    739,
                    2756,
                    710,
                    711,
                    1447,
                    713,
                    1450,
                    2601,
                    1452,
                    2732,
                    2764,
                    2767,
                    2827,
                    2770,
                    2708,
                    2741,
                    730,
                    2847
                ],
                "name": [
                    713,
                    714,
                    711
                ],
                "token.tok_name": [
                    739,
                    773,
                    711
                ],
                "token": [
                    2591,
                    2592,
                    1059,
                    2597,
                    2598,
                    1580,
                    2604,
                    1071,
                    1584,
                    2608,
                    2610,
                    2611,
                    1079,
                    2616,
                    2617,
                    1602,
                    1094,
                    1095,
                    1606,
                    1097,
                    1619,
                    1620,
                    1111,
                    1623,
                    1113,
                    1628,
                    1122,
                    1648,
                    1146,
                    1660,
                    1151,
                    1664,
                    1155,
                    2691,
                    1675,
                    1680,
                    1688,
                    1692,
                    2718,
                    1184,
                    1697,
                    1704,
                    1709,
                    2222,
                    2734,
                    2735,
                    1713,
                    2225,
                    1715,
                    1205,
                    1718,
                    1721,
                    2747,
                    2749,
                    1726,
                    2753,
                    1731,
                    1734,
                    711,
                    2758,
                    2767,
                    1746,
                    1750,
                    1753,
                    2777,
                    739,
                    1769,
                    1775,
                    760,
                    1787,
                    2816,
                    1793,
                    2817,
                    2818,
                    1796,
                    773,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    1800,
                    1801,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    2837,
                    799,
                    2852,
                    2362,
                    2875,
                    2365,
                    2877,
                    3400,
                    2892,
                    3410,
                    1876,
                    3412,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    2404,
                    2909,
                    2914,
                    1896,
                    2921,
                    3413,
                    1804,
                    1914,
                    1916,
                    1920,
                    898,
                    1808,
                    3480,
                    3481,
                    1434,
                    1949,
                    3485,
                    1447,
                    1961,
                    1450,
                    2996,
                    952,
                    3001,
                    961,
                    3016,
                    3017,
                    1996,
                    974,
                    1492,
                    983,
                    992,
                    2025,
                    1528,
                    1020
                ],
                "type_repr": [
                    713,
                    730
                ],
                "getattr": [
                    714,
                    3202
                ],
                "self": [
                    1026,
                    1538,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1539,
                    1543,
                    1547,
                    1548,
                    1551,
                    1040,
                    1041,
                    1552,
                    1553,
                    1044,
                    1557,
                    1559,
                    1560,
                    1049,
                    1563,
                    1564,
                    1565,
                    1054,
                    1568,
                    1533,
                    1569,
                    1059,
                    1570,
                    1571,
                    1572,
                    1573,
                    1064,
                    1574,
                    1575,
                    1576,
                    1070,
                    1071,
                    1072,
                    3119,
                    3120,
                    3122,
                    3124,
                    1078,
                    3130,
                    1086,
                    3135,
                    3138,
                    1091,
                    3152,
                    3155,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    3165,
                    1121,
                    1122,
                    1123,
                    3174,
                    3175,
                    1128,
                    3177,
                    3179,
                    3180,
                    3181,
                    3182,
                    3183,
                    1136,
                    3185,
                    1145,
                    1146,
                    1152,
                    1156,
                    1158,
                    1163,
                    1164,
                    1172,
                    1179,
                    1191,
                    1200,
                    1208,
                    1215,
                    1223,
                    714,
                    1227,
                    720,
                    1234,
                    728,
                    1240,
                    1241,
                    1242,
                    732,
                    1244,
                    734,
                    1245,
                    736,
                    1249,
                    1267,
                    1270,
                    1271,
                    1276,
                    1282,
                    1306,
                    1307,
                    1308,
                    1309,
                    1315,
                    1325,
                    1326,
                    1327,
                    1332,
                    1335,
                    1336,
                    1338,
                    1343,
                    1344,
                    1355,
                    1356,
                    1360,
                    1363,
                    1364,
                    1369,
                    1370,
                    1375,
                    1376,
                    1378,
                    1379,
                    1384,
                    901,
                    902,
                    904,
                    905,
                    1418,
                    907,
                    908,
                    909,
                    910,
                    911,
                    1419,
                    913,
                    1422,
                    915,
                    1423,
                    917,
                    918,
                    919,
                    920,
                    921,
                    1429,
                    1433,
                    1436,
                    925,
                    1437,
                    1441,
                    1443,
                    1444,
                    933,
                    1447,
                    1448,
                    1451,
                    940,
                    1453,
                    943,
                    944,
                    1459,
                    1460,
                    953,
                    954,
                    1467,
                    1471,
                    961,
                    962,
                    963,
                    1474,
                    975,
                    976,
                    1493,
                    983,
                    984,
                    985,
                    1495,
                    1499,
                    1500,
                    1502,
                    992,
                    1508,
                    1509,
                    1511,
                    1512,
                    1513,
                    1516,
                    1517,
                    1518,
                    1522,
                    1526,
                    1020,
                    1021,
                    1022
                ],
                "self.visit_default": [
                    1509,
                    1512,
                    714,
                    1547,
                    1518,
                    1553,
                    1460,
                    1502,
                    1471
                ],
                "child": [
                    3072,
                    1537,
                    1539,
                    2833,
                    2835,
                    2836,
                    2837,
                    2587,
                    2589,
                    2590,
                    2593,
                    2594,
                    2595,
                    2599,
                    2600,
                    2604,
                    2606,
                    2608,
                    2994,
                    2995,
                    2996,
                    2997,
                    2614,
                    2998,
                    2999,
                    2618,
                    2619,
                    3003,
                    2621,
                    3004,
                    3008,
                    3009,
                    3011,
                    3015,
                    3017,
                    719,
                    720,
                    3069,
                    1491,
                    1492,
                    1495,
                    733,
                    734,
                    3047,
                    3049,
                    3051,
                    3053,
                    3059,
                    1525,
                    1526,
                    3063,
                    1528,
                    3066,
                    3067,
                    1532,
                    1533
                ],
                "node.children": [
                    2816,
                    1537,
                    2817,
                    2818,
                    2822,
                    2830,
                    2833,
                    2587,
                    2716,
                    2717,
                    2722,
                    2723,
                    2850,
                    2851,
                    2856,
                    2733,
                    2734,
                    2607,
                    2735,
                    2742,
                    2745,
                    3008,
                    2757,
                    2758,
                    719,
                    1491,
                    2773,
                    2776,
                    1500,
                    733,
                    1524,
                    2815
                ],
                "self.visit": [
                    1539,
                    720,
                    1526,
                    1495,
                    1500,
                    1533,
                    734
                ],
                "Visitor": [
                    724,
                    1397
                ],
                "tree_depth": [
                    725
                ],
                "indent": [
                    737,
                    740,
                    1419,
                    1423,
                    1270,
                    728,
                    1273,
                    731
                ],
                "self.tree_depth": [
                    728,
                    736,
                    732
                ],
                "_type": [
                    737,
                    739,
                    740,
                    730,
                    731
                ],
                "token.tok_name.get": [
                    739
                ],
                "node.prefix": [
                    744,
                    2581,
                    741
                ],
                "node.value": [
                    745,
                    2767
                ],
                "DebugVisitor": [
                    753
                ],
                "list": [
                    1826,
                    1000,
                    1001,
                    2088,
                    3208,
                    1298,
                    756,
                    2648,
                    2587
                ],
                "v.visit": [
                    756
                ],
                "dataclass": [
                    3105,
                    995,
                    1285,
                    872,
                    2000,
                    723,
                    1396
                ],
                "KEYWORDS": [
                    759
                ],
                "keyword.kwlist": [
                    759
                ],
                "keyword": [
                    759
                ],
                "WHITESPACE": [
                    760,
                    1452,
                    2645
                ],
                "token.DEDENT": [
                    760,
                    2818
                ],
                "token.INDENT": [
                    760,
                    2817
                ],
                "token.NEWLINE": [
                    760,
                    2816,
                    3017
                ],
                "FLOW_CONTROL": [
                    761
                ],
                "STATEMENT": [
                    762,
                    1506
                ],
                "syms.if_stmt": [
                    763
                ],
                "syms.while_stmt": [
                    764
                ],
                "syms.for_stmt": [
                    765
                ],
                "syms.try_stmt": [
                    766
                ],
                "syms.except_clause": [
                    767
                ],
                "syms.with_stmt": [
                    768
                ],
                "syms.funcdef": [
                    769
                ],
                "syms.classdef": [
                    770,
                    1749
                ],
                "STANDALONE_COMMENT": [
                    772,
                    773,
                    1129,
                    2027,
                    1199,
                    1584,
                    2673,
                    2959,
                    2643,
                    1044,
                    1210,
                    2363,
                    1054
                ],
                "LOGIC_OPERATORS": [
                    774,
                    1967
                ],
                "COMPARATORS": [
                    1910,
                    775
                ],
                "token.LESS": [
                    776
                ],
                "token.GREATER": [
                    777
                ],
                "token.EQEQUAL": [
                    778
                ],
                "token.NOTEQUAL": [
                    779
                ],
                "token.LESSEQUAL": [
                    780
                ],
                "token.GREATEREQUAL": [
                    781
                ],
                "MATH_OPERATORS": [
                    1904,
                    1655,
                    783
                ],
                "token.VBAR": [
                    784,
                    854
                ],
                "token.CIRCUMFLEX": [
                    785,
                    855
                ],
                "token.AMPER": [
                    856,
                    786
                ],
                "token.LEFTSHIFT": [
                    857,
                    787
                ],
                "token.RIGHTSHIFT": [
                    1660,
                    858,
                    788
                ],
                "token.PLUS": [
                    859,
                    789
                ],
                "token.MINUS": [
                    860,
                    790
                ],
                "token.STAR": [
                    2608,
                    799,
                    861,
                    791
                ],
                "token.SLASH": [
                    792,
                    862
                ],
                "token.DOUBLESLASH": [
                    793,
                    863
                ],
                "token.PERCENT": [
                    864,
                    794
                ],
                "token.AT": [
                    865,
                    1746,
                    795,
                    1059
                ],
                "token.TILDE": [
                    866,
                    796
                ],
                "token.DOUBLESTAR": [
                    1775,
                    867,
                    797,
                    799
                ],
                "STARS": [
                    1734,
                    2791,
                    2924,
                    1644,
                    2929,
                    799
                ],
                "VARARGS_PARENTS": [
                    800,
                    1890,
                    1645,
                    2350
                ],
                "syms.arglist": [
                    801,
                    1186,
                    2919,
                    1673,
                    1631
                ],
                "syms.argument": [
                    1632,
                    1793,
                    802,
                    2927,
                    1724
                ],
                "syms.trailer": [
                    827,
                    803,
                    1707,
                    3487
                ],
                "syms.typedargslist": [
                    1683,
                    804,
                    1638,
                    2919
                ],
                "syms.varargslist": [
                    1634,
                    805,
                    1678
                ],
                "UNPACKING_PARENTS": [
                    1890,
                    1645,
                    807
                ],
                "syms.atom": [
                    2594,
                    2885,
                    808,
                    1768,
                    2600,
                    2732,
                    2770,
                    2835,
                    2708,
                    2741,
                    2619,
                    2589,
                    2847
                ],
                "syms.dictsetmaker": [
                    809,
                    1773
                ],
                "syms.listmaker": [
                    1256,
                    810,
                    1157
                ],
                "syms.testlist_gexp": [
                    811,
                    2748
                ],
                "syms.testlist_star_expr": [
                    1579,
                    812
                ],
                "TEST_DESCENDANTS": [
                    1262,
                    814
                ],
                "syms.test": [
                    1937,
                    815
                ],
                "syms.lambdef": [
                    816
                ],
                "syms.or_test": [
                    817
                ],
                "syms.and_test": [
                    818
                ],
                "syms.not_test": [
                    819
                ],
                "syms.comparison": [
                    1946,
                    820
                ],
                "syms.star_expr": [
                    1778,
                    2795,
                    821,
                    1906
                ],
                "syms.expr": [
                    822
                ],
                "syms.xor_expr": [
                    823
                ],
                "syms.and_expr": [
                    824
                ],
                "syms.shift_expr": [
                    825,
                    1662
                ],
                "syms.arith_expr": [
                    826
                ],
                "syms.term": [
                    828
                ],
                "syms.power": [
                    829
                ],
                "ASSIGNMENTS": [
                    1572,
                    831
                ],
                "COMPREHENSION_PRIORITY": [
                    1928,
                    1935,
                    847
                ],
                "COMMA_PRIORITY": [
                    848,
                    2897,
                    1877,
                    2712,
                    2361
                ],
                "TERNARY_PRIORITY": [
                    849,
                    1938
                ],
                "LOGIC_PRIORITY": [
                    1968,
                    850
                ],
                "STRING_PRIORITY": [
                    851,
                    1918
                ],
                "COMPARATOR_PRIORITY": [
                    1953,
                    1965,
                    852,
                    1941,
                    1911
                ],
                "MATH_PRIORITIES": [
                    1908,
                    853
                ],
                "DOT_PRIORITY": [
                    2323,
                    3442,
                    1901,
                    869
                ],
                "depth": [
                    1184,
                    3206,
                    999,
                    3211,
                    876,
                    1324,
                    1325,
                    3214,
                    1328,
                    1169,
                    1330,
                    3217,
                    3219,
                    1338,
                    3198
                ],
                "bracket_match": [
                    877
                ],
                "Factory": [
                    1000,
                    1001,
                    1002,
                    877,
                    878,
                    1298,
                    1406
                ],
                "delimiters": [
                    878
                ],
                "previous": [
                    1960,
                    1948,
                    1961,
                    1899,
                    1962,
                    879,
                    1915,
                    1916,
                    1949,
                    1950
                ],
                "_for_loop_variable": [
                    880
                ],
                "_lambda_arguments": [
                    881
                ],
                "leaf.type": [
                    1920,
                    898,
                    3459,
                    903,
                    905,
                    3466,
                    2959,
                    2194,
                    916,
                    917,
                    1044,
                    2966,
                    2968,
                    1184,
                    3507,
                    952,
                    2875,
                    1596,
                    2877,
                    961,
                    1996,
                    3405,
                    974,
                    3410,
                    1876,
                    3412,
                    983,
                    3416,
                    2144,
                    2401,
                    2150,
                    2791,
                    1896,
                    1129,
                    1904,
                    1908,
                    1910,
                    1016,
                    1914,
                    1020
                ],
                "leaf": [
                    1025,
                    1026,
                    2443,
                    1029,
                    1030,
                    1031,
                    1032,
                    2953,
                    1547,
                    1553,
                    1044,
                    1049,
                    3466,
                    2958,
                    2959,
                    2962,
                    1596,
                    1597,
                    1598,
                    2964,
                    1605,
                    2636,
                    1613,
                    2638,
                    2644,
                    2648,
                    2141,
                    2144,
                    2145,
                    2148,
                    2150,
                    2151,
                    1128,
                    1129,
                    1130,
                    2158,
                    2159,
                    1136,
                    1137,
                    2160,
                    2690,
                    2188,
                    2190,
                    2192,
                    2194,
                    2195,
                    1172,
                    1173,
                    2196,
                    1179,
                    1180,
                    1183,
                    1184,
                    1186,
                    2211,
                    2212,
                    2213,
                    1228,
                    2791,
                    2794,
                    1260,
                    2808,
                    1274,
                    1275,
                    2837,
                    2335,
                    3363,
                    2340,
                    3364,
                    2342,
                    2343,
                    3365,
                    2345,
                    3369,
                    2348,
                    2349,
                    2350,
                    2860,
                    2861,
                    2353,
                    3372,
                    1848,
                    1849,
                    2875,
                    2876,
                    2877,
                    2878,
                    3404,
                    2381,
                    3405,
                    2386,
                    3410,
                    1876,
                    2388,
                    2389,
                    2391,
                    3412,
                    3416,
                    2400,
                    2401,
                    1890,
                    2402,
                    1896,
                    1897,
                    1898,
                    1904,
                    1905,
                    1906,
                    2419,
                    1908,
                    1910,
                    2424,
                    1914,
                    2427,
                    1920,
                    898,
                    3458,
                    1924,
                    901,
                    902,
                    903,
                    1925,
                    905,
                    906,
                    907,
                    1926,
                    909,
                    1931,
                    1932,
                    1933,
                    913,
                    1937,
                    915,
                    916,
                    917,
                    1940,
                    919,
                    920,
                    921,
                    1944,
                    1945,
                    1946,
                    2454,
                    2966,
                    2967,
                    2968,
                    2969,
                    2977,
                    2467,
                    1956,
                    1957,
                    1958,
                    2471,
                    2980,
                    2986,
                    2475,
                    3501,
                    1967,
                    3503,
                    3507,
                    952,
                    2490,
                    961,
                    1996,
                    974,
                    2510,
                    983,
                    2519,
                    2437,
                    2438,
                    2540,
                    3459,
                    1016,
                    1020
                ],
                "token.COMMENT": [
                    898,
                    1602,
                    2025,
                    1205,
                    1434
                ],
                "self.maybe_decrement_after_for_loop_variable": [
                    901
                ],
                "self.maybe_decrement_after_lambda_arguments": [
                    902
                ],
                "CLOSING_BRACKETS": [
                    2144,
                    3416,
                    3459,
                    903,
                    1899,
                    1582,
                    1583,
                    1584,
                    3406,
                    2194,
                    2966,
                    2968,
                    1147,
                    3455
                ],
                "self.depth": [
                    992,
                    962,
                    904,
                    905,
                    907,
                    908,
                    975,
                    917,
                    918,
                    1270,
                    984,
                    953
                ],
                "opening_bracket": [
                    2949,
                    905,
                    906,
                    2186,
                    2190,
                    2195,
                    2963,
                    2964,
                    2965,
                    2970,
                    2980,
                    2215,
                    2216,
                    2222,
                    2223,
                    2884,
                    2885,
                    2886,
                    2257
                ],
                "self.bracket_match.pop": [
                    905
                ],
                "self.bracket_match": [
                    992,
                    905,
                    917,
                    925
                ],
                "leaf.opening_bracket": [
                    2145,
                    3459,
                    2980,
                    906,
                    2195
                ],
                "leaf.bracket_depth": [
                    1130,
                    907,
                    2348,
                    2349,
                    1183
                ],
                "delim": [
                    909,
                    910,
                    911,
                    913,
                    914,
                    915
                ],
                "is_split_before_delimiter": [
                    909
                ],
                "self.previous": [
                    909,
                    910,
                    911,
                    913,
                    919
                ],
                "self.delimiters": [
                    933,
                    940,
                    911,
                    944,
                    915
                ],
                "id": [
                    2977,
                    2982,
                    2892,
                    2319,
                    911,
                    2353,
                    2194,
                    915,
                    2962,
                    2967,
                    2970,
                    2235
                ],
                "is_split_after_delimiter": [
                    913
                ],
                "OPENING_BRACKETS": [
                    3490,
                    1670,
                    2150,
                    3466,
                    1581,
                    3405,
                    1583,
                    1616,
                    3507,
                    916,
                    3413,
                    1782,
                    2973,
                    3455
                ],
                "BRACKET": [
                    1581,
                    1580,
                    917,
                    1582
                ],
                "self.maybe_increment_lambda_arguments": [
                    920
                ],
                "self.maybe_increment_for_loop_variable": [
                    921
                ],
                "max": [
                    933
                ],
                "self.delimiters.items": [
                    933
                ],
                "priority": [
                    944,
                    943
                ],
                "self.max_delimiter_priority": [
                    943
                ],
                "sum": [
                    944
                ],
                "self.delimiters.values": [
                    944
                ],
                "token.NAME": [
                    1664,
                    961,
                    1920,
                    1796,
                    2404,
                    1094,
                    1097,
                    1961,
                    1804,
                    974,
                    1071,
                    2767,
                    1492,
                    2996,
                    3412,
                    952,
                    3001,
                    1949
                ],
                "leaf.value": [
                    1924,
                    2437,
                    2438,
                    1931,
                    2443,
                    2958,
                    1937,
                    1940,
                    2454,
                    1944,
                    2969,
                    2467,
                    1956,
                    3364,
                    3365,
                    2471,
                    2475,
                    1967,
                    2808,
                    952,
                    2490,
                    2876,
                    1598,
                    2878,
                    961,
                    974,
                    2510,
                    2519,
                    2402,
                    2540,
                    1016
                ],
                "self._for_loop_variable": [
                    961,
                    954,
                    963
                ],
                "self._lambda_arguments": [
                    976,
                    985,
                    983
                ],
                "token.COLON": [
                    1606,
                    1648,
                    1619,
                    1620,
                    983,
                    1787,
                    1020
                ],
                "self.bracket_match.get": [
                    992
                ],
                "token.RSQB": [
                    992,
                    1155,
                    1580,
                    3485
                ],
                "leaves": [
                    2210,
                    2211,
                    3396,
                    3397,
                    1000,
                    3400,
                    3403,
                    3404,
                    2157,
                    2158,
                    1271,
                    1272,
                    1274
                ],
                "List": [
                    2137,
                    2081,
                    2106,
                    2138,
                    2182,
                    2183,
                    1000,
                    1001,
                    2184,
                    2993,
                    1298,
                    2136,
                    2009,
                    2010
                ],
                "comments": [
                    1001
                ],
                "bracket_tracker": [
                    1002
                ],
                "BracketTracker": [
                    1002,
                    2855
                ],
                "inside_brackets": [
                    2418,
                    1003
                ],
                "should_explode": [
                    2216,
                    1004
                ],
                "has_value": [
                    1016,
                    1017
                ],
                "BRACKETS": [
                    1016,
                    1861,
                    1583
                ],
                "leaf.value.strip": [
                    1016
                ],
                "self.is_class_paren_empty": [
                    1020
                ],
                "self.leaves": [
                    1282,
                    1156,
                    1032,
                    1044,
                    1172,
                    1179,
                    1054,
                    1059,
                    1064,
                    1071,
                    1072,
                    1078,
                    1208,
                    1086,
                    1091,
                    1227,
                    1109,
                    1111,
                    1112,
                    1113,
                    1114,
                    1240,
                    1245,
                    1122,
                    1123,
                    1128,
                    1136,
                    1271,
                    1145,
                    1146,
                    1021,
                    1022
                ],
                "preformatted": [
                    1049,
                    1028,
                    1022
                ],
                "leaf.prefix": [
                    1025,
                    2424,
                    3364,
                    1996,
                    2638,
                    2958,
                    2419,
                    1848,
                    2427
                ],
                "whitespace": [
                    1025
                ],
                "self.is_complex_subscript": [
                    1026
                ],
                "self.inside_brackets": [
                    1028
                ],
                "self.bracket_tracker.mark": [
                    1029
                ],
                "self.bracket_tracker": [
                    1040,
                    1249,
                    1029,
                    1200
                ],
                "self.maybe_remove_trailing_comma": [
                    1030
                ],
                "self.append_comment": [
                    1031
                ],
                "self.leaves.append": [
                    1032
                ],
                "self.bracket_tracker.depth": [
                    1040
                ],
                "self.is_comment": [
                    1041
                ],
                "self.append": [
                    1049
                ],
                "type": [
                    2816,
                    2817,
                    2818,
                    2973,
                    1054,
                    1059,
                    2734,
                    1071,
                    2735,
                    2362,
                    2363,
                    2753,
                    2758,
                    3400,
                    3017,
                    2002,
                    1111,
                    1113,
                    1122,
                    2921,
                    1146
                ],
                "property": [
                    1056,
                    1061,
                    3141,
                    1066,
                    1101,
                    1075,
                    1082,
                    1051,
                    1117
                ],
                "is_import": [
                    1064
                ],
                "self.is_class": [
                    1110,
                    1078
                ],
                "token.DOT": [
                    1800,
                    1769,
                    1801,
                    1896,
                    3400,
                    1808,
                    1713,
                    1746,
                    3410,
                    2837,
                    3413,
                    1079
                ],
                "first_leaf": [
                    1318,
                    1094,
                    1319,
                    1095,
                    1321,
                    1086
                ],
                "second_leaf": [
                    1091,
                    1093,
                    1096,
                    1097,
                    1098
                ],
                "first_leaf.type": [
                    1094,
                    1095
                ],
                "first_leaf.value": [
                    1094
                ],
                "token.ASYNC": [
                    1528,
                    1095
                ],
                "second_leaf.type": [
                    1097
                ],
                "second_leaf.value": [
                    1098
                ],
                "token.LPAR": [
                    2875,
                    1731,
                    2852,
                    2597,
                    1580,
                    1709,
                    2222,
                    2604,
                    2734,
                    2610,
                    2777,
                    1750,
                    1111,
                    2616,
                    1753,
                    2747,
                    2718,
                    2591
                ],
                "token.RPAR": [
                    2592,
                    2852,
                    2598,
                    2877,
                    1580,
                    1709,
                    2617,
                    2735,
                    2225,
                    2611,
                    2777,
                    3480,
                    1113,
                    2749,
                    2718
                ],
                "token.STRING": [
                    1122,
                    1796,
                    1447,
                    3016,
                    3400,
                    1914,
                    1916,
                    2909
                ],
                "value.startswith": [
                    1123
                ],
                "sys.maxsize": [
                    2328,
                    1126
                ],
                "depth_limit": [
                    1130
                ],
                "is_multiline_string": [
                    1137,
                    3494,
                    2614
                ],
                "token.COMMA": [
                    1184,
                    1697,
                    2753,
                    2758,
                    1704,
                    2921,
                    1675,
                    2362,
                    2892,
                    1584,
                    1680,
                    1876,
                    1623,
                    1721,
                    1146,
                    2365
                ],
                "closing.type": [
                    1147,
                    1155,
                    1151
                ],
                "closing": [
                    1155,
                    1169,
                    1171,
                    1147,
                    1180,
                    1151
                ],
                "token.RBRACE": [
                    3481,
                    1580,
                    1151
                ],
                "self.remove_trailing_comma": [
                    1152,
                    1164,
                    1158,
                    1191
                ],
                "comma": [
                    1156,
                    1157
                ],
                "comma.parent": [
                    1157
                ],
                "comma.parent.type": [
                    1157
                ],
                "self.is_import": [
                    1163
                ],
                "closing.bracket_depth": [
                    1169
                ],
                "commas": [
                    1185,
                    1170,
                    1187,
                    1190
                ],
                "opening": [
                    1171,
                    1173
                ],
                "closing.opening_bracket": [
                    1171
                ],
                "_opening_index": [
                    1179,
                    1172
                ],
                "enumerate": [
                    2016,
                    3361,
                    2342,
                    1227,
                    1172,
                    2388,
                    2587
                ],
                "bracket_depth": [
                    1184,
                    1183
                ],
                "leaf.parent": [
                    1925,
                    1926,
                    1932,
                    1933,
                    1937,
                    1945,
                    1946,
                    1186,
                    1957,
                    1958,
                    1967,
                    1597,
                    2400,
                    2791,
                    1897,
                    1898,
                    2794,
                    1905,
                    1906
                ],
                "leaf.parent.type": [
                    1186,
                    1926,
                    1958,
                    1898,
                    1933,
                    1937,
                    1906,
                    1946
                ],
                "comment.type": [
                    1434,
                    1199,
                    2643,
                    1205,
                    1210
                ],
                "comment": [
                    2692,
                    2693,
                    1430,
                    1433,
                    1434,
                    1436,
                    1443,
                    3368,
                    3369,
                    3370,
                    1199,
                    1202,
                    1205,
                    1210,
                    1211,
                    1215,
                    2638,
                    2639,
                    2643,
                    1242,
                    1244,
                    2655,
                    2657,
                    2028,
                    2031,
                    2675,
                    2680,
                    1276,
                    1277
                ],
                "self.bracket_tracker.any_open_brackets": [
                    1200
                ],
                "comment.prefix": [
                    1202,
                    1211
                ],
                "self.comments.append": [
                    1215
                ],
                "self.comments": [
                    1282,
                    1223,
                    1234,
                    1276,
                    1241,
                    1242,
                    1244,
                    1215
                ],
                "_index": [
                    3458,
                    1226,
                    1227,
                    3501,
                    3472,
                    1235
                ],
                "_leaf": [
                    1227,
                    1228
                ],
                "index": [
                    2953,
                    3346,
                    3348,
                    3349,
                    2587,
                    2973,
                    2593,
                    2594,
                    3363,
                    2342,
                    2600,
                    2345,
                    3369,
                    3372,
                    2610,
                    2618,
                    2619,
                    1234,
                    1235,
                    2388,
                    2391,
                    2016,
                    2024,
                    2665,
                    2667
                ],
                "comment_after": [
                    2213,
                    2214,
                    2345,
                    2346,
                    2160,
                    2161,
                    1234,
                    1236,
                    2391,
                    2392
                ],
                "comma_index": [
                    1240,
                    1243,
                    1244
                ],
                "i": [
                    1241,
                    1242,
                    1244
                ],
                "comment_index": [
                    1242,
                    1243
                ],
                "self.leaves.pop": [
                    1245
                ],
                "open_lsqb": [
                    1249,
                    1250,
                    1253
                ],
                "self.bracket_tracker.get_open_lsqb": [
                    1249
                ],
                "subscript_start": [
                    1253,
                    1255,
                    1256,
                    1259,
                    1260,
                    1261,
                    1262
                ],
                "open_lsqb.next_sibling": [
                    1253
                ],
                "subscript_start.type": [
                    1256,
                    1259
                ],
                "syms.subscriptlist": [
                    1608,
                    1760,
                    1259
                ],
                "child_towards": [
                    1260
                ],
                "any": [
                    1261
                ],
                "n.type": [
                    2914,
                    2909,
                    1262,
                    2919
                ],
                "n": [
                    2657,
                    2914,
                    2915,
                    2919,
                    2920,
                    2921,
                    2923,
                    1262,
                    2908,
                    2909,
                    2910
                ],
                "subscript_start.pre_order": [
                    1262
                ],
                "iter": [
                    1524,
                    1271
                ],
                "first": [
                    2720,
                    2716,
                    2850,
                    3459,
                    2852,
                    3448,
                    3494,
                    3455,
                    2718,
                    1272,
                    1273,
                    2652,
                    2653,
                    2654,
                    2655
                ],
                "next": [
                    3403,
                    3406,
                    3413,
                    1272,
                    1531
                ],
                "res": [
                    1826,
                    1821,
                    1822,
                    1273,
                    1275,
                    1820,
                    1277,
                    1278,
                    1823
                ],
                "first.prefix": [
                    1273,
                    2654,
                    2655
                ],
                "first.value": [
                    2720,
                    1273
                ],
                "previous_line": [
                    1296
                ],
                "previous_after": [
                    1297
                ],
                "previous_defs": [
                    1298
                ],
                "self._maybe_empty_lines": [
                    1306
                ],
                "self.previous_after": [
                    1307,
                    1308
                ],
                "self.previous_line": [
                    1344,
                    1376,
                    1378,
                    1379,
                    1384,
                    1356,
                    1370,
                    1360,
                    1363,
                    1364,
                    1335,
                    1336,
                    1369,
                    1338,
                    1309,
                    1343
                ],
                "max_allowed": [
                    1320,
                    1313,
                    1315
                ],
                "current_line.depth": [
                    1376,
                    1314,
                    1355,
                    1324,
                    1391,
                    1363,
                    1370
                ],
                "self.is_pyi": [
                    1315,
                    1508,
                    1516,
                    1327,
                    1499,
                    1375
                ],
                "current_line.leaves": [
                    2362,
                    2363,
                    1316,
                    1318
                ],
                "first_leaf.prefix.count": [
                    1319
                ],
                "first_leaf.prefix": [
                    1321,
                    1319
                ],
                "min": [
                    1320,
                    3088,
                    2348
                ],
                "self.previous_defs": [
                    1355,
                    1325,
                    1326
                ],
                "self.previous_defs.pop": [
                    1326
                ],
                "current_line.is_decorator": [
                    1354,
                    1331
                ],
                "current_line.is_def": [
                    1384,
                    1331
                ],
                "current_line.is_class": [
                    1378,
                    1331
                ],
                "self._maybe_empty_lines_for_class_or_def": [
                    1332
                ],
                "self.previous_line.is_import": [
                    1336
                ],
                "current_line.is_import": [
                    1337
                ],
                "self.previous_line.depth": [
                    1376,
                    1338,
                    1363,
                    1370
                ],
                "self.previous_line.is_class": [
                    1344,
                    1378,
                    1364
                ],
                "current_line.is_triple_quoted_string": [
                    1345
                ],
                "self.previous_defs.append": [
                    1355
                ],
                "self.previous_line.is_decorator": [
                    1360
                ],
                "self.previous_line.is_def": [
                    1384,
                    1364
                ],
                "self.previous_line.is_comment": [
                    1369
                ],
                "newlines": [
                    1377,
                    1381,
                    1383,
                    1386,
                    1388,
                    1390,
                    1391,
                    1392,
                    1393,
                    2004
                ],
                "current_line.is_stub_class": [
                    1379
                ],
                "self.previous_line.is_stub_class": [
                    1379
                ],
                "remove_u_prefix": [
                    2441,
                    1407
                ],
                "allow_underscores": [
                    1408,
                    2531,
                    2532,
                    2537,
                    2539,
                    2546,
                    2549,
                    2550,
                    2559
                ],
                "self.current_line": [
                    1443,
                    1418,
                    1419,
                    1453,
                    1422,
                    1423,
                    1551,
                    1429,
                    1433,
                    1436
                ],
                "self.current_line.depth": [
                    1419
                ],
                "complete_line": [
                    1424,
                    1422,
                    1423
                ],
                "complete_line.depth": [
                    1423
                ],
                "any_open_brackets": [
                    1429,
                    1446,
                    1431
                ],
                "self.current_line.bracket_tracker.any_open_brackets": [
                    1429,
                    1551
                ],
                "self.current_line.bracket_tracker": [
                    1429,
                    1551
                ],
                "generate_comments": [
                    1430
                ],
                "self.current_line.append": [
                    1433,
                    1443,
                    1436,
                    1453
                ],
                "self.line": [
                    1441,
                    1474,
                    1538,
                    1444,
                    1511,
                    1543,
                    1513,
                    1548,
                    1517,
                    1552,
                    1522,
                    1459,
                    1493,
                    1467,
                    1437
                ],
                "normalize_prefix": [
                    2155,
                    2203,
                    1446,
                    2299
                ],
                "self.normalize_strings": [
                    1447
                ],
                "normalize_string_prefix": [
                    1448
                ],
                "self.remove_u_prefix": [
                    1448
                ],
                "normalize_string_quotes": [
                    1449
                ],
                "token.NUMBER": [
                    1450,
                    1715,
                    1796,
                    2914
                ],
                "normalize_numeric_literal": [
                    1451
                ],
                "self.allow_underscores": [
                    1451
                ],
                "visit_default": [
                    1454
                ],
                "super": [
                    1454
                ],
                "normalize_invisible_parens": [
                    1490
                ],
                "parens": [
                    1490
                ],
                "child.type": [
                    3009,
                    2604,
                    2608,
                    2835,
                    1492,
                    2996,
                    2998,
                    1528,
                    3003,
                    2589
                ],
                "child.value": [
                    1492,
                    2621,
                    2606,
                    2997
                ],
                "keywords": [
                    1492
                ],
                "is_stub_suite": [
                    1499,
                    1516
                ],
                "is_suite_like": [
                    1506,
                    1507
                ],
                "node.parent": [
                    1506,
                    1831,
                    1516,
                    1838,
                    1839
                ],
                "node.parent.type": [
                    1506
                ],
                "is_stub_body": [
                    1508,
                    2822
                ],
                "children": [
                    2994,
                    1531,
                    1524,
                    1525
                ],
                "internal_stmt": [
                    1531,
                    1532
                ],
                "internal_stmt.children": [
                    1532
                ],
                "self.visit_stmt": [
                    1557
                ],
                "\u00d8": [
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1574,
                    1558,
                    1566
                ],
                "self.visit_assert_stmt": [
                    1559
                ],
                "self.visit_if_stmt": [
                    1560
                ],
                "self.visit_while_stmt": [
                    1563
                ],
                "self.visit_for_stmt": [
                    1564
                ],
                "self.visit_try_stmt": [
                    1565
                ],
                "self.visit_except_clause": [
                    1568
                ],
                "self.visit_with_stmt": [
                    1569
                ],
                "self.visit_funcdef": [
                    1570
                ],
                "self.visit_classdef": [
                    1571
                ],
                "self.visit_expr_stmt": [
                    1572
                ],
                "self.visit_return_stmt": [
                    1573
                ],
                "self.visit_import_from": [
                    1574
                ],
                "self.visit_async_funcdef": [
                    1575
                ],
                "self.visit_async_stmt": [
                    1575
                ],
                "self.visit_decorated": [
                    1576
                ],
                "self.visit_decorators": [
                    1576
                ],
                "IMPLICIT_TUPLE": [
                    1579,
                    2756
                ],
                "syms.testlist": [
                    1579
                ],
                "syms.exprlist": [
                    1579
                ],
                "token.LSQB": [
                    1580,
                    1718
                ],
                "token.LBRACE": [
                    1580
                ],
                "BRACKET.keys": [
                    1581
                ],
                "BRACKET.values": [
                    1582
                ],
                "ALWAYS_NO_SPACE": [
                    1584,
                    1599
                ],
                "SPACE": [
                    1761,
                    1806,
                    1650,
                    1626,
                    1814,
                    1594
                ],
                "DOUBLESPACE": [
                    1603,
                    1595
                ],
                "t": [
                    2401,
                    1602,
                    1796,
                    2404,
                    1606,
                    1800,
                    1769,
                    1804,
                    1709,
                    1713,
                    1619,
                    1718,
                    1750,
                    1688,
                    1596,
                    1726,
                    1599
                ],
                "p.type": [
                    1799,
                    1673,
                    1678,
                    1683,
                    1811,
                    1700,
                    1707,
                    1724,
                    1606,
                    1737,
                    1741,
                    1749,
                    1756,
                    2406,
                    2407,
                    1768,
                    2795,
                    1773,
                    1778,
                    2803
                ],
                "syms.subscript": [
                    1649,
                    1756,
                    1788,
                    1607
                ],
                "syms.sliceop": [
                    1609,
                    1649,
                    1811,
                    1756,
                    1789
                ],
                "prev": [
                    1670,
                    1801,
                    1675,
                    1680,
                    1808,
                    1685,
                    1689,
                    1692,
                    1695,
                    1697,
                    1702,
                    1712,
                    1721,
                    1729,
                    1734,
                    1613,
                    1614,
                    1742,
                    2644,
                    2645,
                    1753,
                    1758,
                    1769,
                    1775,
                    1780
                ],
                "leaf.prev_sibling": [
                    1613
                ],
                "prevp": [
                    1664,
                    1665,
                    1793,
                    1785,
                    1703,
                    1704,
                    1714,
                    1715,
                    1730,
                    1731,
                    1615,
                    1616,
                    1745,
                    1746,
                    1620,
                    1623,
                    1628,
                    1629,
                    1630,
                    1638,
                    1642,
                    1644,
                    1645,
                    1648,
                    1649,
                    1653,
                    1654,
                    1655,
                    1781,
                    1782,
                    1787,
                    1660,
                    1661,
                    1662,
                    1663
                ],
                "preceding_leaf": [
                    1730,
                    1703,
                    1615,
                    1745,
                    1714,
                    2644,
                    1781
                ],
                "prevp.type": [
                    1660,
                    1793,
                    1731,
                    1655,
                    1704,
                    1644,
                    1616,
                    1648,
                    1746,
                    1715,
                    1620,
                    1782,
                    1623,
                    1787,
                    1628
                ],
                "complex_subscript": [
                    1650,
                    1765,
                    1623
                ],
                "token.EQUAL": [
                    1793,
                    1734,
                    1688,
                    1692,
                    1726,
                    1628
                ],
                "prevp.parent": [
                    1661,
                    1638,
                    1662,
                    1649,
                    1653,
                    1654,
                    1785,
                    1629,
                    1630
                ],
                "prevp.parent.type": [
                    1638,
                    1630,
                    1649,
                    1654,
                    1662
                ],
                "syms.parameters": [
                    1633,
                    1673
                ],
                "prevp.prefix": [
                    1642
                ],
                "is_vararg": [
                    1890,
                    2349,
                    1645
                ],
                "syms.factor": [
                    1906,
                    1778,
                    1654
                ],
                "prevp.prev_sibling": [
                    1664,
                    1665,
                    1663
                ],
                "prevp.prev_sibling.type": [
                    1664
                ],
                "prevp.prev_sibling.value": [
                    1665
                ],
                "prev.type": [
                    1697,
                    1670,
                    1734,
                    1801,
                    1675,
                    1775,
                    1680,
                    1808,
                    1721,
                    1753,
                    2645,
                    1689,
                    1692
                ],
                "syms.tname": [
                    1689,
                    1700
                ],
                "prev.prefix": [
                    1695
                ],
                "syms.decorator": [
                    1737
                ],
                "syms.dotted_name": [
                    1898,
                    1741
                ],
                "p.parent": [
                    1760,
                    2801,
                    2798,
                    1759
                ],
                "p.parent.type": [
                    1760
                ],
                "prevp_parent": [
                    1785,
                    1786,
                    1787,
                    1793
                ],
                "prevp_parent.type": [
                    1793,
                    1787
                ],
                "syms.import_from": [
                    2885,
                    2407,
                    1799,
                    2601,
                    1898,
                    3022
                ],
                "node.prev_sibling": [
                    1820
                ],
                "res.leaves": [
                    1826
                ],
                "descendant": [
                    1837
                ],
                "ancestor": [
                    1838
                ],
                "same_prefix": [
                    1848,
                    1855
                ],
                "container": [
                    2690,
                    2691,
                    2692,
                    1864,
                    1865,
                    2696,
                    2698,
                    1849,
                    1850,
                    1851
                ],
                "parent": [
                    1858,
                    1861,
                    1864,
                    2668,
                    2670,
                    1851,
                    1852,
                    2653,
                    1855
                ],
                "container.parent": [
                    1851
                ],
                "prefix": [
                    2016,
                    2471,
                    2476,
                    2510,
                    2655,
                    2675,
                    2490,
                    2011,
                    2493,
                    2654,
                    1855
                ],
                "parent.children": [
                    1855
                ],
                "parent.type": [
                    1858
                ],
                "parent.prev_sibling": [
                    1861
                ],
                "parent.prev_sibling.type": [
                    1861
                ],
                "previous.type": [
                    1961,
                    1899,
                    1916,
                    1949
                ],
                "syms.comp_for": [
                    1926
                ],
                "syms.old_comp_for": [
                    1926
                ],
                "syms.comp_if": [
                    1933
                ],
                "syms.old_comp_if": [
                    1933
                ],
                "syms.comp_op": [
                    1946,
                    1958
                ],
                "previous.value": [
                    1962,
                    1950
                ],
                "FMT_OFF": [
                    1973,
                    2582,
                    2639
                ],
                "FMT_ON": [
                    2693,
                    1974
                ],
                "pc": [
                    2581,
                    1996,
                    1997,
                    2582
                ],
                "list_comments": [
                    2692,
                    1996,
                    2581,
                    2638
                ],
                "token.ENDMARKER": [
                    2691,
                    1996
                ],
                "pc.type": [
                    1997
                ],
                "pc.value": [
                    1997,
                    2582
                ],
                "pc.newlines": [
                    1997
                ],
                "consumed": [
                    2017,
                    2005,
                    2014,
                    2031
                ],
                "ProtoComment": [
                    2009,
                    2010,
                    2030
                ],
                "nlines": [
                    2034,
                    2031,
                    2020,
                    2015
                ],
                "prefix.split": [
                    2016
                ],
                "line.lstrip": [
                    2018
                ],
                "line.startswith": [
                    2021
                ],
                "is_endmarker": [
                    2024
                ],
                "comment_type": [
                    2025,
                    2027,
                    2031
                ],
                "make_comment": [
                    2028
                ],
                "result.append": [
                    2212,
                    2214,
                    2029,
                    2159,
                    2161
                ],
                "lru_cache": [
                    2008,
                    3075
                ],
                "content": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2046,
                    2047
                ],
                "content.rstrip": [
                    2046
                ],
                "line.is_comment": [
                    2070
                ],
                "line_str": [
                    3380,
                    3381,
                    3383,
                    3384,
                    2074,
                    2076,
                    2109
                ],
                "strip": [
                    2074,
                    3381,
                    2109,
                    2278
                ],
                "line.should_explode": [
                    2075
                ],
                "is_line_short_enough": [
                    2089,
                    2075,
                    2243
                ],
                "split_funcs": [
                    2081,
                    2083,
                    2099,
                    2101,
                    2102
                ],
                "line.is_def": [
                    2082
                ],
                "left_hand_split": [
                    2083
                ],
                "omit": [
                    2945,
                    2946,
                    2982,
                    2087,
                    2088,
                    2983,
                    2985,
                    2194,
                    2235,
                    2237
                ],
                "generate_trailers_to_omit": [
                    2087
                ],
                "right_hand_split": [
                    2088,
                    2096,
                    2237
                ],
                "line.inside_brackets": [
                    2339,
                    2375,
                    2385,
                    2098,
                    2357,
                    2327
                ],
                "delimiter_split": [
                    2099
                ],
                "standalone_comment_split": [
                    2099
                ],
                "rhs": [
                    2099,
                    2101
                ],
                "split_func": [
                    2296,
                    2298,
                    2108,
                    2102
                ],
                "l": [
                    2113,
                    2300,
                    2298,
                    2299,
                    2108,
                    2109
                ],
                "CannotSplit": [
                    2240,
                    2115,
                    2245,
                    2373,
                    2281,
                    2250,
                    2315,
                    2284,
                    2321,
                    2325,
                    2110,
                    2207
                ],
                "result.extend": [
                    2112
                ],
                "head": [
                    2210,
                    2179,
                    2217,
                    2249,
                    2157,
                    2162,
                    2163,
                    2259,
                    2133
                ],
                "line.depth": [
                    3457,
                    2179,
                    2180,
                    2181,
                    2339,
                    2375,
                    2948,
                    3499,
                    2385,
                    2133,
                    2134,
                    2135,
                    2357,
                    2327
                ],
                "body": [
                    2180,
                    2210,
                    2216,
                    2217,
                    2475,
                    2220,
                    2477,
                    2483,
                    2486,
                    2231,
                    2487,
                    2233,
                    2489,
                    2490,
                    2242,
                    2243,
                    2502,
                    2259,
                    2134,
                    2279,
                    2157,
                    2162,
                    2163
                ],
                "tail": [
                    2210,
                    2181,
                    2278,
                    2217,
                    2249,
                    2157,
                    2162,
                    2163,
                    2259,
                    2135
                ],
                "tail_leaves": [
                    2210,
                    2147,
                    2182,
                    2185,
                    2157,
                    2191,
                    2193,
                    2198,
                    2136
                ],
                "body_leaves": [
                    2210,
                    2147,
                    2183,
                    2152,
                    2154,
                    2155,
                    2157,
                    2189,
                    2191,
                    2197,
                    2199,
                    2137,
                    2202,
                    2203,
                    2143
                ],
                "head_leaves": [
                    2210,
                    2147,
                    2149,
                    2184,
                    2157,
                    2191,
                    2200,
                    2138,
                    2139,
                    2204
                ],
                "current_leaves": [
                    2147,
                    2148,
                    2149,
                    2152,
                    2185,
                    2189,
                    2191,
                    2192,
                    2193,
                    2197,
                    2139,
                    2143
                ],
                "matching_bracket": [
                    2145,
                    2140,
                    2151
                ],
                "line.leaves": [
                    3363,
                    3396,
                    2342,
                    2313,
                    2891,
                    2188,
                    2973,
                    3472,
                    2388,
                    3446,
                    3448,
                    3449,
                    3450,
                    3451,
                    2141
                ],
                "current_leaves.append": [
                    2192,
                    2148
                ],
                "line.comments_after": [
                    2213,
                    2345,
                    3369,
                    2160,
                    2391
                ],
                "bracket_split_succeeded_or_raise": [
                    2217,
                    2162
                ],
                "Collection": [
                    2169
                ],
                "closing_bracket": [
                    2981,
                    2950,
                    2215,
                    2982,
                    2986,
                    2187,
                    2225,
                    2226,
                    2258,
                    2196,
                    2235
                ],
                "reversed": [
                    3361,
                    3347,
                    2188
                ],
                "tail_leaves.reverse": [
                    2198
                ],
                "body_leaves.reverse": [
                    2199
                ],
                "head_leaves.reverse": [
                    2200
                ],
                "body.should_explode": [
                    2216,
                    2220
                ],
                "opening_bracket.type": [
                    2222
                ],
                "opening_bracket.value": [
                    2886,
                    2223
                ],
                "closing_bracket.type": [
                    2225
                ],
                "closing_bracket.value": [
                    2226
                ],
                "line.is_import": [
                    2229
                ],
                "body.contains_standalone_comments": [
                    2231
                ],
                "can_omit_invisible_parens": [
                    2233
                ],
                "can_be_split": [
                    2242
                ],
                "head.contains_multiline_strings": [
                    2249
                ],
                "tail.contains_multiline_strings": [
                    2249
                ],
                "ensure_visible": [
                    2257,
                    2258
                ],
                "tail_len": [
                    2280,
                    2286,
                    2283,
                    2278
                ],
                "l.leaves": [
                    2299
                ],
                "wraps": [
                    2296
                ],
                "split_wrapper": [
                    2302
                ],
                "last_leaf": [
                    2313,
                    2891,
                    2892,
                    2319
                ],
                "bt": [
                    2855,
                    3432,
                    3433,
                    2858,
                    2317,
                    2861,
                    2319,
                    2863,
                    2353,
                    3437,
                    3438,
                    2324
                ],
                "line.bracket_tracker": [
                    3432,
                    2893,
                    2317
                ],
                "delimiter_priority": [
                    2319,
                    2354,
                    2323,
                    2324,
                    2361
                ],
                "bt.max_delimiter_priority": [
                    3437,
                    2863,
                    2319
                ],
                "bt.delimiter_count_with_priority": [
                    2324,
                    3438
                ],
                "lowest_depth": [
                    2328,
                    2348,
                    2349
                ],
                "trailing_comma_safe": [
                    2352,
                    2329,
                    2360
                ],
                "current_line.append_safe": [
                    2381,
                    2335
                ],
                "current_line.append": [
                    2386,
                    2340,
                    2365
                ],
                "append_to_line": [
                    2392,
                    2346,
                    2389,
                    2343
                ],
                "leaf_priority": [
                    2353,
                    2354
                ],
                "bt.delimiters.get": [
                    2353
                ],
                "bt.delimiters": [
                    2353,
                    3433
                ],
                "dont_increase_indentation": [
                    2369,
                    2305
                ],
                "line.contains_standalone_comments": [
                    3385,
                    2372
                ],
                "syms.import_name": [
                    2406
                ],
                "spl": [
                    2419,
                    2420,
                    2421,
                    2422
                ],
                "leaf.prefix.split": [
                    2419
                ],
                "nl_count": [
                    2424,
                    2421,
                    2423
                ],
                "count": [
                    2421
                ],
                "match": [
                    2443,
                    2437,
                    2438,
                    2439
                ],
                "re.match": [
                    2437
                ],
                "re.DOTALL": [
                    2437
                ],
                "orig_prefix": [
                    2440,
                    2439
                ],
                "match.group": [
                    2443,
                    2439
                ],
                "new_prefix": [
                    2440,
                    2442,
                    2443
                ],
                "orig_prefix.lower": [
                    2440
                ],
                "new_prefix.replace": [
                    2442
                ],
                "leaf.value.lstrip": [
                    2808,
                    2454
                ],
                "orig_quote": [
                    2465,
                    2467,
                    2474,
                    2475,
                    2507,
                    2491,
                    2490,
                    2459,
                    2462
                ],
                "new_quote": [
                    2466,
                    2499,
                    2472,
                    2473,
                    2510,
                    2486,
                    2492,
                    2460,
                    2463
                ],
                "first_quote_pos": [
                    2467,
                    2468,
                    2475,
                    2471
                ],
                "leaf.value.find": [
                    2467
                ],
                "unescaped_new_quote": [
                    2472,
                    2492,
                    2477
                ],
                "re.compile": [
                    2472,
                    2473,
                    2474,
                    3341
                ],
                "escaped_new_quote": [
                    2473,
                    2486
                ],
                "escaped_orig_quote": [
                    2474,
                    2491
                ],
                "prefix.casefold": [
                    2476,
                    2493
                ],
                "unescaped_new_quote.search": [
                    2477
                ],
                "new_body": [
                    2499,
                    2501,
                    2503,
                    2510,
                    2483,
                    2486,
                    2487,
                    2489,
                    2491,
                    2492,
                    2494
                ],
                "sub_twice": [
                    2491,
                    2492,
                    2486
                ],
                "matches": [
                    2494,
                    2495
                ],
                "re.findall": [
                    2494
                ],
                "m": [
                    2496,
                    2495
                ],
                "orig_escape_count": [
                    2504,
                    2507,
                    2502
                ],
                "body.count": [
                    2502
                ],
                "new_escape_count": [
                    2504,
                    2507,
                    2503
                ],
                "new_body.count": [
                    2503
                ],
                "text": [
                    2560,
                    2562,
                    2563,
                    2565,
                    2569,
                    2519,
                    2520,
                    2523,
                    2524,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2539,
                    2540,
                    2545,
                    2546,
                    2548
                ],
                "leaf.value.lower": [
                    2519
                ],
                "text.startswith": [
                    2520
                ],
                "text.split": [
                    2524,
                    2548
                ],
                "sign": [
                    2528,
                    2533,
                    2525
                ],
                "after.startswith": [
                    2529,
                    2526
                ],
                "format_float_or_int_string": [
                    2537,
                    2531,
                    2539
                ],
                "format_int_string": [
                    2546,
                    2532,
                    2549,
                    2550
                ],
                "text.endswith": [
                    2534
                ],
                "number": [
                    2537,
                    2535
                ],
                "suffix": [
                    2536,
                    2537
                ],
                "text.replace": [
                    2562
                ],
                "lstrip": [
                    2569
                ],
                "format": [
                    2569
                ],
                "check_lpar": [
                    2586,
                    2588,
                    2621
                ],
                "maybe_make_parens_invisible_in_atom": [
                    2723,
                    2590
                ],
                "lpar": [
                    2594,
                    2597,
                    2600,
                    2776,
                    2777,
                    2616,
                    2745,
                    2619,
                    2747,
                    2591
                ],
                "rpar": [
                    2592,
                    2594,
                    2598,
                    2600,
                    2745,
                    2777,
                    2776,
                    2617,
                    2619,
                    2749
                ],
                "child.remove": [
                    2593,
                    2618,
                    2599
                ],
                "node.insert_child": [
                    2600,
                    2594,
                    2619,
                    2610
                ],
                "is_one_tuple": [
                    2595,
                    2710
                ],
                "node.append_child": [
                    2611
                ],
                "parens_after": [
                    2621
                ],
                "try_again": [
                    2626,
                    2627,
                    2628
                ],
                "convert_one_fmt_off_pair": [
                    2628
                ],
                "node.leaves": [
                    2636
                ],
                "previous_consumed": [
                    2680,
                    2675,
                    2637
                ],
                "comment.value": [
                    2657,
                    3370,
                    2693,
                    2639
                ],
                "ignored_nodes": [
                    2657,
                    2664,
                    2648,
                    2649,
                    2652
                ],
                "generate_ignored_nodes": [
                    2648
                ],
                "first.parent": [
                    2653
                ],
                "comment.consumed": [
                    2680,
                    2655
                ],
                "hidden_value": [
                    2656,
                    2674,
                    2659,
                    2662
                ],
                "join": [
                    2657,
                    3234,
                    3241,
                    3242,
                    3187,
                    3291
                ],
                "hidden_value.endswith": [
                    2659
                ],
                "first_idx": [
                    2663,
                    2666,
                    2667,
                    2669,
                    2671
                ],
                "ignored": [
                    2664,
                    2665
                ],
                "ignored.remove": [
                    2665
                ],
                "parent.insert_child": [
                    2670
                ],
                "comment.newlines": [
                    2675
                ],
                "container_of": [
                    2690
                ],
                "container.type": [
                    2691
                ],
                "container.prefix": [
                    2692
                ],
                "container.next_sibling": [
                    2698
                ],
                "is_empty_tuple": [
                    2709
                ],
                "is_yield": [
                    2778,
                    2711
                ],
                "max_delimiter_priority_in_atom": [
                    2712
                ],
                "last": [
                    2721,
                    2851,
                    2852,
                    3486,
                    3503,
                    3480,
                    3481,
                    3485,
                    3451,
                    2717,
                    2718,
                    3487
                ],
                "first.type": [
                    2852,
                    2718,
                    3455
                ],
                "last.type": [
                    2852,
                    3480,
                    3481,
                    3485,
                    2718
                ],
                "last.value": [
                    2721
                ],
                "gexp": [
                    2745,
                    2748,
                    2753
                ],
                "lpar.type": [
                    2777,
                    2747
                ],
                "gexp.type": [
                    2748
                ],
                "rpar.type": [
                    2777,
                    2749
                ],
                "gexp.children": [
                    2753
                ],
                "syms.yield_expr": [
                    2764
                ],
                "expr": [
                    2776,
                    2778
                ],
                "within": [
                    2803
                ],
                "syms.simple_stmt": [
                    3009,
                    2827
                ],
                "child.children": [
                    3011,
                    3015,
                    3017,
                    2836,
                    2837,
                    2999,
                    3004
                ],
                "all": [
                    2837
                ],
                "c": [
                    2856,
                    2857,
                    2858,
                    2860
                ],
                "bt.mark": [
                    2858,
                    2861
                ],
                "c.leaves": [
                    2860
                ],
                "opening_bracket.parent": [
                    2884,
                    2885
                ],
                "opening_bracket.parent.type": [
                    2885
                ],
                "last_leaf.type": [
                    2892
                ],
                "max_priority": [
                    3437,
                    2893,
                    3438,
                    2897,
                    3442
                ],
                "line.bracket_tracker.max_delimiter_priority": [
                    2893
                ],
                "node.pre_order": [
                    2908
                ],
                "value_head": [
                    2910,
                    2911
                ],
                "n.value": [
                    2915,
                    2910
                ],
                "n.children": [
                    2920,
                    2921,
                    2923
                ],
                "ch": [
                    2928,
                    2923,
                    2924,
                    2927
                ],
                "ch.type": [
                    2924,
                    2927
                ],
                "argch": [
                    2928,
                    2929
                ],
                "ch.children": [
                    2928
                ],
                "argch.type": [
                    2929
                ],
                "length": [
                    3457,
                    2948,
                    3364,
                    3462,
                    3463,
                    3370,
                    2954,
                    2955,
                    3372,
                    3499,
                    3502,
                    3504
                ],
                "optional_brackets": [
                    2962,
                    2970,
                    2951
                ],
                "inner_brackets": [
                    2977,
                    2983,
                    2952,
                    2984,
                    2967
                ],
                "leaf_length": [
                    3458,
                    3462,
                    2953,
                    2954,
                    3501,
                    2958,
                    3502
                ],
                "enumerate_with_length": [
                    2953,
                    3458,
                    3501
                ],
                "has_inline_comment": [
                    2958,
                    2959
                ],
                "optional_brackets.discard": [
                    2962
                ],
                "inner_brackets.add": [
                    2977,
                    2967
                ],
                "optional_brackets.add": [
                    2970
                ],
                "omit.add": [
                    2982
                ],
                "omit.update": [
                    2983
                ],
                "inner_brackets.clear": [
                    2984
                ],
                "imports": [
                    3026,
                    3029,
                    2991
                ],
                "syms.import_as_name": [
                    2998
                ],
                "orig_name": [
                    3000,
                    3001,
                    3002,
                    2999
                ],
                "orig_name.type": [
                    3001
                ],
                "orig_name.value": [
                    3002
                ],
                "syms.import_as_names": [
                    3003
                ],
                "get_imports_from_children": [
                    3026,
                    3004
                ],
                "Generator": [
                    2993
                ],
                "first_child": [
                    3011,
                    3012,
                    3016,
                    3022,
                    3023,
                    3026
                ],
                "first_child.type": [
                    3016,
                    3022
                ],
                "module_name": [
                    3024,
                    3023
                ],
                "first_child.children": [
                    3026,
                    3023
                ],
                "module_name.value": [
                    3024
                ],
                "Pattern": [
                    3035,
                    3036,
                    3325,
                    3334
                ],
                "root.is_absolute": [
                    3046
                ],
                "path.iterdir": [
                    3047
                ],
                "normalized_path": [
                    3049,
                    3060,
                    3061,
                    3070
                ],
                "as_posix": [
                    3049
                ],
                "relative_to": [
                    3049
                ],
                "child.resolve": [
                    3049
                ],
                "child.is_symlink": [
                    3051
                ],
                "report.path_ignored": [
                    3052,
                    3063
                ],
                "child.is_dir": [
                    3066,
                    3059
                ],
                "exclude_match": [
                    3061,
                    3062
                ],
                "exclude.search": [
                    3061
                ],
                "exclude_match.group": [
                    3062
                ],
                "child.is_file": [
                    3069
                ],
                "include_match": [
                    3070,
                    3071
                ],
                "include.search": [
                    3070
                ],
                "srcs": [
                    3088,
                    3085
                ],
                "resolve": [
                    3088,
                    3086
                ],
                "common_base": [
                    3088,
                    3089,
                    3091,
                    3092
                ],
                "common_base.is_dir": [
                    3089
                ],
                "directory": [
                    3092,
                    3093,
                    3094,
                    3096,
                    3097,
                    3099,
                    3100,
                    3102
                ],
                "common_base.parents": [
                    3092
                ],
                "is_dir": [
                    3096,
                    3093
                ],
                "is_file": [
                    3099
                ],
                "change_count": [
                    3112
                ],
                "same_count": [
                    3113
                ],
                "failure_count": [
                    3114
                ],
                "reformatted": [
                    3170,
                    3177,
                    3119,
                    3121,
                    3166
                ],
                "self.check": [
                    3155,
                    3165,
                    3119
                ],
                "self.verbose": [
                    3120,
                    3138,
                    3124
                ],
                "self.quiet": [
                    3120
                ],
                "self.change_count": [
                    3174,
                    3175,
                    3177,
                    3122,
                    3155
                ],
                "msg": [
                    3128,
                    3129,
                    3126
                ],
                "self.same_count": [
                    3130,
                    3179,
                    3180,
                    3181
                ],
                "message": [
                    3139,
                    3134
                ],
                "self.failure_count": [
                    3182,
                    3183,
                    3152,
                    3185,
                    3135
                ],
                "unchanged": [
                    3171,
                    3181,
                    3167
                ],
                "failed": [
                    3168,
                    3185,
                    3172
                ],
                "report.append": [
                    3176,
                    3184,
                    3181
                ],
                "click.style": [
                    3177,
                    3185
                ],
                "ast.AST": [
                    3210,
                    3196,
                    3213
                ],
                "ast": [
                    3232,
                    3210,
                    3213,
                    3222,
                    3196
                ],
                "node.__class__.__name__": [
                    3219,
                    3198
                ],
                "node.__class__": [
                    3219,
                    3198
                ],
                "field": [
                    3200,
                    3202,
                    3206
                ],
                "node._fields": [
                    3200
                ],
                "AttributeError": [
                    3203
                ],
                "item": [
                    3209,
                    3210,
                    3211
                ],
                "_v": [
                    3241,
                    3242,
                    3211,
                    3214
                ],
                "value.__class__.__name__": [
                    3217
                ],
                "value.__class__": [
                    3217
                ],
                "src_ast": [
                    3241,
                    3222
                ],
                "ast.parse": [
                    3232,
                    3222
                ],
                "major": [
                    3224,
                    3227
                ],
                "minor": [
                    3224,
                    3227
                ],
                "sys.version_info": [
                    3224
                ],
                "AssertionError": [
                    3225,
                    3235,
                    3245,
                    3263
                ],
                "dst_ast": [
                    3232,
                    3242
                ],
                "log": [
                    3234,
                    3267,
                    3238,
                    3244,
                    3249,
                    3259
                ],
                "dump_to_file": [
                    3234,
                    3259,
                    3244
                ],
                "traceback.format_tb": [
                    3234
                ],
                "traceback": [
                    3234
                ],
                "exc.__traceback__": [
                    3234
                ],
                "src_ast_str": [
                    3241,
                    3243,
                    3244
                ],
                "dst_ast_str": [
                    3242,
                    3243,
                    3244
                ],
                "newdst": [
                    3257,
                    3258,
                    3261
                ],
                "tempfile.NamedTemporaryFile": [
                    3275
                ],
                "tempfile": [
                    3275
                ],
                "output": [
                    3278
                ],
                "f.name": [
                    3282
                ],
                "a_lines": [
                    3289,
                    3292
                ],
                "a.split": [
                    3289
                ],
                "a": [
                    3289
                ],
                "b_lines": [
                    3290,
                    3292
                ],
                "b.split": [
                    3290
                ],
                "b": [
                    3290
                ],
                "difflib.unified_diff": [
                    3292
                ],
                "difflib": [
                    3292
                ],
                "a_name": [
                    3292
                ],
                "b_name": [
                    3292
                ],
                "task.cancel": [
                    3312,
                    3300
                ],
                "to_cancel": [
                    3314,
                    3307,
                    3308,
                    3311
                ],
                "asyncio.Task.all_tasks": [
                    3307
                ],
                "task.done": [
                    3307
                ],
                "cf_logger": [
                    3320,
                    3321
                ],
                "logging.getLogger": [
                    3320
                ],
                "logging": [
                    3320,
                    3321
                ],
                "cf_logger.setLevel": [
                    3321
                ],
                "logging.CRITICAL": [
                    3321
                ],
                "loop.close": [
                    3322
                ],
                "regex.sub": [
                    3331
                ],
                "regex": [
                    3339,
                    3331,
                    3340,
                    3341
                ],
                "replacement": [
                    3331
                ],
                "original": [
                    3331
                ],
                "Sequence": [
                    3344,
                    3360
                ],
                "sequence": [
                    3346,
                    3347
                ],
                "element": [
                    3347,
                    3348
                ],
                "op": [
                    3363,
                    3359
                ],
                "cast": [
                    3359
                ],
                "enumerate_reversed": [
                    3361
                ],
                "call_count": [
                    3409,
                    3401,
                    3419
                ],
                "dot_count": [
                    3402,
                    3411,
                    3419
                ],
                "next.type": [
                    3413,
                    3406
                ],
                "second": [
                    3449,
                    3455
                ],
                "penultimate": [
                    3490,
                    3450
                ],
                "second.type": [
                    3455
                ],
                "remainder": [
                    3456,
                    3468,
                    3460,
                    3461
                ],
                "last.parent": [
                    3486,
                    3487
                ],
                "last.parent.type": [
                    3487
                ],
                "penultimate.type": [
                    3490
                ],
                "seen_other_brackets": [
                    3504,
                    3500,
                    3509
                ],
                "last.opening_bracket": [
                    3503
                ],
                "mode.value": [
                    3515
                ],
                "cache_file": [
                    3523,
                    3524,
                    3527,
                    3562,
                    3567
                ],
                "get_cache_file": [
                    3562,
                    3523
                ],
                "cache_file.exists": [
                    3524
                ],
                "cache_file.open": [
                    3567,
                    3527
                ],
                "fobj": [
                    3568,
                    3529,
                    3567,
                    3527
                ],
                "pickle.load": [
                    3529
                ],
                "pickle": [
                    3568,
                    3529,
                    3530
                ],
                "pickle.UnpicklingError": [
                    3530
                ],
                "stat": [
                    3538,
                    3539
                ],
                "path.stat": [
                    3538
                ],
                "stat.st_mtime": [
                    3539
                ],
                "stat.st_size": [
                    3539
                ],
                "todo": [
                    3552,
                    3555,
                    3548
                ],
                "cache.get": [
                    3551
                ],
                "todo.add": [
                    3552
                ],
                "done.add": [
                    3554
                ],
                "CACHE_DIR.exists": [
                    3564
                ],
                "CACHE_DIR.mkdir": [
                    3565
                ],
                "new_cache": [
                    3568,
                    3566
                ],
                "pickle.dump": [
                    3568
                ],
                "pickle.HIGHEST_PROTOCOL": [
                    3568
                ],
                "ModuleNotFoundError": [
                    3587
                ],
                "module": [
                    3592,
                    3590,
                    3591
                ],
                "core": [
                    3590
                ],
                "_unicodefun": [
                    3590
                ],
                "hasattr": [
                    3591
                ],
                "module._verify_python3_env": [
                    3592
                ],
                "__name__": [
                    3595
                ],
                "patch_click": [
                    3596
                ],
                "main": [
                    3597
                ]
            },
            "filtered_variables_in_file": {
                "__version__": [
                    56,
                    50,
                    261
                ],
                "DEFAULT_LINE_LENGTH": [
                    51,
                    172
                ],
                "DEFAULT_EXCLUDES": [
                    234,
                    52
                ],
                "DEFAULT_INCLUDES": [
                    221,
                    55
                ],
                "CACHE_DIR": [
                    3564,
                    3565,
                    77,
                    56,
                    3515
                ],
                "Path": [
                    3076,
                    3086,
                    3088,
                    412,
                    3116,
                    56,
                    3514,
                    315,
                    3132,
                    317,
                    3137,
                    73,
                    3536,
                    3542,
                    3033,
                    3034,
                    3038,
                    3559,
                    489,
                    367
                ],
                "user_cache_dir": [
                    56
                ],
                "FileContent": [
                    637,
                    60,
                    605,
                    583
                ],
                "Encoding": [
                    637,
                    61
                ],
                "NewLine": [
                    637,
                    62
                ],
                "Depth": [
                    877,
                    63
                ],
                "NodeType": [
                    64,
                    877,
                    2783
                ],
                "LeafID": [
                    65,
                    2945,
                    2951,
                    2952,
                    878,
                    2935,
                    2169,
                    927
                ],
                "Priority": [
                    66,
                    878
                ],
                "Index": [
                    3360,
                    67,
                    1001,
                    3344,
                    3354
                ],
                "LN": [
                    2690,
                    2825,
                    2701,
                    1426,
                    2841,
                    1817,
                    2729,
                    1835,
                    1837,
                    2993,
                    1843,
                    2739,
                    1849,
                    1977,
                    700,
                    68,
                    2762,
                    716,
                    727,
                    2685
                ],
                "Union": [
                    68,
                    748,
                    134
                ],
                "Leaf": [
                    1541,
                    2182,
                    2183,
                    2184,
                    1545,
                    1034,
                    1550,
                    2446,
                    1428,
                    2837,
                    1817,
                    3354,
                    2331,
                    1822,
                    2591,
                    2592,
                    3360,
                    2597,
                    2598,
                    3368,
                    2857,
                    683,
                    1196,
                    946,
                    1587,
                    1843,
                    2610,
                    2611,
                    1079,
                    2614,
                    1977,
                    2616,
                    2617,
                    2869,
                    2365,
                    2621,
                    959,
                    3000,
                    2881,
                    1218,
                    1091,
                    68,
                    3012,
                    968,
                    2377,
                    1868,
                    1997,
                    3024,
                    2513,
                    981,
                    2136,
                    2137,
                    1882,
                    2138,
                    2995,
                    990,
                    1247,
                    2398,
                    2783,
                    1000,
                    1001,
                    748,
                    877,
                    1006,
                    879,
                    2412,
                    2672,
                    883,
                    1142,
                    2806,
                    2685,
                    2430
                ],
                "Node": [
                    2827,
                    2572,
                    661,
                    2594,
                    2600,
                    1835,
                    684,
                    2989,
                    688,
                    1456,
                    1462,
                    2619,
                    2624,
                    68,
                    1477,
                    2631,
                    718,
                    2900,
                    1497,
                    729,
                    1504,
                    1255,
                    748,
                    1520,
                    2812,
                    1535
                ],
                "SplitFunc": [
                    2081,
                    2290,
                    69
                ],
                "Callable": [
                    3360,
                    69
                ],
                "Iterator": [
                    1410,
                    2306,
                    1541,
                    1545,
                    2059,
                    1550,
                    3344,
                    1426,
                    3354,
                    2331,
                    3360,
                    2086,
                    1456,
                    1462,
                    1977,
                    700,
                    1218,
                    2370,
                    69,
                    1478,
                    2377,
                    716,
                    2126,
                    727,
                    1497,
                    3038,
                    1504,
                    1520,
                    2935,
                    2297,
                    2170,
                    3196,
                    2685,
                    1535
                ],
                "Timestamp": [
                    72,
                    70
                ],
                "FileSize": [
                    72,
                    71
                ],
                "CacheInfo": [
                    72,
                    73,
                    3536
                ],
                "Tuple": [
                    1312,
                    3360,
                    293,
                    72,
                    1001,
                    1353,
                    877,
                    3344,
                    1300,
                    3542,
                    3354,
                    637
                ],
                "Cache": [
                    388,
                    3559,
                    3529,
                    73,
                    428,
                    3542,
                    3518
                ],
                "Dict": [
                    73,
                    877,
                    878
                ],
                "out": [
                    737,
                    3139,
                    740,
                    744,
                    329,
                    74,
                    361,
                    745,
                    302,
                    3121,
                    3129,
                    731
                ],
                "partial": [
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    74,
                    75,
                    1559,
                    1560,
                    1563,
                    1564,
                    1565
                ],
                "click.secho": [
                    74,
                    75,
                    362
                ],
                "click": [
                    261,
                    134,
                    262,
                    265,
                    270,
                    272,
                    279,
                    281,
                    154,
                    167,
                    168,
                    176,
                    185,
                    193,
                    199,
                    74,
                    75,
                    208,
                    213,
                    218,
                    231,
                    3177,
                    362,
                    3185,
                    243,
                    252
                ],
                "err": [
                    3298,
                    326,
                    75,
                    306,
                    311,
                    3134
                ],
                "pygram.initialize": [
                    77
                ],
                "pygram": [
                    77,
                    78,
                    655,
                    656,
                    657,
                    663
                ],
                "syms": [
                    2589,
                    2594,
                    2600,
                    2601,
                    1579,
                    2619,
                    1607,
                    1608,
                    1609,
                    78,
                    1631,
                    1632,
                    1633,
                    1634,
                    1638,
                    1649,
                    1654,
                    1662,
                    1157,
                    1673,
                    1678,
                    1683,
                    2708,
                    1689,
                    1186,
                    1700,
                    1707,
                    684,
                    2732,
                    2741,
                    1724,
                    2748,
                    1737,
                    2764,
                    1741,
                    2770,
                    1749,
                    1756,
                    1760,
                    1256,
                    1768,
                    1259,
                    2795,
                    1773,
                    1778,
                    763,
                    1788,
                    1789,
                    764,
                    765,
                    768,
                    769,
                    770,
                    1793,
                    766,
                    767,
                    1799,
                    2827,
                    1811,
                    2835,
                    2847,
                    801,
                    802,
                    803,
                    804,
                    805,
                    808,
                    809,
                    810,
                    811,
                    812,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    1858,
                    2885,
                    2406,
                    2407,
                    2919,
                    1898,
                    2927,
                    1906,
                    1926,
                    1933,
                    1937,
                    1946,
                    3487,
                    1958,
                    2998,
                    3003,
                    3009,
                    3022
                ],
                "pygram.python_symbols": [
                    78
                ],
                "Enum": [
                    107,
                    93
                ],
                "NO": [
                    1794,
                    1668,
                    1797,
                    1671,
                    1802,
                    1676,
                    1681,
                    1809,
                    1812,
                    1686,
                    1690,
                    1698,
                    1705,
                    1710,
                    1716,
                    1719,
                    1593,
                    1722,
                    1727,
                    1600,
                    1732,
                    1735,
                    1611,
                    1739,
                    1743,
                    1617,
                    1747,
                    1621,
                    1751,
                    1624,
                    1754,
                    94,
                    1763,
                    1636,
                    1766,
                    1771,
                    108,
                    1646,
                    1776,
                    1650,
                    1783,
                    1657,
                    1791
                ],
                "YES": [
                    110,
                    95
                ],
                "DIFF": [
                    96
                ],
                "CHECK": [
                    97
                ],
                "check": [
                    297,
                    3109,
                    101,
                    313
                ],
                "diff": [
                    101,
                    104,
                    297,
                    522,
                    3244,
                    3261,
                    3260,
                    573
                ],
                "cls.CHECK": [
                    102
                ],
                "cls": [
                    129,
                    102,
                    104,
                    123,
                    125,
                    127
                ],
                "cls.DIFF": [
                    104
                ],
                "cls.YES": [
                    104
                ],
                "CACHED": [
                    109
                ],
                "Flag": [
                    113
                ],
                "AUTO_DETECT": [
                    114
                ],
                "PYTHON36": [
                    115
                ],
                "PYI": [
                    116
                ],
                "NO_STRING_NORMALIZATION": [
                    117
                ],
                "mode": [
                    384,
                    129,
                    130,
                    390,
                    399,
                    405,
                    298,
                    557,
                    430,
                    3257,
                    3515,
                    3523,
                    453,
                    593,
                    338,
                    599,
                    351,
                    485,
                    613,
                    614,
                    615,
                    3562,
                    503,
                    123,
                    125,
                    510,
                    127
                ],
                "cls.AUTO_DETECT": [
                    123
                ],
                "py36": [
                    2113,
                    614,
                    2088,
                    618,
                    299,
                    621,
                    2108,
                    2096,
                    2352,
                    632,
                    2298,
                    124,
                    2237
                ],
                "cls.PYTHON36": [
                    125
                ],
                "pyi": [
                    299,
                    126
                ],
                "cls.PYI": [
                    127
                ],
                "skip_string_normalization": [
                    128,
                    299
                ],
                "cls.NO_STRING_NORMALIZATION": [
                    129
                ],
                "click.Context": [
                    281,
                    134
                ],
                "click.Parameter": [
                    134
                ],
                "value": [
                    3202,
                    3208,
                    3209,
                    141,
                    142,
                    3213,
                    3214,
                    3217,
                    146,
                    2454,
                    2455,
                    151,
                    2458,
                    2461,
                    164,
                    2607,
                    1072,
                    2003,
                    1112,
                    1114,
                    1123,
                    2808,
                    2809
                ],
                "root": [
                    320,
                    3046,
                    3049,
                    3053,
                    143,
                    144,
                    314,
                    3067
                ],
                "find_project_root": [
                    314,
                    143
                ],
                "ctx.params.get": [
                    143
                ],
                "ctx.params": [
                    143
                ],
                "ctx": [
                    160,
                    161,
                    330,
                    363,
                    143,
                    307,
                    312,
                    154,
                    159
                ],
                "path": [
                    3139,
                    3047,
                    144,
                    145,
                    146,
                    3538
                ],
                "path.is_file": [
                    145
                ],
                "pyproject_toml": [
                    152,
                    151
                ],
                "toml.load": [
                    151
                ],
                "toml": [
                    153,
                    151
                ],
                "config": [
                    162,
                    301,
                    302,
                    152,
                    156
                ],
                "get": [
                    152
                ],
                "pyproject_toml.get": [
                    152
                ],
                "toml.TomlDecodeError": [
                    153
                ],
                "click.BadOptionUsage": [
                    154
                ],
                "e": [
                    154
                ],
                "ctx.default_map": [
                    160,
                    161,
                    159
                ],
                "ctx.default_map.update": [
                    161
                ],
                "replace": [
                    162
                ],
                "k.replace": [
                    162
                ],
                "k": [
                    162,
                    933
                ],
                "v": [
                    1805,
                    1557,
                    1559,
                    1561,
                    1563,
                    1564,
                    1566,
                    1568,
                    1569,
                    162,
                    1570,
                    1571,
                    933,
                    1572,
                    1573,
                    1574,
                    1598,
                    2402,
                    2406,
                    2407,
                    753,
                    756
                ],
                "config.items": [
                    162
                ],
                "Optional": [
                    2690,
                    1091,
                    294,
                    135,
                    3368,
                    1835,
                    1837,
                    879,
                    1296,
                    1817,
                    990
                ],
                "write_back": [
                    384,
                    515,
                    452,
                    389,
                    478,
                    518,
                    297,
                    429,
                    398,
                    337,
                    402,
                    403,
                    567,
                    440,
                    569,
                    477,
                    350
                ],
                "WriteBack.from_configuration": [
                    297
                ],
                "WriteBack": [
                    389,
                    297,
                    492,
                    429,
                    543,
                    370,
                    403,
                    402,
                    567,
                    440,
                    569,
                    477,
                    478,
                    415
                ],
                "FileMode.from_configuration": [
                    298
                ],
                "FileMode": [
                    416,
                    544,
                    613,
                    582,
                    614,
                    615,
                    3559,
                    298,
                    493,
                    371,
                    3254,
                    503,
                    3514,
                    604,
                    3518
                ],
                "verbose": [
                    3111,
                    328,
                    359,
                    301,
                    313
                ],
                "include_regex": [
                    304,
                    320
                ],
                "re_compile_maybe_verbose": [
                    304,
                    309
                ],
                "include": [
                    304,
                    306,
                    3067,
                    3070
                ],
                "re.error": [
                    305,
                    310
                ],
                "re": [
                    2437,
                    2472,
                    2473,
                    2474,
                    3341,
                    305,
                    310,
                    2494
                ],
                "ctx.exit": [
                    312,
                    363,
                    330,
                    307
                ],
                "exclude_regex": [
                    320,
                    309
                ],
                "exclude": [
                    933,
                    2892,
                    2893,
                    309,
                    3061,
                    311,
                    3067
                ],
                "report": [
                    406,
                    408,
                    433,
                    313,
                    320,
                    339,
                    472,
                    352,
                    481,
                    3173,
                    360,
                    3176,
                    362,
                    363,
                    3052,
                    3181,
                    3184,
                    3187,
                    3063,
                    3067
                ],
                "Report": [
                    313
                ],
                "quiet": [
                    328,
                    313,
                    3110,
                    359
                ],
                "src": [
                    643,
                    516,
                    391,
                    520,
                    521,
                    395,
                    3088,
                    405,
                    406,
                    3222,
                    408,
                    554,
                    555,
                    557,
                    432,
                    433,
                    3121,
                    3126,
                    3128,
                    314,
                    316,
                    573,
                    3134,
                    3260,
                    449,
                    455,
                    456,
                    468,
                    472,
                    3549,
                    3550,
                    3551,
                    480,
                    481,
                    3552,
                    3554,
                    3566,
                    502,
                    505,
                    506,
                    382
                ],
                "sources": [
                    324,
                    327,
                    456,
                    332,
                    334,
                    431,
                    3566,
                    347,
                    434,
                    315,
                    3549,
                    319
                ],
                "Set": [
                    2945,
                    1477,
                    2951,
                    2952,
                    2572,
                    2989,
                    2991,
                    1558,
                    2935,
                    3542,
                    315,
                    412,
                    2783
                ],
                "s": [
                    322,
                    326,
                    3175,
                    3177,
                    3180,
                    3181,
                    3183,
                    3185,
                    316,
                    317
                ],
                "p": [
                    1799,
                    1673,
                    1678,
                    1683,
                    1811,
                    1700,
                    1703,
                    1707,
                    944,
                    1714,
                    1724,
                    1597,
                    317,
                    318,
                    320,
                    322,
                    1730,
                    324,
                    1605,
                    1606,
                    1737,
                    1741,
                    1615,
                    1745,
                    1749,
                    1756,
                    1759,
                    1760,
                    2400,
                    2406,
                    2407,
                    1768,
                    2794,
                    2795,
                    1773,
                    2798,
                    2801,
                    1778,
                    2803,
                    1781
                ],
                "p.is_dir": [
                    318
                ],
                "sources.update": [
                    319
                ],
                "gen_python_files_in_dir": [
                    320,
                    3067
                ],
                "p.is_file": [
                    322
                ],
                "sources.add": [
                    324
                ],
                "reformat_one": [
                    333
                ],
                "sources.pop": [
                    334
                ],
                "line_length": [
                    384,
                    390,
                    3463,
                    2955,
                    396,
                    405,
                    2076,
                    2087,
                    2088,
                    2089,
                    557,
                    430,
                    3504,
                    3383,
                    2233,
                    3257,
                    3515,
                    2237,
                    2113,
                    450,
                    2243,
                    3523,
                    335,
                    593,
                    599,
                    348,
                    485,
                    3562,
                    632,
                    510
                ],
                "fast": [
                    384,
                    451,
                    397,
                    557,
                    336,
                    597,
                    349,
                    510
                ],
                "loop": [
                    353,
                    483,
                    358,
                    3307,
                    460,
                    461,
                    3313,
                    3314,
                    342,
                    345,
                    3322,
                    446
                ],
                "asyncio.get_event_loop": [
                    342
                ],
                "asyncio": [
                    3296,
                    483,
                    458,
                    3307,
                    466,
                    3314,
                    342
                ],
                "executor": [
                    447,
                    354,
                    343
                ],
                "ProcessPoolExecutor": [
                    343
                ],
                "os.cpu_count": [
                    343
                ],
                "os": [
                    343
                ],
                "loop.run_until_complete": [
                    345,
                    3313
                ],
                "schedule_formatting": [
                    346
                ],
                "shutdown": [
                    358
                ],
                "bang": [
                    360,
                    361
                ],
                "report.return_code": [
                    360,
                    363
                ],
                "click.command": [
                    167
                ],
                "click.option": [
                    193,
                    199,
                    168,
                    231,
                    270,
                    176,
                    208,
                    243,
                    213,
                    185,
                    218,
                    252
                ],
                "click.version_option": [
                    261
                ],
                "click.argument": [
                    262
                ],
                "click.Path": [
                    272,
                    265
                ],
                "read_pyproject_toml": [
                    276
                ],
                "click.pass_context": [
                    279
                ],
                "changed": [
                    481,
                    386,
                    393,
                    394,
                    3118,
                    401,
                    402,
                    403,
                    3125,
                    406,
                    474,
                    381,
                    478
                ],
                "Changed.NO": [
                    403,
                    3125,
                    474,
                    381,
                    478
                ],
                "Changed": [
                    386,
                    393,
                    394,
                    3116,
                    3118,
                    401,
                    402,
                    403,
                    433,
                    3125,
                    474,
                    381,
                    478
                ],
                "src.is_file": [
                    382
                ],
                "format_stdin_to_stdout": [
                    383
                ],
                "Changed.YES": [
                    3118,
                    401,
                    386,
                    474
                ],
                "cache": [
                    388,
                    485,
                    390,
                    392,
                    3529,
                    428,
                    3533,
                    430,
                    431,
                    3566,
                    405,
                    3551
                ],
                "WriteBack.DIFF": [
                    440,
                    569,
                    389,
                    429
                ],
                "read_cache": [
                    430,
                    390
                ],
                "res_src": [
                    392,
                    391
                ],
                "src.resolve": [
                    3566,
                    3550,
                    391
                ],
                "get_cache_info": [
                    392,
                    3566,
                    3551
                ],
                "Changed.CACHED": [
                    393,
                    394,
                    433,
                    402
                ],
                "format_file_in_place": [
                    448,
                    394
                ],
                "WriteBack.YES": [
                    402,
                    477,
                    567
                ],
                "WriteBack.CHECK": [
                    403,
                    478
                ],
                "write_cache": [
                    485,
                    405
                ],
                "report.done": [
                    433,
                    481,
                    406
                ],
                "report.failed": [
                    408,
                    472
                ],
                "exc": [
                    3234,
                    3236,
                    679,
                    681,
                    408,
                    3228
                ],
                "BaseEventLoop": [
                    418,
                    3303
                ],
                "Executor": [
                    419
                ],
                "cached": [
                    432,
                    431
                ],
                "filter_cached": [
                    431
                ],
                "cancelled": [
                    482,
                    483,
                    437,
                    470
                ],
                "sources_to_cache": [
                    480,
                    484,
                    485,
                    438
                ],
                "lock": [
                    535,
                    454,
                    523,
                    524,
                    439,
                    536,
                    444
                ],
                "manager": [
                    443,
                    444
                ],
                "Manager": [
                    443
                ],
                "manager.Lock": [
                    444
                ],
                "tasks": [
                    458,
                    3299,
                    468,
                    445
                ],
                "loop.run_in_executor": [
                    446
                ],
                "pending": [
                    458,
                    460,
                    461,
                    465,
                    466
                ],
                "Iterable": [
                    3296,
                    3076,
                    3559,
                    458,
                    3542,
                    927
                ],
                "asyncio.Task": [
                    3296,
                    458,
                    3307
                ],
                "tasks.keys": [
                    458
                ],
                "loop.add_signal_handler": [
                    460,
                    461
                ],
                "signal.SIGINT": [
                    460
                ],
                "signal": [
                    460,
                    461
                ],
                "cancel": [
                    460,
                    461
                ],
                "signal.SIGTERM": [
                    461
                ],
                "done": [
                    3554,
                    3555,
                    466,
                    467,
                    3548
                ],
                "_": [
                    466,
                    627,
                    630,
                    1079,
                    1276
                ],
                "asyncio.wait": [
                    466
                ],
                "asyncio.FIRST_COMPLETED": [
                    466
                ],
                "task": [
                    3299,
                    3300,
                    3307,
                    3311,
                    3312,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    474
                ],
                "tasks.pop": [
                    468
                ],
                "task.cancelled": [
                    469
                ],
                "cancelled.append": [
                    470
                ],
                "task.exception": [
                    472,
                    471
                ],
                "task.result": [
                    474
                ],
                "sources_to_cache.append": [
                    480
                ],
                "asyncio.gather": [
                    3314,
                    483
                ],
                "Any": [
                    494
                ],
                "WriteBack.NO": [
                    492,
                    543
                ],
                "FileMode.AUTO_DETECT": [
                    544,
                    582,
                    493,
                    3254,
                    604
                ],
                "src.suffix": [
                    502
                ],
                "FileMode.PYI": [
                    613,
                    503
                ],
                "then": [
                    520,
                    505,
                    571,
                    553
                ],
                "datetime.utcfromtimestamp": [
                    505
                ],
                "datetime": [
                    505,
                    570,
                    553,
                    519
                ],
                "st_mtime": [
                    505
                ],
                "src.stat": [
                    505
                ],
                "buf": [
                    506,
                    507
                ],
                "src_contents": [
                    610,
                    522,
                    590,
                    593,
                    594,
                    598,
                    599,
                    507,
                    510
                ],
                "encoding": [
                    516,
                    644,
                    646,
                    554,
                    650,
                    651,
                    528,
                    565,
                    507
                ],
                "newline": [
                    516,
                    648,
                    554,
                    651,
                    529,
                    565,
                    507
                ],
                "decode_bytes": [
                    554,
                    507
                ],
                "buf.read": [
                    507
                ],
                "dst_contents": [
                    611,
                    517,
                    631,
                    522,
                    593,
                    594,
                    628,
                    598,
                    599,
                    600,
                    633,
                    634,
                    509
                ],
                "format_file_contents": [
                    557,
                    509
                ],
                "NothingChanged": [
                    512,
                    560,
                    595,
                    591
                ],
                "write_back.YES": [
                    515
                ],
                "f": [
                    516,
                    517,
                    3277,
                    526,
                    3279,
                    3281,
                    3282,
                    532,
                    533,
                    564,
                    568,
                    573,
                    574
                ],
                "f.write": [
                    517,
                    3279,
                    3281,
                    532,
                    568,
                    573
                ],
                "write_back.DIFF": [
                    518
                ],
                "now": [
                    521,
                    570,
                    572,
                    519
                ],
                "datetime.utcnow": [
                    553,
                    570,
                    519
                ],
                "src_name": [
                    520,
                    522,
                    571,
                    573
                ],
                "dst_name": [
                    521,
                    522,
                    572,
                    573
                ],
                "diff_contents": [
                    522,
                    532
                ],
                "lock.acquire": [
                    524
                ],
                "io.TextIOWrapper": [
                    650,
                    564,
                    526
                ],
                "io": [
                    650,
                    643,
                    564,
                    526
                ],
                "sys.stdout.buffer": [
                    565,
                    527
                ],
                "sys.stdout": [
                    565,
                    527
                ],
                "sys": [
                    1126,
                    554,
                    527,
                    565,
                    2328,
                    3224
                ],
                "f.detach": [
                    533,
                    574
                ],
                "lock.release": [
                    536
                ],
                "sys.stdin.buffer.read": [
                    554
                ],
                "sys.stdin.buffer": [
                    554
                ],
                "sys.stdin": [
                    554
                ],
                "dst": [
                    3232,
                    3234,
                    555,
                    557,
                    3261,
                    568,
                    3257,
                    3258,
                    3260,
                    573
                ],
                "src_contents.strip": [
                    590
                ],
                "format_str": [
                    593,
                    3257
                ],
                "assert_equivalent": [
                    598
                ],
                "assert_stable": [
                    599
                ],
                "src_node": [
                    610,
                    612,
                    614,
                    616,
                    626
                ],
                "lib2to3_parse": [
                    610,
                    755
                ],
                "future_imports": [
                    618,
                    612
                ],
                "get_future_imports": [
                    612
                ],
                "is_pyi": [
                    613,
                    619,
                    1295,
                    623,
                    1404
                ],
                "FileMode.PYTHON36": [
                    614
                ],
                "is_python36": [
                    614
                ],
                "normalize_strings": [
                    620,
                    1405,
                    615
                ],
                "FileMode.NO_STRING_NORMALIZATION": [
                    615
                ],
                "normalize_fmt_off": [
                    616
                ],
                "lines": [
                    674,
                    644,
                    645,
                    676,
                    648,
                    617,
                    2088,
                    2089,
                    2090,
                    3278,
                    3279,
                    3280,
                    626
                ],
                "LineGenerator": [
                    617
                ],
                "elt": [
                    629,
                    623
                ],
                "EmptyLineTracker": [
                    623
                ],
                "empty_line": [
                    624,
                    628,
                    631
                ],
                "Line": [
                    1410,
                    2179,
                    2180,
                    1541,
                    2181,
                    2306,
                    1545,
                    2058,
                    2059,
                    1550,
                    1423,
                    1296,
                    1426,
                    1300,
                    2327,
                    3353,
                    2331,
                    1312,
                    2339,
                    2297,
                    2086,
                    3375,
                    1456,
                    2357,
                    1462,
                    2106,
                    3389,
                    2881,
                    2370,
                    1478,
                    2375,
                    1352,
                    2377,
                    2126,
                    2385,
                    2133,
                    2134,
                    2135,
                    2264,
                    1497,
                    1504,
                    3425,
                    624,
                    1520,
                    1397,
                    2935,
                    2169,
                    2170,
                    1406,
                    1535
                ],
                "after": [
                    1306,
                    1308,
                    1310,
                    1208,
                    1209,
                    1215,
                    2524,
                    2526,
                    2527,
                    2529,
                    2530,
                    2532,
                    2533,
                    625,
                    627,
                    2548,
                    629,
                    2550,
                    2551
                ],
                "current_line": [
                    2327,
                    1306,
                    1309,
                    2335,
                    2337,
                    1314,
                    2339,
                    1316,
                    2340,
                    1318,
                    1324,
                    1331,
                    1332,
                    2355,
                    2357,
                    2358,
                    1337,
                    2362,
                    2363,
                    2365,
                    2366,
                    1345,
                    2375,
                    1354,
                    1355,
                    2381,
                    2383,
                    2385,
                    2386,
                    1363,
                    1370,
                    2394,
                    2395,
                    1376,
                    1378,
                    1379,
                    1384,
                    1391,
                    626,
                    629,
                    632,
                    1406
                ],
                "lines.visit": [
                    626
                ],
                "before": [
                    1306,
                    1307,
                    1310,
                    2551,
                    1319,
                    1320,
                    1323,
                    1328,
                    1330,
                    1332,
                    1340,
                    1347,
                    1349,
                    1371,
                    2524,
                    2531,
                    2533,
                    2548,
                    629,
                    630,
                    2549
                ],
                "elt.maybe_empty_lines": [
                    629
                ],
                "line": [
                    3457,
                    3458,
                    2179,
                    2180,
                    2181,
                    2948,
                    2313,
                    2953,
                    2188,
                    2317,
                    3472,
                    2070,
                    2071,
                    2327,
                    2074,
                    2075,
                    2076,
                    2973,
                    2078,
                    2082,
                    2339,
                    3363,
                    2213,
                    2342,
                    2087,
                    2088,
                    2345,
                    3369,
                    3499,
                    3501,
                    2096,
                    2098,
                    2229,
                    2357,
                    3381,
                    3385,
                    2108,
                    2237,
                    2372,
                    3396,
                    3448,
                    2375,
                    3449,
                    2123,
                    2891,
                    2893,
                    3450,
                    2385,
                    2388,
                    2133,
                    2134,
                    2135,
                    2391,
                    3289,
                    3290,
                    2141,
                    2016,
                    2017,
                    2018,
                    2019,
                    2021,
                    3432,
                    2028,
                    2160,
                    3446,
                    632,
                    633,
                    2298,
                    3451
                ],
                "split_line": [
                    632,
                    2113
                ],
                "srcbuf": [
                    649,
                    650,
                    643,
                    644
                ],
                "io.BytesIO": [
                    643
                ],
                "tokenize.detect_encoding": [
                    644
                ],
                "tokenize": [
                    644
                ],
                "srcbuf.readline": [
                    644
                ],
                "srcbuf.seek": [
                    649
                ],
                "tiow": [
                    650,
                    651
                ],
                "tiow.read": [
                    651
                ],
                "GRAMMARS": [
                    666,
                    654
                ],
                "pygram.python_grammar_no_print_statement_no_exec_statement": [
                    655
                ],
                "pygram.python_grammar_no_print_statement": [
                    656,
                    663
                ],
                "pygram.python_grammar": [
                    657
                ],
                "grammar": [
                    666,
                    667,
                    663
                ],
                "src_txt": [
                    664,
                    665,
                    674,
                    669
                ],
                "drv": [
                    667,
                    669
                ],
                "driver.Driver": [
                    667
                ],
                "driver": [
                    667
                ],
                "pytree.convert": [
                    667
                ],
                "pytree": [
                    667
                ],
                "result": [
                    669,
                    2210,
                    2212,
                    2214,
                    683,
                    684,
                    685,
                    2106,
                    2112,
                    2119,
                    2259,
                    2260,
                    2261,
                    2010,
                    2012,
                    2029,
                    2157,
                    2159,
                    2161,
                    2035,
                    2163,
                    2164,
                    2165
                ],
                "drv.parse_string": [
                    669
                ],
                "ParseError": [
                    672
                ],
                "lineno": [
                    673,
                    676,
                    679
                ],
                "column": [
                    673,
                    679
                ],
                "pe.context": [
                    673
                ],
                "pe": [
                    673
                ],
                "src_txt.splitlines": [
                    674
                ],
                "faulty_line": [
                    676,
                    678,
                    679
                ],
                "syms.file_input": [
                    1858,
                    684
                ],
                "code": [
                    754,
                    690,
                    691,
                    756,
                    755
                ],
                "node": [
                    1537,
                    2581,
                    2587,
                    2594,
                    2600,
                    2601,
                    2607,
                    2610,
                    2611,
                    2619,
                    2628,
                    2636,
                    3198,
                    3200,
                    3202,
                    3219,
                    2708,
                    2709,
                    2710,
                    2711,
                    2712,
                    2716,
                    2717,
                    2722,
                    2723,
                    2732,
                    2733,
                    2734,
                    2735,
                    690,
                    2741,
                    2742,
                    2745,
                    2756,
                    2757,
                    710,
                    711,
                    2758,
                    713,
                    714,
                    2764,
                    718,
                    719,
                    2767,
                    2770,
                    2773,
                    2776,
                    729,
                    730,
                    733,
                    739,
                    741,
                    744,
                    745,
                    2815,
                    2816,
                    2817,
                    2818,
                    2822,
                    2827,
                    2830,
                    2833,
                    1819,
                    1820,
                    2847,
                    2850,
                    2851,
                    1831,
                    2856,
                    1837,
                    1838,
                    1839,
                    1840,
                    2908,
                    1428,
                    1430,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1460,
                    1471,
                    3008,
                    1490,
                    1491,
                    1499,
                    1500,
                    1502,
                    1506,
                    1508,
                    1509,
                    1512,
                    1516,
                    1518,
                    1524
                ],
                "T": [
                    716,
                    3344,
                    724,
                    694,
                    727,
                    697,
                    700
                ],
                "TypeVar": [
                    694
                ],
                "Generic": [
                    697
                ],
                "node.type": [
                    739,
                    2756,
                    710,
                    711,
                    1447,
                    713,
                    1450,
                    2601,
                    1452,
                    2732,
                    2764,
                    2767,
                    2827,
                    2770,
                    2708,
                    2741,
                    730,
                    2847
                ],
                "name": [
                    713,
                    714,
                    711
                ],
                "token.tok_name": [
                    739,
                    773,
                    711
                ],
                "token": [
                    2591,
                    2592,
                    1059,
                    2597,
                    2598,
                    1580,
                    2604,
                    1071,
                    1584,
                    2608,
                    2610,
                    2611,
                    1079,
                    2616,
                    2617,
                    1602,
                    1094,
                    1095,
                    1606,
                    1097,
                    1619,
                    1620,
                    1111,
                    1623,
                    1113,
                    1628,
                    1122,
                    1648,
                    1146,
                    1660,
                    1151,
                    1664,
                    1155,
                    2691,
                    1675,
                    1680,
                    1688,
                    1692,
                    2718,
                    1184,
                    1697,
                    1704,
                    1709,
                    2222,
                    2734,
                    2735,
                    1713,
                    2225,
                    1715,
                    1205,
                    1718,
                    1721,
                    2747,
                    2749,
                    1726,
                    2753,
                    1731,
                    1734,
                    711,
                    2758,
                    2767,
                    1746,
                    1750,
                    1753,
                    2777,
                    739,
                    1769,
                    1775,
                    760,
                    1787,
                    2816,
                    1793,
                    2817,
                    2818,
                    1796,
                    773,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    1800,
                    1801,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    2837,
                    799,
                    2852,
                    2362,
                    2875,
                    2365,
                    2877,
                    3400,
                    2892,
                    3410,
                    1876,
                    3412,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    2404,
                    2909,
                    2914,
                    1896,
                    2921,
                    3413,
                    1804,
                    1914,
                    1916,
                    1920,
                    898,
                    1808,
                    3480,
                    3481,
                    1434,
                    1949,
                    3485,
                    1447,
                    1961,
                    1450,
                    2996,
                    952,
                    3001,
                    961,
                    3016,
                    3017,
                    1996,
                    974,
                    1492,
                    983,
                    992,
                    2025,
                    1528,
                    1020
                ],
                "type_repr": [
                    713,
                    730
                ],
                "self": [
                    1026,
                    1538,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1539,
                    1543,
                    1547,
                    1548,
                    1551,
                    1040,
                    1041,
                    1552,
                    1553,
                    1044,
                    1557,
                    1559,
                    1560,
                    1049,
                    1563,
                    1564,
                    1565,
                    1054,
                    1568,
                    1533,
                    1569,
                    1059,
                    1570,
                    1571,
                    1572,
                    1573,
                    1064,
                    1574,
                    1575,
                    1576,
                    1070,
                    1071,
                    1072,
                    3119,
                    3120,
                    3122,
                    3124,
                    1078,
                    3130,
                    1086,
                    3135,
                    3138,
                    1091,
                    3152,
                    3155,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    3165,
                    1121,
                    1122,
                    1123,
                    3174,
                    3175,
                    1128,
                    3177,
                    3179,
                    3180,
                    3181,
                    3182,
                    3183,
                    1136,
                    3185,
                    1145,
                    1146,
                    1152,
                    1156,
                    1158,
                    1163,
                    1164,
                    1172,
                    1179,
                    1191,
                    1200,
                    1208,
                    1215,
                    1223,
                    714,
                    1227,
                    720,
                    1234,
                    728,
                    1240,
                    1241,
                    1242,
                    732,
                    1244,
                    734,
                    1245,
                    736,
                    1249,
                    1267,
                    1270,
                    1271,
                    1276,
                    1282,
                    1306,
                    1307,
                    1308,
                    1309,
                    1315,
                    1325,
                    1326,
                    1327,
                    1332,
                    1335,
                    1336,
                    1338,
                    1343,
                    1344,
                    1355,
                    1356,
                    1360,
                    1363,
                    1364,
                    1369,
                    1370,
                    1375,
                    1376,
                    1378,
                    1379,
                    1384,
                    901,
                    902,
                    904,
                    905,
                    1418,
                    907,
                    908,
                    909,
                    910,
                    911,
                    1419,
                    913,
                    1422,
                    915,
                    1423,
                    917,
                    918,
                    919,
                    920,
                    921,
                    1429,
                    1433,
                    1436,
                    925,
                    1437,
                    1441,
                    1443,
                    1444,
                    933,
                    1447,
                    1448,
                    1451,
                    940,
                    1453,
                    943,
                    944,
                    1459,
                    1460,
                    953,
                    954,
                    1467,
                    1471,
                    961,
                    962,
                    963,
                    1474,
                    975,
                    976,
                    1493,
                    983,
                    984,
                    985,
                    1495,
                    1499,
                    1500,
                    1502,
                    992,
                    1508,
                    1509,
                    1511,
                    1512,
                    1513,
                    1516,
                    1517,
                    1518,
                    1522,
                    1526,
                    1020,
                    1021,
                    1022
                ],
                "self.visit_default": [
                    1509,
                    1512,
                    714,
                    1547,
                    1518,
                    1553,
                    1460,
                    1502,
                    1471
                ],
                "child": [
                    3072,
                    1537,
                    1539,
                    2833,
                    2835,
                    2836,
                    2837,
                    2587,
                    2589,
                    2590,
                    2593,
                    2594,
                    2595,
                    2599,
                    2600,
                    2604,
                    2606,
                    2608,
                    2994,
                    2995,
                    2996,
                    2997,
                    2614,
                    2998,
                    2999,
                    2618,
                    2619,
                    3003,
                    2621,
                    3004,
                    3008,
                    3009,
                    3011,
                    3015,
                    3017,
                    719,
                    720,
                    3069,
                    1491,
                    1492,
                    1495,
                    733,
                    734,
                    3047,
                    3049,
                    3051,
                    3053,
                    3059,
                    1525,
                    1526,
                    3063,
                    1528,
                    3066,
                    3067,
                    1532,
                    1533
                ],
                "node.children": [
                    2816,
                    1537,
                    2817,
                    2818,
                    2822,
                    2830,
                    2833,
                    2587,
                    2716,
                    2717,
                    2722,
                    2723,
                    2850,
                    2851,
                    2856,
                    2733,
                    2734,
                    2607,
                    2735,
                    2742,
                    2745,
                    3008,
                    2757,
                    2758,
                    719,
                    1491,
                    2773,
                    2776,
                    1500,
                    733,
                    1524,
                    2815
                ],
                "self.visit": [
                    1539,
                    720,
                    1526,
                    1495,
                    1500,
                    1533,
                    734
                ],
                "Visitor": [
                    724,
                    1397
                ],
                "tree_depth": [
                    725
                ],
                "indent": [
                    737,
                    740,
                    1419,
                    1423,
                    1270,
                    728,
                    1273,
                    731
                ],
                "self.tree_depth": [
                    728,
                    736,
                    732
                ],
                "_type": [
                    737,
                    739,
                    740,
                    730,
                    731
                ],
                "token.tok_name.get": [
                    739
                ],
                "node.prefix": [
                    744,
                    2581,
                    741
                ],
                "node.value": [
                    745,
                    2767
                ],
                "DebugVisitor": [
                    753
                ],
                "v.visit": [
                    756
                ],
                "dataclass": [
                    3105,
                    995,
                    1285,
                    872,
                    2000,
                    723,
                    1396
                ],
                "KEYWORDS": [
                    759
                ],
                "keyword.kwlist": [
                    759
                ],
                "keyword": [
                    759
                ],
                "WHITESPACE": [
                    760,
                    1452,
                    2645
                ],
                "token.DEDENT": [
                    760,
                    2818
                ],
                "token.INDENT": [
                    760,
                    2817
                ],
                "token.NEWLINE": [
                    760,
                    2816,
                    3017
                ],
                "FLOW_CONTROL": [
                    761
                ],
                "STATEMENT": [
                    762,
                    1506
                ],
                "syms.if_stmt": [
                    763
                ],
                "syms.while_stmt": [
                    764
                ],
                "syms.for_stmt": [
                    765
                ],
                "syms.try_stmt": [
                    766
                ],
                "syms.except_clause": [
                    767
                ],
                "syms.with_stmt": [
                    768
                ],
                "syms.funcdef": [
                    769
                ],
                "syms.classdef": [
                    770,
                    1749
                ],
                "STANDALONE_COMMENT": [
                    772,
                    773,
                    1129,
                    2027,
                    1199,
                    1584,
                    2673,
                    2959,
                    2643,
                    1044,
                    1210,
                    2363,
                    1054
                ],
                "LOGIC_OPERATORS": [
                    774,
                    1967
                ],
                "COMPARATORS": [
                    1910,
                    775
                ],
                "token.LESS": [
                    776
                ],
                "token.GREATER": [
                    777
                ],
                "token.EQEQUAL": [
                    778
                ],
                "token.NOTEQUAL": [
                    779
                ],
                "token.LESSEQUAL": [
                    780
                ],
                "token.GREATEREQUAL": [
                    781
                ],
                "MATH_OPERATORS": [
                    1904,
                    1655,
                    783
                ],
                "token.VBAR": [
                    784,
                    854
                ],
                "token.CIRCUMFLEX": [
                    785,
                    855
                ],
                "token.AMPER": [
                    856,
                    786
                ],
                "token.LEFTSHIFT": [
                    857,
                    787
                ],
                "token.RIGHTSHIFT": [
                    1660,
                    858,
                    788
                ],
                "token.PLUS": [
                    859,
                    789
                ],
                "token.MINUS": [
                    860,
                    790
                ],
                "token.STAR": [
                    2608,
                    799,
                    861,
                    791
                ],
                "token.SLASH": [
                    792,
                    862
                ],
                "token.DOUBLESLASH": [
                    793,
                    863
                ],
                "token.PERCENT": [
                    864,
                    794
                ],
                "token.AT": [
                    865,
                    1746,
                    795,
                    1059
                ],
                "token.TILDE": [
                    866,
                    796
                ],
                "token.DOUBLESTAR": [
                    1775,
                    867,
                    797,
                    799
                ],
                "STARS": [
                    1734,
                    2791,
                    2924,
                    1644,
                    2929,
                    799
                ],
                "VARARGS_PARENTS": [
                    800,
                    1890,
                    1645,
                    2350
                ],
                "syms.arglist": [
                    801,
                    1186,
                    2919,
                    1673,
                    1631
                ],
                "syms.argument": [
                    1632,
                    1793,
                    802,
                    2927,
                    1724
                ],
                "syms.trailer": [
                    827,
                    803,
                    1707,
                    3487
                ],
                "syms.typedargslist": [
                    1683,
                    804,
                    1638,
                    2919
                ],
                "syms.varargslist": [
                    1634,
                    805,
                    1678
                ],
                "UNPACKING_PARENTS": [
                    1890,
                    1645,
                    807
                ],
                "syms.atom": [
                    2594,
                    2885,
                    808,
                    1768,
                    2600,
                    2732,
                    2770,
                    2835,
                    2708,
                    2741,
                    2619,
                    2589,
                    2847
                ],
                "syms.dictsetmaker": [
                    809,
                    1773
                ],
                "syms.listmaker": [
                    1256,
                    810,
                    1157
                ],
                "syms.testlist_gexp": [
                    811,
                    2748
                ],
                "syms.testlist_star_expr": [
                    1579,
                    812
                ],
                "TEST_DESCENDANTS": [
                    1262,
                    814
                ],
                "syms.test": [
                    1937,
                    815
                ],
                "syms.lambdef": [
                    816
                ],
                "syms.or_test": [
                    817
                ],
                "syms.and_test": [
                    818
                ],
                "syms.not_test": [
                    819
                ],
                "syms.comparison": [
                    1946,
                    820
                ],
                "syms.star_expr": [
                    1778,
                    2795,
                    821,
                    1906
                ],
                "syms.expr": [
                    822
                ],
                "syms.xor_expr": [
                    823
                ],
                "syms.and_expr": [
                    824
                ],
                "syms.shift_expr": [
                    825,
                    1662
                ],
                "syms.arith_expr": [
                    826
                ],
                "syms.term": [
                    828
                ],
                "syms.power": [
                    829
                ],
                "ASSIGNMENTS": [
                    1572,
                    831
                ],
                "COMPREHENSION_PRIORITY": [
                    1928,
                    1935,
                    847
                ],
                "COMMA_PRIORITY": [
                    848,
                    2897,
                    1877,
                    2712,
                    2361
                ],
                "TERNARY_PRIORITY": [
                    849,
                    1938
                ],
                "LOGIC_PRIORITY": [
                    1968,
                    850
                ],
                "STRING_PRIORITY": [
                    851,
                    1918
                ],
                "COMPARATOR_PRIORITY": [
                    1953,
                    1965,
                    852,
                    1941,
                    1911
                ],
                "MATH_PRIORITIES": [
                    1908,
                    853
                ],
                "DOT_PRIORITY": [
                    2323,
                    3442,
                    1901,
                    869
                ],
                "depth": [
                    1184,
                    3206,
                    999,
                    3211,
                    876,
                    1324,
                    1325,
                    3214,
                    1328,
                    1169,
                    1330,
                    3217,
                    3219,
                    1338,
                    3198
                ],
                "bracket_match": [
                    877
                ],
                "Factory": [
                    1000,
                    1001,
                    1002,
                    877,
                    878,
                    1298,
                    1406
                ],
                "delimiters": [
                    878
                ],
                "previous": [
                    1960,
                    1948,
                    1961,
                    1899,
                    1962,
                    879,
                    1915,
                    1916,
                    1949,
                    1950
                ],
                "_for_loop_variable": [
                    880
                ],
                "_lambda_arguments": [
                    881
                ],
                "leaf.type": [
                    1920,
                    898,
                    3459,
                    903,
                    905,
                    3466,
                    2959,
                    2194,
                    916,
                    917,
                    1044,
                    2966,
                    2968,
                    1184,
                    3507,
                    952,
                    2875,
                    1596,
                    2877,
                    961,
                    1996,
                    3405,
                    974,
                    3410,
                    1876,
                    3412,
                    983,
                    3416,
                    2144,
                    2401,
                    2150,
                    2791,
                    1896,
                    1129,
                    1904,
                    1908,
                    1910,
                    1016,
                    1914,
                    1020
                ],
                "leaf": [
                    1025,
                    1026,
                    2443,
                    1029,
                    1030,
                    1031,
                    1032,
                    2953,
                    1547,
                    1553,
                    1044,
                    1049,
                    3466,
                    2958,
                    2959,
                    2962,
                    1596,
                    1597,
                    1598,
                    2964,
                    1605,
                    2636,
                    1613,
                    2638,
                    2644,
                    2648,
                    2141,
                    2144,
                    2145,
                    2148,
                    2150,
                    2151,
                    1128,
                    1129,
                    1130,
                    2158,
                    2159,
                    1136,
                    1137,
                    2160,
                    2690,
                    2188,
                    2190,
                    2192,
                    2194,
                    2195,
                    1172,
                    1173,
                    2196,
                    1179,
                    1180,
                    1183,
                    1184,
                    1186,
                    2211,
                    2212,
                    2213,
                    1228,
                    2791,
                    2794,
                    1260,
                    2808,
                    1274,
                    1275,
                    2837,
                    2335,
                    3363,
                    2340,
                    3364,
                    2342,
                    2343,
                    3365,
                    2345,
                    3369,
                    2348,
                    2349,
                    2350,
                    2860,
                    2861,
                    2353,
                    3372,
                    1848,
                    1849,
                    2875,
                    2876,
                    2877,
                    2878,
                    3404,
                    2381,
                    3405,
                    2386,
                    3410,
                    1876,
                    2388,
                    2389,
                    2391,
                    3412,
                    3416,
                    2400,
                    2401,
                    1890,
                    2402,
                    1896,
                    1897,
                    1898,
                    1904,
                    1905,
                    1906,
                    2419,
                    1908,
                    1910,
                    2424,
                    1914,
                    2427,
                    1920,
                    898,
                    3458,
                    1924,
                    901,
                    902,
                    903,
                    1925,
                    905,
                    906,
                    907,
                    1926,
                    909,
                    1931,
                    1932,
                    1933,
                    913,
                    1937,
                    915,
                    916,
                    917,
                    1940,
                    919,
                    920,
                    921,
                    1944,
                    1945,
                    1946,
                    2454,
                    2966,
                    2967,
                    2968,
                    2969,
                    2977,
                    2467,
                    1956,
                    1957,
                    1958,
                    2471,
                    2980,
                    2986,
                    2475,
                    3501,
                    1967,
                    3503,
                    3507,
                    952,
                    2490,
                    961,
                    1996,
                    974,
                    2510,
                    983,
                    2519,
                    2437,
                    2438,
                    2540,
                    3459,
                    1016,
                    1020
                ],
                "token.COMMENT": [
                    898,
                    1602,
                    2025,
                    1205,
                    1434
                ],
                "self.maybe_decrement_after_for_loop_variable": [
                    901
                ],
                "self.maybe_decrement_after_lambda_arguments": [
                    902
                ],
                "CLOSING_BRACKETS": [
                    2144,
                    3416,
                    3459,
                    903,
                    1899,
                    1582,
                    1583,
                    1584,
                    3406,
                    2194,
                    2966,
                    2968,
                    1147,
                    3455
                ],
                "self.depth": [
                    992,
                    962,
                    904,
                    905,
                    907,
                    908,
                    975,
                    917,
                    918,
                    1270,
                    984,
                    953
                ],
                "opening_bracket": [
                    2949,
                    905,
                    906,
                    2186,
                    2190,
                    2195,
                    2963,
                    2964,
                    2965,
                    2970,
                    2980,
                    2215,
                    2216,
                    2222,
                    2223,
                    2884,
                    2885,
                    2886,
                    2257
                ],
                "self.bracket_match.pop": [
                    905
                ],
                "self.bracket_match": [
                    992,
                    905,
                    917,
                    925
                ],
                "leaf.opening_bracket": [
                    2145,
                    3459,
                    2980,
                    906,
                    2195
                ],
                "leaf.bracket_depth": [
                    1130,
                    907,
                    2348,
                    2349,
                    1183
                ],
                "delim": [
                    909,
                    910,
                    911,
                    913,
                    914,
                    915
                ],
                "is_split_before_delimiter": [
                    909
                ],
                "self.previous": [
                    909,
                    910,
                    911,
                    913,
                    919
                ],
                "self.delimiters": [
                    933,
                    940,
                    911,
                    944,
                    915
                ],
                "is_split_after_delimiter": [
                    913
                ],
                "OPENING_BRACKETS": [
                    3490,
                    1670,
                    2150,
                    3466,
                    1581,
                    3405,
                    1583,
                    1616,
                    3507,
                    916,
                    3413,
                    1782,
                    2973,
                    3455
                ],
                "BRACKET": [
                    1581,
                    1580,
                    917,
                    1582
                ],
                "self.maybe_increment_lambda_arguments": [
                    920
                ],
                "self.maybe_increment_for_loop_variable": [
                    921
                ],
                "self.delimiters.items": [
                    933
                ],
                "priority": [
                    944,
                    943
                ],
                "self.max_delimiter_priority": [
                    943
                ],
                "self.delimiters.values": [
                    944
                ],
                "token.NAME": [
                    1664,
                    961,
                    1920,
                    1796,
                    2404,
                    1094,
                    1097,
                    1961,
                    1804,
                    974,
                    1071,
                    2767,
                    1492,
                    2996,
                    3412,
                    952,
                    3001,
                    1949
                ],
                "leaf.value": [
                    1924,
                    2437,
                    2438,
                    1931,
                    2443,
                    2958,
                    1937,
                    1940,
                    2454,
                    1944,
                    2969,
                    2467,
                    1956,
                    3364,
                    3365,
                    2471,
                    2475,
                    1967,
                    2808,
                    952,
                    2490,
                    2876,
                    1598,
                    2878,
                    961,
                    974,
                    2510,
                    2519,
                    2402,
                    2540,
                    1016
                ],
                "self._for_loop_variable": [
                    961,
                    954,
                    963
                ],
                "self._lambda_arguments": [
                    976,
                    985,
                    983
                ],
                "token.COLON": [
                    1606,
                    1648,
                    1619,
                    1620,
                    983,
                    1787,
                    1020
                ],
                "self.bracket_match.get": [
                    992
                ],
                "token.RSQB": [
                    992,
                    1155,
                    1580,
                    3485
                ],
                "leaves": [
                    2210,
                    2211,
                    3396,
                    3397,
                    1000,
                    3400,
                    3403,
                    3404,
                    2157,
                    2158,
                    1271,
                    1272,
                    1274
                ],
                "List": [
                    2137,
                    2081,
                    2106,
                    2138,
                    2182,
                    2183,
                    1000,
                    1001,
                    2184,
                    2993,
                    1298,
                    2136,
                    2009,
                    2010
                ],
                "comments": [
                    1001
                ],
                "bracket_tracker": [
                    1002
                ],
                "BracketTracker": [
                    1002,
                    2855
                ],
                "inside_brackets": [
                    2418,
                    1003
                ],
                "should_explode": [
                    2216,
                    1004
                ],
                "has_value": [
                    1016,
                    1017
                ],
                "BRACKETS": [
                    1016,
                    1861,
                    1583
                ],
                "leaf.value.strip": [
                    1016
                ],
                "self.is_class_paren_empty": [
                    1020
                ],
                "self.leaves": [
                    1282,
                    1156,
                    1032,
                    1044,
                    1172,
                    1179,
                    1054,
                    1059,
                    1064,
                    1071,
                    1072,
                    1078,
                    1208,
                    1086,
                    1091,
                    1227,
                    1109,
                    1111,
                    1112,
                    1113,
                    1114,
                    1240,
                    1245,
                    1122,
                    1123,
                    1128,
                    1136,
                    1271,
                    1145,
                    1146,
                    1021,
                    1022
                ],
                "preformatted": [
                    1049,
                    1028,
                    1022
                ],
                "leaf.prefix": [
                    1025,
                    2424,
                    3364,
                    1996,
                    2638,
                    2958,
                    2419,
                    1848,
                    2427
                ],
                "whitespace": [
                    1025
                ],
                "self.is_complex_subscript": [
                    1026
                ],
                "self.inside_brackets": [
                    1028
                ],
                "self.bracket_tracker.mark": [
                    1029
                ],
                "self.bracket_tracker": [
                    1040,
                    1249,
                    1029,
                    1200
                ],
                "self.maybe_remove_trailing_comma": [
                    1030
                ],
                "self.append_comment": [
                    1031
                ],
                "self.leaves.append": [
                    1032
                ],
                "self.bracket_tracker.depth": [
                    1040
                ],
                "self.is_comment": [
                    1041
                ],
                "self.append": [
                    1049
                ],
                "is_import": [
                    1064
                ],
                "self.is_class": [
                    1110,
                    1078
                ],
                "token.DOT": [
                    1800,
                    1769,
                    1801,
                    1896,
                    3400,
                    1808,
                    1713,
                    1746,
                    3410,
                    2837,
                    3413,
                    1079
                ],
                "first_leaf": [
                    1318,
                    1094,
                    1319,
                    1095,
                    1321,
                    1086
                ],
                "second_leaf": [
                    1091,
                    1093,
                    1096,
                    1097,
                    1098
                ],
                "first_leaf.type": [
                    1094,
                    1095
                ],
                "first_leaf.value": [
                    1094
                ],
                "token.ASYNC": [
                    1528,
                    1095
                ],
                "second_leaf.type": [
                    1097
                ],
                "second_leaf.value": [
                    1098
                ],
                "token.LPAR": [
                    2875,
                    1731,
                    2852,
                    2597,
                    1580,
                    1709,
                    2222,
                    2604,
                    2734,
                    2610,
                    2777,
                    1750,
                    1111,
                    2616,
                    1753,
                    2747,
                    2718,
                    2591
                ],
                "token.RPAR": [
                    2592,
                    2852,
                    2598,
                    2877,
                    1580,
                    1709,
                    2617,
                    2735,
                    2225,
                    2611,
                    2777,
                    3480,
                    1113,
                    2749,
                    2718
                ],
                "token.STRING": [
                    1122,
                    1796,
                    1447,
                    3016,
                    3400,
                    1914,
                    1916,
                    2909
                ],
                "value.startswith": [
                    1123
                ],
                "sys.maxsize": [
                    2328,
                    1126
                ],
                "depth_limit": [
                    1130
                ],
                "is_multiline_string": [
                    1137,
                    3494,
                    2614
                ],
                "token.COMMA": [
                    1184,
                    1697,
                    2753,
                    2758,
                    1704,
                    2921,
                    1675,
                    2362,
                    2892,
                    1584,
                    1680,
                    1876,
                    1623,
                    1721,
                    1146,
                    2365
                ],
                "closing.type": [
                    1147,
                    1155,
                    1151
                ],
                "closing": [
                    1155,
                    1169,
                    1171,
                    1147,
                    1180,
                    1151
                ],
                "token.RBRACE": [
                    3481,
                    1580,
                    1151
                ],
                "self.remove_trailing_comma": [
                    1152,
                    1164,
                    1158,
                    1191
                ],
                "comma": [
                    1156,
                    1157
                ],
                "comma.parent": [
                    1157
                ],
                "comma.parent.type": [
                    1157
                ],
                "self.is_import": [
                    1163
                ],
                "closing.bracket_depth": [
                    1169
                ],
                "commas": [
                    1185,
                    1170,
                    1187,
                    1190
                ],
                "opening": [
                    1171,
                    1173
                ],
                "closing.opening_bracket": [
                    1171
                ],
                "_opening_index": [
                    1179,
                    1172
                ],
                "bracket_depth": [
                    1184,
                    1183
                ],
                "leaf.parent": [
                    1925,
                    1926,
                    1932,
                    1933,
                    1937,
                    1945,
                    1946,
                    1186,
                    1957,
                    1958,
                    1967,
                    1597,
                    2400,
                    2791,
                    1897,
                    1898,
                    2794,
                    1905,
                    1906
                ],
                "leaf.parent.type": [
                    1186,
                    1926,
                    1958,
                    1898,
                    1933,
                    1937,
                    1906,
                    1946
                ],
                "comment.type": [
                    1434,
                    1199,
                    2643,
                    1205,
                    1210
                ],
                "comment": [
                    2692,
                    2693,
                    1430,
                    1433,
                    1434,
                    1436,
                    1443,
                    3368,
                    3369,
                    3370,
                    1199,
                    1202,
                    1205,
                    1210,
                    1211,
                    1215,
                    2638,
                    2639,
                    2643,
                    1242,
                    1244,
                    2655,
                    2657,
                    2028,
                    2031,
                    2675,
                    2680,
                    1276,
                    1277
                ],
                "self.bracket_tracker.any_open_brackets": [
                    1200
                ],
                "comment.prefix": [
                    1202,
                    1211
                ],
                "self.comments.append": [
                    1215
                ],
                "self.comments": [
                    1282,
                    1223,
                    1234,
                    1276,
                    1241,
                    1242,
                    1244,
                    1215
                ],
                "_index": [
                    3458,
                    1226,
                    1227,
                    3501,
                    3472,
                    1235
                ],
                "_leaf": [
                    1227,
                    1228
                ],
                "index": [
                    2953,
                    3346,
                    3348,
                    3349,
                    2587,
                    2973,
                    2593,
                    2594,
                    3363,
                    2342,
                    2600,
                    2345,
                    3369,
                    3372,
                    2610,
                    2618,
                    2619,
                    1234,
                    1235,
                    2388,
                    2391,
                    2016,
                    2024,
                    2665,
                    2667
                ],
                "comment_after": [
                    2213,
                    2214,
                    2345,
                    2346,
                    2160,
                    2161,
                    1234,
                    1236,
                    2391,
                    2392
                ],
                "comma_index": [
                    1240,
                    1243,
                    1244
                ],
                "i": [
                    1241,
                    1242,
                    1244
                ],
                "comment_index": [
                    1242,
                    1243
                ],
                "self.leaves.pop": [
                    1245
                ],
                "open_lsqb": [
                    1249,
                    1250,
                    1253
                ],
                "self.bracket_tracker.get_open_lsqb": [
                    1249
                ],
                "subscript_start": [
                    1253,
                    1255,
                    1256,
                    1259,
                    1260,
                    1261,
                    1262
                ],
                "open_lsqb.next_sibling": [
                    1253
                ],
                "subscript_start.type": [
                    1256,
                    1259
                ],
                "syms.subscriptlist": [
                    1608,
                    1760,
                    1259
                ],
                "child_towards": [
                    1260
                ],
                "n.type": [
                    2914,
                    2909,
                    1262,
                    2919
                ],
                "n": [
                    2657,
                    2914,
                    2915,
                    2919,
                    2920,
                    2921,
                    2923,
                    1262,
                    2908,
                    2909,
                    2910
                ],
                "subscript_start.pre_order": [
                    1262
                ],
                "first": [
                    2720,
                    2716,
                    2850,
                    3459,
                    2852,
                    3448,
                    3494,
                    3455,
                    2718,
                    1272,
                    1273,
                    2652,
                    2653,
                    2654,
                    2655
                ],
                "res": [
                    1826,
                    1821,
                    1822,
                    1273,
                    1275,
                    1820,
                    1277,
                    1278,
                    1823
                ],
                "first.prefix": [
                    1273,
                    2654,
                    2655
                ],
                "first.value": [
                    2720,
                    1273
                ],
                "previous_line": [
                    1296
                ],
                "previous_after": [
                    1297
                ],
                "previous_defs": [
                    1298
                ],
                "self._maybe_empty_lines": [
                    1306
                ],
                "self.previous_after": [
                    1307,
                    1308
                ],
                "self.previous_line": [
                    1344,
                    1376,
                    1378,
                    1379,
                    1384,
                    1356,
                    1370,
                    1360,
                    1363,
                    1364,
                    1335,
                    1336,
                    1369,
                    1338,
                    1309,
                    1343
                ],
                "max_allowed": [
                    1320,
                    1313,
                    1315
                ],
                "current_line.depth": [
                    1376,
                    1314,
                    1355,
                    1324,
                    1391,
                    1363,
                    1370
                ],
                "self.is_pyi": [
                    1315,
                    1508,
                    1516,
                    1327,
                    1499,
                    1375
                ],
                "current_line.leaves": [
                    2362,
                    2363,
                    1316,
                    1318
                ],
                "first_leaf.prefix.count": [
                    1319
                ],
                "first_leaf.prefix": [
                    1321,
                    1319
                ],
                "self.previous_defs": [
                    1355,
                    1325,
                    1326
                ],
                "self.previous_defs.pop": [
                    1326
                ],
                "current_line.is_decorator": [
                    1354,
                    1331
                ],
                "current_line.is_def": [
                    1384,
                    1331
                ],
                "current_line.is_class": [
                    1378,
                    1331
                ],
                "self._maybe_empty_lines_for_class_or_def": [
                    1332
                ],
                "self.previous_line.is_import": [
                    1336
                ],
                "current_line.is_import": [
                    1337
                ],
                "self.previous_line.depth": [
                    1376,
                    1338,
                    1363,
                    1370
                ],
                "self.previous_line.is_class": [
                    1344,
                    1378,
                    1364
                ],
                "current_line.is_triple_quoted_string": [
                    1345
                ],
                "self.previous_defs.append": [
                    1355
                ],
                "self.previous_line.is_decorator": [
                    1360
                ],
                "self.previous_line.is_def": [
                    1384,
                    1364
                ],
                "self.previous_line.is_comment": [
                    1369
                ],
                "newlines": [
                    1377,
                    1381,
                    1383,
                    1386,
                    1388,
                    1390,
                    1391,
                    1392,
                    1393,
                    2004
                ],
                "current_line.is_stub_class": [
                    1379
                ],
                "self.previous_line.is_stub_class": [
                    1379
                ],
                "remove_u_prefix": [
                    2441,
                    1407
                ],
                "allow_underscores": [
                    1408,
                    2531,
                    2532,
                    2537,
                    2539,
                    2546,
                    2549,
                    2550,
                    2559
                ],
                "self.current_line": [
                    1443,
                    1418,
                    1419,
                    1453,
                    1422,
                    1423,
                    1551,
                    1429,
                    1433,
                    1436
                ],
                "self.current_line.depth": [
                    1419
                ],
                "complete_line": [
                    1424,
                    1422,
                    1423
                ],
                "complete_line.depth": [
                    1423
                ],
                "any_open_brackets": [
                    1429,
                    1446,
                    1431
                ],
                "self.current_line.bracket_tracker.any_open_brackets": [
                    1429,
                    1551
                ],
                "self.current_line.bracket_tracker": [
                    1429,
                    1551
                ],
                "generate_comments": [
                    1430
                ],
                "self.current_line.append": [
                    1433,
                    1443,
                    1436,
                    1453
                ],
                "self.line": [
                    1441,
                    1474,
                    1538,
                    1444,
                    1511,
                    1543,
                    1513,
                    1548,
                    1517,
                    1552,
                    1522,
                    1459,
                    1493,
                    1467,
                    1437
                ],
                "normalize_prefix": [
                    2155,
                    2203,
                    1446,
                    2299
                ],
                "self.normalize_strings": [
                    1447
                ],
                "normalize_string_prefix": [
                    1448
                ],
                "self.remove_u_prefix": [
                    1448
                ],
                "normalize_string_quotes": [
                    1449
                ],
                "token.NUMBER": [
                    1450,
                    1715,
                    1796,
                    2914
                ],
                "normalize_numeric_literal": [
                    1451
                ],
                "self.allow_underscores": [
                    1451
                ],
                "visit_default": [
                    1454
                ],
                "normalize_invisible_parens": [
                    1490
                ],
                "parens": [
                    1490
                ],
                "child.type": [
                    3009,
                    2604,
                    2608,
                    2835,
                    1492,
                    2996,
                    2998,
                    1528,
                    3003,
                    2589
                ],
                "child.value": [
                    1492,
                    2621,
                    2606,
                    2997
                ],
                "keywords": [
                    1492
                ],
                "is_stub_suite": [
                    1499,
                    1516
                ],
                "is_suite_like": [
                    1506,
                    1507
                ],
                "node.parent": [
                    1506,
                    1831,
                    1516,
                    1838,
                    1839
                ],
                "node.parent.type": [
                    1506
                ],
                "is_stub_body": [
                    1508,
                    2822
                ],
                "children": [
                    2994,
                    1531,
                    1524,
                    1525
                ],
                "internal_stmt": [
                    1531,
                    1532
                ],
                "internal_stmt.children": [
                    1532
                ],
                "self.visit_stmt": [
                    1557
                ],
                "\u00d8": [
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1574,
                    1558,
                    1566
                ],
                "self.visit_assert_stmt": [
                    1559
                ],
                "self.visit_if_stmt": [
                    1560
                ],
                "self.visit_while_stmt": [
                    1563
                ],
                "self.visit_for_stmt": [
                    1564
                ],
                "self.visit_try_stmt": [
                    1565
                ],
                "self.visit_except_clause": [
                    1568
                ],
                "self.visit_with_stmt": [
                    1569
                ],
                "self.visit_funcdef": [
                    1570
                ],
                "self.visit_classdef": [
                    1571
                ],
                "self.visit_expr_stmt": [
                    1572
                ],
                "self.visit_return_stmt": [
                    1573
                ],
                "self.visit_import_from": [
                    1574
                ],
                "self.visit_async_funcdef": [
                    1575
                ],
                "self.visit_async_stmt": [
                    1575
                ],
                "self.visit_decorated": [
                    1576
                ],
                "self.visit_decorators": [
                    1576
                ],
                "IMPLICIT_TUPLE": [
                    1579,
                    2756
                ],
                "syms.testlist": [
                    1579
                ],
                "syms.exprlist": [
                    1579
                ],
                "token.LSQB": [
                    1580,
                    1718
                ],
                "token.LBRACE": [
                    1580
                ],
                "BRACKET.keys": [
                    1581
                ],
                "BRACKET.values": [
                    1582
                ],
                "ALWAYS_NO_SPACE": [
                    1584,
                    1599
                ],
                "SPACE": [
                    1761,
                    1806,
                    1650,
                    1626,
                    1814,
                    1594
                ],
                "DOUBLESPACE": [
                    1603,
                    1595
                ],
                "t": [
                    2401,
                    1602,
                    1796,
                    2404,
                    1606,
                    1800,
                    1769,
                    1804,
                    1709,
                    1713,
                    1619,
                    1718,
                    1750,
                    1688,
                    1596,
                    1726,
                    1599
                ],
                "p.type": [
                    1799,
                    1673,
                    1678,
                    1683,
                    1811,
                    1700,
                    1707,
                    1724,
                    1606,
                    1737,
                    1741,
                    1749,
                    1756,
                    2406,
                    2407,
                    1768,
                    2795,
                    1773,
                    1778,
                    2803
                ],
                "syms.subscript": [
                    1649,
                    1756,
                    1788,
                    1607
                ],
                "syms.sliceop": [
                    1609,
                    1649,
                    1811,
                    1756,
                    1789
                ],
                "prev": [
                    1670,
                    1801,
                    1675,
                    1680,
                    1808,
                    1685,
                    1689,
                    1692,
                    1695,
                    1697,
                    1702,
                    1712,
                    1721,
                    1729,
                    1734,
                    1613,
                    1614,
                    1742,
                    2644,
                    2645,
                    1753,
                    1758,
                    1769,
                    1775,
                    1780
                ],
                "leaf.prev_sibling": [
                    1613
                ],
                "prevp": [
                    1664,
                    1665,
                    1793,
                    1785,
                    1703,
                    1704,
                    1714,
                    1715,
                    1730,
                    1731,
                    1615,
                    1616,
                    1745,
                    1746,
                    1620,
                    1623,
                    1628,
                    1629,
                    1630,
                    1638,
                    1642,
                    1644,
                    1645,
                    1648,
                    1649,
                    1653,
                    1654,
                    1655,
                    1781,
                    1782,
                    1787,
                    1660,
                    1661,
                    1662,
                    1663
                ],
                "preceding_leaf": [
                    1730,
                    1703,
                    1615,
                    1745,
                    1714,
                    2644,
                    1781
                ],
                "prevp.type": [
                    1660,
                    1793,
                    1731,
                    1655,
                    1704,
                    1644,
                    1616,
                    1648,
                    1746,
                    1715,
                    1620,
                    1782,
                    1623,
                    1787,
                    1628
                ],
                "complex_subscript": [
                    1650,
                    1765,
                    1623
                ],
                "token.EQUAL": [
                    1793,
                    1734,
                    1688,
                    1692,
                    1726,
                    1628
                ],
                "prevp.parent": [
                    1661,
                    1638,
                    1662,
                    1649,
                    1653,
                    1654,
                    1785,
                    1629,
                    1630
                ],
                "prevp.parent.type": [
                    1638,
                    1630,
                    1649,
                    1654,
                    1662
                ],
                "syms.parameters": [
                    1633,
                    1673
                ],
                "prevp.prefix": [
                    1642
                ],
                "is_vararg": [
                    1890,
                    2349,
                    1645
                ],
                "syms.factor": [
                    1906,
                    1778,
                    1654
                ],
                "prevp.prev_sibling": [
                    1664,
                    1665,
                    1663
                ],
                "prevp.prev_sibling.type": [
                    1664
                ],
                "prevp.prev_sibling.value": [
                    1665
                ],
                "prev.type": [
                    1697,
                    1670,
                    1734,
                    1801,
                    1675,
                    1775,
                    1680,
                    1808,
                    1721,
                    1753,
                    2645,
                    1689,
                    1692
                ],
                "syms.tname": [
                    1689,
                    1700
                ],
                "prev.prefix": [
                    1695
                ],
                "syms.decorator": [
                    1737
                ],
                "syms.dotted_name": [
                    1898,
                    1741
                ],
                "p.parent": [
                    1760,
                    2801,
                    2798,
                    1759
                ],
                "p.parent.type": [
                    1760
                ],
                "prevp_parent": [
                    1785,
                    1786,
                    1787,
                    1793
                ],
                "prevp_parent.type": [
                    1793,
                    1787
                ],
                "syms.import_from": [
                    2885,
                    2407,
                    1799,
                    2601,
                    1898,
                    3022
                ],
                "node.prev_sibling": [
                    1820
                ],
                "res.leaves": [
                    1826
                ],
                "descendant": [
                    1837
                ],
                "ancestor": [
                    1838
                ],
                "same_prefix": [
                    1848,
                    1855
                ],
                "container": [
                    2690,
                    2691,
                    2692,
                    1864,
                    1865,
                    2696,
                    2698,
                    1849,
                    1850,
                    1851
                ],
                "parent": [
                    1858,
                    1861,
                    1864,
                    2668,
                    2670,
                    1851,
                    1852,
                    2653,
                    1855
                ],
                "container.parent": [
                    1851
                ],
                "prefix": [
                    2016,
                    2471,
                    2476,
                    2510,
                    2655,
                    2675,
                    2490,
                    2011,
                    2493,
                    2654,
                    1855
                ],
                "parent.children": [
                    1855
                ],
                "parent.type": [
                    1858
                ],
                "parent.prev_sibling": [
                    1861
                ],
                "parent.prev_sibling.type": [
                    1861
                ],
                "previous.type": [
                    1961,
                    1899,
                    1916,
                    1949
                ],
                "syms.comp_for": [
                    1926
                ],
                "syms.old_comp_for": [
                    1926
                ],
                "syms.comp_if": [
                    1933
                ],
                "syms.old_comp_if": [
                    1933
                ],
                "syms.comp_op": [
                    1946,
                    1958
                ],
                "previous.value": [
                    1962,
                    1950
                ],
                "FMT_OFF": [
                    1973,
                    2582,
                    2639
                ],
                "FMT_ON": [
                    2693,
                    1974
                ],
                "pc": [
                    2581,
                    1996,
                    1997,
                    2582
                ],
                "list_comments": [
                    2692,
                    1996,
                    2581,
                    2638
                ],
                "token.ENDMARKER": [
                    2691,
                    1996
                ],
                "pc.type": [
                    1997
                ],
                "pc.value": [
                    1997,
                    2582
                ],
                "pc.newlines": [
                    1997
                ],
                "consumed": [
                    2017,
                    2005,
                    2014,
                    2031
                ],
                "ProtoComment": [
                    2009,
                    2010,
                    2030
                ],
                "nlines": [
                    2034,
                    2031,
                    2020,
                    2015
                ],
                "prefix.split": [
                    2016
                ],
                "line.lstrip": [
                    2018
                ],
                "line.startswith": [
                    2021
                ],
                "is_endmarker": [
                    2024
                ],
                "comment_type": [
                    2025,
                    2027,
                    2031
                ],
                "make_comment": [
                    2028
                ],
                "result.append": [
                    2212,
                    2214,
                    2029,
                    2159,
                    2161
                ],
                "lru_cache": [
                    2008,
                    3075
                ],
                "content": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2046,
                    2047
                ],
                "content.rstrip": [
                    2046
                ],
                "line.is_comment": [
                    2070
                ],
                "line_str": [
                    3380,
                    3381,
                    3383,
                    3384,
                    2074,
                    2076,
                    2109
                ],
                "strip": [
                    2074,
                    3381,
                    2109,
                    2278
                ],
                "line.should_explode": [
                    2075
                ],
                "is_line_short_enough": [
                    2089,
                    2075,
                    2243
                ],
                "split_funcs": [
                    2081,
                    2083,
                    2099,
                    2101,
                    2102
                ],
                "line.is_def": [
                    2082
                ],
                "left_hand_split": [
                    2083
                ],
                "omit": [
                    2945,
                    2946,
                    2982,
                    2087,
                    2088,
                    2983,
                    2985,
                    2194,
                    2235,
                    2237
                ],
                "generate_trailers_to_omit": [
                    2087
                ],
                "right_hand_split": [
                    2088,
                    2096,
                    2237
                ],
                "line.inside_brackets": [
                    2339,
                    2375,
                    2385,
                    2098,
                    2357,
                    2327
                ],
                "delimiter_split": [
                    2099
                ],
                "standalone_comment_split": [
                    2099
                ],
                "rhs": [
                    2099,
                    2101
                ],
                "split_func": [
                    2296,
                    2298,
                    2108,
                    2102
                ],
                "l": [
                    2113,
                    2300,
                    2298,
                    2299,
                    2108,
                    2109
                ],
                "CannotSplit": [
                    2240,
                    2115,
                    2245,
                    2373,
                    2281,
                    2250,
                    2315,
                    2284,
                    2321,
                    2325,
                    2110,
                    2207
                ],
                "result.extend": [
                    2112
                ],
                "head": [
                    2210,
                    2179,
                    2217,
                    2249,
                    2157,
                    2162,
                    2163,
                    2259,
                    2133
                ],
                "line.depth": [
                    3457,
                    2179,
                    2180,
                    2181,
                    2339,
                    2375,
                    2948,
                    3499,
                    2385,
                    2133,
                    2134,
                    2135,
                    2357,
                    2327
                ],
                "body": [
                    2180,
                    2210,
                    2216,
                    2217,
                    2475,
                    2220,
                    2477,
                    2483,
                    2486,
                    2231,
                    2487,
                    2233,
                    2489,
                    2490,
                    2242,
                    2243,
                    2502,
                    2259,
                    2134,
                    2279,
                    2157,
                    2162,
                    2163
                ],
                "tail": [
                    2210,
                    2181,
                    2278,
                    2217,
                    2249,
                    2157,
                    2162,
                    2163,
                    2259,
                    2135
                ],
                "tail_leaves": [
                    2210,
                    2147,
                    2182,
                    2185,
                    2157,
                    2191,
                    2193,
                    2198,
                    2136
                ],
                "body_leaves": [
                    2210,
                    2147,
                    2183,
                    2152,
                    2154,
                    2155,
                    2157,
                    2189,
                    2191,
                    2197,
                    2199,
                    2137,
                    2202,
                    2203,
                    2143
                ],
                "head_leaves": [
                    2210,
                    2147,
                    2149,
                    2184,
                    2157,
                    2191,
                    2200,
                    2138,
                    2139,
                    2204
                ],
                "current_leaves": [
                    2147,
                    2148,
                    2149,
                    2152,
                    2185,
                    2189,
                    2191,
                    2192,
                    2193,
                    2197,
                    2139,
                    2143
                ],
                "matching_bracket": [
                    2145,
                    2140,
                    2151
                ],
                "line.leaves": [
                    3363,
                    3396,
                    2342,
                    2313,
                    2891,
                    2188,
                    2973,
                    3472,
                    2388,
                    3446,
                    3448,
                    3449,
                    3450,
                    3451,
                    2141
                ],
                "current_leaves.append": [
                    2192,
                    2148
                ],
                "line.comments_after": [
                    2213,
                    2345,
                    3369,
                    2160,
                    2391
                ],
                "bracket_split_succeeded_or_raise": [
                    2217,
                    2162
                ],
                "Collection": [
                    2169
                ],
                "closing_bracket": [
                    2981,
                    2950,
                    2215,
                    2982,
                    2986,
                    2187,
                    2225,
                    2226,
                    2258,
                    2196,
                    2235
                ],
                "tail_leaves.reverse": [
                    2198
                ],
                "body_leaves.reverse": [
                    2199
                ],
                "head_leaves.reverse": [
                    2200
                ],
                "body.should_explode": [
                    2216,
                    2220
                ],
                "opening_bracket.type": [
                    2222
                ],
                "opening_bracket.value": [
                    2886,
                    2223
                ],
                "closing_bracket.type": [
                    2225
                ],
                "closing_bracket.value": [
                    2226
                ],
                "line.is_import": [
                    2229
                ],
                "body.contains_standalone_comments": [
                    2231
                ],
                "can_omit_invisible_parens": [
                    2233
                ],
                "can_be_split": [
                    2242
                ],
                "head.contains_multiline_strings": [
                    2249
                ],
                "tail.contains_multiline_strings": [
                    2249
                ],
                "ensure_visible": [
                    2257,
                    2258
                ],
                "tail_len": [
                    2280,
                    2286,
                    2283,
                    2278
                ],
                "l.leaves": [
                    2299
                ],
                "wraps": [
                    2296
                ],
                "split_wrapper": [
                    2302
                ],
                "last_leaf": [
                    2313,
                    2891,
                    2892,
                    2319
                ],
                "bt": [
                    2855,
                    3432,
                    3433,
                    2858,
                    2317,
                    2861,
                    2319,
                    2863,
                    2353,
                    3437,
                    3438,
                    2324
                ],
                "line.bracket_tracker": [
                    3432,
                    2893,
                    2317
                ],
                "delimiter_priority": [
                    2319,
                    2354,
                    2323,
                    2324,
                    2361
                ],
                "bt.max_delimiter_priority": [
                    3437,
                    2863,
                    2319
                ],
                "bt.delimiter_count_with_priority": [
                    2324,
                    3438
                ],
                "lowest_depth": [
                    2328,
                    2348,
                    2349
                ],
                "trailing_comma_safe": [
                    2352,
                    2329,
                    2360
                ],
                "current_line.append_safe": [
                    2381,
                    2335
                ],
                "current_line.append": [
                    2386,
                    2340,
                    2365
                ],
                "append_to_line": [
                    2392,
                    2346,
                    2389,
                    2343
                ],
                "leaf_priority": [
                    2353,
                    2354
                ],
                "bt.delimiters.get": [
                    2353
                ],
                "bt.delimiters": [
                    2353,
                    3433
                ],
                "dont_increase_indentation": [
                    2369,
                    2305
                ],
                "line.contains_standalone_comments": [
                    3385,
                    2372
                ],
                "syms.import_name": [
                    2406
                ],
                "spl": [
                    2419,
                    2420,
                    2421,
                    2422
                ],
                "leaf.prefix.split": [
                    2419
                ],
                "nl_count": [
                    2424,
                    2421,
                    2423
                ],
                "count": [
                    2421
                ],
                "match": [
                    2443,
                    2437,
                    2438,
                    2439
                ],
                "re.match": [
                    2437
                ],
                "re.DOTALL": [
                    2437
                ],
                "orig_prefix": [
                    2440,
                    2439
                ],
                "match.group": [
                    2443,
                    2439
                ],
                "new_prefix": [
                    2440,
                    2442,
                    2443
                ],
                "orig_prefix.lower": [
                    2440
                ],
                "new_prefix.replace": [
                    2442
                ],
                "leaf.value.lstrip": [
                    2808,
                    2454
                ],
                "orig_quote": [
                    2465,
                    2467,
                    2474,
                    2475,
                    2507,
                    2491,
                    2490,
                    2459,
                    2462
                ],
                "new_quote": [
                    2466,
                    2499,
                    2472,
                    2473,
                    2510,
                    2486,
                    2492,
                    2460,
                    2463
                ],
                "first_quote_pos": [
                    2467,
                    2468,
                    2475,
                    2471
                ],
                "leaf.value.find": [
                    2467
                ],
                "unescaped_new_quote": [
                    2472,
                    2492,
                    2477
                ],
                "re.compile": [
                    2472,
                    2473,
                    2474,
                    3341
                ],
                "escaped_new_quote": [
                    2473,
                    2486
                ],
                "escaped_orig_quote": [
                    2474,
                    2491
                ],
                "prefix.casefold": [
                    2476,
                    2493
                ],
                "unescaped_new_quote.search": [
                    2477
                ],
                "new_body": [
                    2499,
                    2501,
                    2503,
                    2510,
                    2483,
                    2486,
                    2487,
                    2489,
                    2491,
                    2492,
                    2494
                ],
                "sub_twice": [
                    2491,
                    2492,
                    2486
                ],
                "matches": [
                    2494,
                    2495
                ],
                "re.findall": [
                    2494
                ],
                "m": [
                    2496,
                    2495
                ],
                "orig_escape_count": [
                    2504,
                    2507,
                    2502
                ],
                "body.count": [
                    2502
                ],
                "new_escape_count": [
                    2504,
                    2507,
                    2503
                ],
                "new_body.count": [
                    2503
                ],
                "text": [
                    2560,
                    2562,
                    2563,
                    2565,
                    2569,
                    2519,
                    2520,
                    2523,
                    2524,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2539,
                    2540,
                    2545,
                    2546,
                    2548
                ],
                "leaf.value.lower": [
                    2519
                ],
                "text.startswith": [
                    2520
                ],
                "text.split": [
                    2524,
                    2548
                ],
                "sign": [
                    2528,
                    2533,
                    2525
                ],
                "after.startswith": [
                    2529,
                    2526
                ],
                "format_float_or_int_string": [
                    2537,
                    2531,
                    2539
                ],
                "format_int_string": [
                    2546,
                    2532,
                    2549,
                    2550
                ],
                "text.endswith": [
                    2534
                ],
                "number": [
                    2537,
                    2535
                ],
                "suffix": [
                    2536,
                    2537
                ],
                "text.replace": [
                    2562
                ],
                "lstrip": [
                    2569
                ],
                "check_lpar": [
                    2586,
                    2588,
                    2621
                ],
                "maybe_make_parens_invisible_in_atom": [
                    2723,
                    2590
                ],
                "lpar": [
                    2594,
                    2597,
                    2600,
                    2776,
                    2777,
                    2616,
                    2745,
                    2619,
                    2747,
                    2591
                ],
                "rpar": [
                    2592,
                    2594,
                    2598,
                    2600,
                    2745,
                    2777,
                    2776,
                    2617,
                    2619,
                    2749
                ],
                "child.remove": [
                    2593,
                    2618,
                    2599
                ],
                "node.insert_child": [
                    2600,
                    2594,
                    2619,
                    2610
                ],
                "is_one_tuple": [
                    2595,
                    2710
                ],
                "node.append_child": [
                    2611
                ],
                "parens_after": [
                    2621
                ],
                "try_again": [
                    2626,
                    2627,
                    2628
                ],
                "convert_one_fmt_off_pair": [
                    2628
                ],
                "node.leaves": [
                    2636
                ],
                "previous_consumed": [
                    2680,
                    2675,
                    2637
                ],
                "comment.value": [
                    2657,
                    3370,
                    2693,
                    2639
                ],
                "ignored_nodes": [
                    2657,
                    2664,
                    2648,
                    2649,
                    2652
                ],
                "generate_ignored_nodes": [
                    2648
                ],
                "first.parent": [
                    2653
                ],
                "comment.consumed": [
                    2680,
                    2655
                ],
                "hidden_value": [
                    2656,
                    2674,
                    2659,
                    2662
                ],
                "join": [
                    2657,
                    3234,
                    3241,
                    3242,
                    3187,
                    3291
                ],
                "hidden_value.endswith": [
                    2659
                ],
                "first_idx": [
                    2663,
                    2666,
                    2667,
                    2669,
                    2671
                ],
                "ignored": [
                    2664,
                    2665
                ],
                "ignored.remove": [
                    2665
                ],
                "parent.insert_child": [
                    2670
                ],
                "comment.newlines": [
                    2675
                ],
                "container_of": [
                    2690
                ],
                "container.type": [
                    2691
                ],
                "container.prefix": [
                    2692
                ],
                "container.next_sibling": [
                    2698
                ],
                "is_empty_tuple": [
                    2709
                ],
                "is_yield": [
                    2778,
                    2711
                ],
                "max_delimiter_priority_in_atom": [
                    2712
                ],
                "last": [
                    2721,
                    2851,
                    2852,
                    3486,
                    3503,
                    3480,
                    3481,
                    3485,
                    3451,
                    2717,
                    2718,
                    3487
                ],
                "first.type": [
                    2852,
                    2718,
                    3455
                ],
                "last.type": [
                    2852,
                    3480,
                    3481,
                    3485,
                    2718
                ],
                "last.value": [
                    2721
                ],
                "gexp": [
                    2745,
                    2748,
                    2753
                ],
                "lpar.type": [
                    2777,
                    2747
                ],
                "gexp.type": [
                    2748
                ],
                "rpar.type": [
                    2777,
                    2749
                ],
                "gexp.children": [
                    2753
                ],
                "syms.yield_expr": [
                    2764
                ],
                "expr": [
                    2776,
                    2778
                ],
                "within": [
                    2803
                ],
                "syms.simple_stmt": [
                    3009,
                    2827
                ],
                "child.children": [
                    3011,
                    3015,
                    3017,
                    2836,
                    2837,
                    2999,
                    3004
                ],
                "c": [
                    2856,
                    2857,
                    2858,
                    2860
                ],
                "bt.mark": [
                    2858,
                    2861
                ],
                "c.leaves": [
                    2860
                ],
                "opening_bracket.parent": [
                    2884,
                    2885
                ],
                "opening_bracket.parent.type": [
                    2885
                ],
                "last_leaf.type": [
                    2892
                ],
                "max_priority": [
                    3437,
                    2893,
                    3438,
                    2897,
                    3442
                ],
                "line.bracket_tracker.max_delimiter_priority": [
                    2893
                ],
                "node.pre_order": [
                    2908
                ],
                "value_head": [
                    2910,
                    2911
                ],
                "n.value": [
                    2915,
                    2910
                ],
                "n.children": [
                    2920,
                    2921,
                    2923
                ],
                "ch": [
                    2928,
                    2923,
                    2924,
                    2927
                ],
                "ch.type": [
                    2924,
                    2927
                ],
                "argch": [
                    2928,
                    2929
                ],
                "ch.children": [
                    2928
                ],
                "argch.type": [
                    2929
                ],
                "length": [
                    3457,
                    2948,
                    3364,
                    3462,
                    3463,
                    3370,
                    2954,
                    2955,
                    3372,
                    3499,
                    3502,
                    3504
                ],
                "optional_brackets": [
                    2962,
                    2970,
                    2951
                ],
                "inner_brackets": [
                    2977,
                    2983,
                    2952,
                    2984,
                    2967
                ],
                "leaf_length": [
                    3458,
                    3462,
                    2953,
                    2954,
                    3501,
                    2958,
                    3502
                ],
                "enumerate_with_length": [
                    2953,
                    3458,
                    3501
                ],
                "has_inline_comment": [
                    2958,
                    2959
                ],
                "optional_brackets.discard": [
                    2962
                ],
                "inner_brackets.add": [
                    2977,
                    2967
                ],
                "optional_brackets.add": [
                    2970
                ],
                "omit.add": [
                    2982
                ],
                "omit.update": [
                    2983
                ],
                "inner_brackets.clear": [
                    2984
                ],
                "imports": [
                    3026,
                    3029,
                    2991
                ],
                "syms.import_as_name": [
                    2998
                ],
                "orig_name": [
                    3000,
                    3001,
                    3002,
                    2999
                ],
                "orig_name.type": [
                    3001
                ],
                "orig_name.value": [
                    3002
                ],
                "syms.import_as_names": [
                    3003
                ],
                "get_imports_from_children": [
                    3026,
                    3004
                ],
                "Generator": [
                    2993
                ],
                "first_child": [
                    3011,
                    3012,
                    3016,
                    3022,
                    3023,
                    3026
                ],
                "first_child.type": [
                    3016,
                    3022
                ],
                "module_name": [
                    3024,
                    3023
                ],
                "first_child.children": [
                    3026,
                    3023
                ],
                "module_name.value": [
                    3024
                ],
                "Pattern": [
                    3035,
                    3036,
                    3325,
                    3334
                ],
                "root.is_absolute": [
                    3046
                ],
                "path.iterdir": [
                    3047
                ],
                "normalized_path": [
                    3049,
                    3060,
                    3061,
                    3070
                ],
                "as_posix": [
                    3049
                ],
                "relative_to": [
                    3049
                ],
                "child.resolve": [
                    3049
                ],
                "child.is_symlink": [
                    3051
                ],
                "report.path_ignored": [
                    3052,
                    3063
                ],
                "child.is_dir": [
                    3066,
                    3059
                ],
                "exclude_match": [
                    3061,
                    3062
                ],
                "exclude.search": [
                    3061
                ],
                "exclude_match.group": [
                    3062
                ],
                "child.is_file": [
                    3069
                ],
                "include_match": [
                    3070,
                    3071
                ],
                "include.search": [
                    3070
                ],
                "srcs": [
                    3088,
                    3085
                ],
                "resolve": [
                    3088,
                    3086
                ],
                "common_base": [
                    3088,
                    3089,
                    3091,
                    3092
                ],
                "common_base.is_dir": [
                    3089
                ],
                "directory": [
                    3092,
                    3093,
                    3094,
                    3096,
                    3097,
                    3099,
                    3100,
                    3102
                ],
                "common_base.parents": [
                    3092
                ],
                "is_dir": [
                    3096,
                    3093
                ],
                "is_file": [
                    3099
                ],
                "change_count": [
                    3112
                ],
                "same_count": [
                    3113
                ],
                "failure_count": [
                    3114
                ],
                "reformatted": [
                    3170,
                    3177,
                    3119,
                    3121,
                    3166
                ],
                "self.check": [
                    3155,
                    3165,
                    3119
                ],
                "self.verbose": [
                    3120,
                    3138,
                    3124
                ],
                "self.quiet": [
                    3120
                ],
                "self.change_count": [
                    3174,
                    3175,
                    3177,
                    3122,
                    3155
                ],
                "msg": [
                    3128,
                    3129,
                    3126
                ],
                "self.same_count": [
                    3130,
                    3179,
                    3180,
                    3181
                ],
                "message": [
                    3139,
                    3134
                ],
                "self.failure_count": [
                    3182,
                    3183,
                    3152,
                    3185,
                    3135
                ],
                "unchanged": [
                    3171,
                    3181,
                    3167
                ],
                "failed": [
                    3168,
                    3185,
                    3172
                ],
                "report.append": [
                    3176,
                    3184,
                    3181
                ],
                "click.style": [
                    3177,
                    3185
                ],
                "ast.AST": [
                    3210,
                    3196,
                    3213
                ],
                "ast": [
                    3232,
                    3210,
                    3213,
                    3222,
                    3196
                ],
                "node.__class__.__name__": [
                    3219,
                    3198
                ],
                "node.__class__": [
                    3219,
                    3198
                ],
                "field": [
                    3200,
                    3202,
                    3206
                ],
                "node._fields": [
                    3200
                ],
                "item": [
                    3209,
                    3210,
                    3211
                ],
                "_v": [
                    3241,
                    3242,
                    3211,
                    3214
                ],
                "value.__class__.__name__": [
                    3217
                ],
                "value.__class__": [
                    3217
                ],
                "src_ast": [
                    3241,
                    3222
                ],
                "ast.parse": [
                    3232,
                    3222
                ],
                "major": [
                    3224,
                    3227
                ],
                "minor": [
                    3224,
                    3227
                ],
                "sys.version_info": [
                    3224
                ],
                "dst_ast": [
                    3232,
                    3242
                ],
                "log": [
                    3234,
                    3267,
                    3238,
                    3244,
                    3249,
                    3259
                ],
                "dump_to_file": [
                    3234,
                    3259,
                    3244
                ],
                "traceback.format_tb": [
                    3234
                ],
                "traceback": [
                    3234
                ],
                "exc.__traceback__": [
                    3234
                ],
                "src_ast_str": [
                    3241,
                    3243,
                    3244
                ],
                "dst_ast_str": [
                    3242,
                    3243,
                    3244
                ],
                "newdst": [
                    3257,
                    3258,
                    3261
                ],
                "tempfile.NamedTemporaryFile": [
                    3275
                ],
                "tempfile": [
                    3275
                ],
                "output": [
                    3278
                ],
                "f.name": [
                    3282
                ],
                "a_lines": [
                    3289,
                    3292
                ],
                "a.split": [
                    3289
                ],
                "a": [
                    3289
                ],
                "b_lines": [
                    3290,
                    3292
                ],
                "b.split": [
                    3290
                ],
                "b": [
                    3290
                ],
                "difflib.unified_diff": [
                    3292
                ],
                "difflib": [
                    3292
                ],
                "a_name": [
                    3292
                ],
                "b_name": [
                    3292
                ],
                "task.cancel": [
                    3312,
                    3300
                ],
                "to_cancel": [
                    3314,
                    3307,
                    3308,
                    3311
                ],
                "asyncio.Task.all_tasks": [
                    3307
                ],
                "task.done": [
                    3307
                ],
                "cf_logger": [
                    3320,
                    3321
                ],
                "logging.getLogger": [
                    3320
                ],
                "logging": [
                    3320,
                    3321
                ],
                "cf_logger.setLevel": [
                    3321
                ],
                "logging.CRITICAL": [
                    3321
                ],
                "loop.close": [
                    3322
                ],
                "regex.sub": [
                    3331
                ],
                "regex": [
                    3339,
                    3331,
                    3340,
                    3341
                ],
                "replacement": [
                    3331
                ],
                "original": [
                    3331
                ],
                "Sequence": [
                    3344,
                    3360
                ],
                "sequence": [
                    3346,
                    3347
                ],
                "element": [
                    3347,
                    3348
                ],
                "op": [
                    3363,
                    3359
                ],
                "cast": [
                    3359
                ],
                "enumerate_reversed": [
                    3361
                ],
                "call_count": [
                    3409,
                    3401,
                    3419
                ],
                "dot_count": [
                    3402,
                    3411,
                    3419
                ],
                "next.type": [
                    3413,
                    3406
                ],
                "second": [
                    3449,
                    3455
                ],
                "penultimate": [
                    3490,
                    3450
                ],
                "second.type": [
                    3455
                ],
                "remainder": [
                    3456,
                    3468,
                    3460,
                    3461
                ],
                "last.parent": [
                    3486,
                    3487
                ],
                "last.parent.type": [
                    3487
                ],
                "penultimate.type": [
                    3490
                ],
                "seen_other_brackets": [
                    3504,
                    3500,
                    3509
                ],
                "last.opening_bracket": [
                    3503
                ],
                "mode.value": [
                    3515
                ],
                "cache_file": [
                    3523,
                    3524,
                    3527,
                    3562,
                    3567
                ],
                "get_cache_file": [
                    3562,
                    3523
                ],
                "cache_file.exists": [
                    3524
                ],
                "cache_file.open": [
                    3567,
                    3527
                ],
                "fobj": [
                    3568,
                    3529,
                    3567,
                    3527
                ],
                "pickle.load": [
                    3529
                ],
                "pickle": [
                    3568,
                    3529,
                    3530
                ],
                "pickle.UnpicklingError": [
                    3530
                ],
                "stat": [
                    3538,
                    3539
                ],
                "path.stat": [
                    3538
                ],
                "stat.st_mtime": [
                    3539
                ],
                "stat.st_size": [
                    3539
                ],
                "todo": [
                    3552,
                    3555,
                    3548
                ],
                "cache.get": [
                    3551
                ],
                "todo.add": [
                    3552
                ],
                "done.add": [
                    3554
                ],
                "CACHE_DIR.exists": [
                    3564
                ],
                "CACHE_DIR.mkdir": [
                    3565
                ],
                "new_cache": [
                    3568,
                    3566
                ],
                "pickle.dump": [
                    3568
                ],
                "pickle.HIGHEST_PROTOCOL": [
                    3568
                ],
                "module": [
                    3592,
                    3590,
                    3591
                ],
                "core": [
                    3590
                ],
                "_unicodefun": [
                    3590
                ],
                "module._verify_python3_env": [
                    3592
                ],
                "patch_click": [
                    3596
                ],
                "main": [
                    3597
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/black/tests/test_black.py",
                "test_function": "test_bracket_match",
                "test_function_code": "    @patch(\"black.dump_to_file\", dump_to_stderr)\n    def test_bracket_match(self) -> None:\n        source, expected = read_data(\"bracketmatch\")\n        actual = fs(source)\n        self.assertFormatEqual(expected, actual)\n        black.assert_equivalent(source, actual)\n        black.assert_stable(source, actual, line_length=ll)",
                "test_error": "KeyError: (0, 8)",
                "full_test_error": "self = <test_black.BlackTestCase testMethod=test_bracket_match>\n\n    @patch(\"black.dump_to_file\", dump_to_stderr)\n    def test_bracket_match(self) -> None:\n        source, expected = read_data(\"bracketmatch\")\n>       actual = fs(source)\n\ntests/test_black.py:459: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nblack.py:626: in format_str\n    for current_line in lines.visit(src_node):\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1454: in visit_default\n    yield from super().visit_default(node)\nblack.py:720: in visit_default\n    yield from self.visit(child)\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1495: in visit_stmt\n    yield from self.visit(child)\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1454: in visit_default\n    yield from super().visit_default(node)\nblack.py:720: in visit_default\n    yield from self.visit(child)\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1453: in visit_default\n    self.current_line.append(node)\nblack.py:1029: in append\n    self.bracket_tracker.mark(leaf)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = BracketTracker(depth=0, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)\nleaf = Leaf(RPAR, '')\n\n    def mark(self, leaf: Leaf) -> None:\n        \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n    \n        All leaves receive an int `bracket_depth` field that stores how deep\n        within brackets a given leaf is. 0 means there are no enclosing brackets\n        that started on this line.\n    \n        If a leaf is itself a closing bracket, it receives an `opening_bracket`\n        field that it forms a pair with. This is a one-directional link to\n        avoid reference cycles.\n    \n        If a leaf is a delimiter (a token on which Black can split the line if\n        needed) and it's on depth 0, its `id()` is stored in the tracker's\n        `delimiters` field.\n        \"\"\"\n        if leaf.type == token.COMMENT:\n            return\n    \n        self.maybe_decrement_after_for_loop_variable(leaf)\n        self.maybe_decrement_after_lambda_arguments(leaf)\n        if leaf.type in CLOSING_BRACKETS:\n            self.depth -= 1\n>           opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\nE           KeyError: (0, 8)\n\nblack.py:905: KeyError",
                "traceback": "black.py:626: in format_str\n    for current_line in lines.visit(src_node):\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1454: in visit_default\n    yield from super().visit_default(node)\nblack.py:720: in visit_default\n    yield from self.visit(child)\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1495: in visit_stmt\n    yield from self.visit(child)\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1454: in visit_default\n    yield from super().visit_default(node)\nblack.py:720: in visit_default\n    yield from self.visit(child)\nblack.py:714: in visit\n    yield from getattr(self, f\"visit_{name}\", self.visit_default)(node)\nblack.py:1453: in visit_default\n    self.current_line.append(node)\nblack.py:1029: in append\n    self.bracket_tracker.mark(leaf)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = BracketTracker(depth=0, bracket_match={(3, 8): Leaf(LPAR, '(')}, delimiters={}, previous=Leaf(RSQB, ']'), _for_loop_variable=0, _lambda_arguments=0)\nleaf = Leaf(RPAR, '')\n\n    def mark(self, leaf: Leaf) -> None:\n        \"\"\"Mark `leaf` with bracket-related metadata. Keep track of delimiters.\n    \n        All leaves receive an int `bracket_depth` field that stores how deep\n        within brackets a given leaf is. 0 means there are no enclosing brackets\n        that started on this line.\n    \n        If a leaf is itself a closing bracket, it receives an `opening_bracket`\n        field that it forms a pair with. This is a one-directional link to\n        avoid reference cycles.\n    \n        If a leaf is a delimiter (a token on which Black can split the line if\n        needed) and it's on depth 0, its `id()` is stored in the tracker's\n        `delimiters` field.\n        \"\"\"\n        if leaf.type == token.COMMENT:\n            return\n    \n        self.maybe_decrement_after_for_loop_variable(leaf)\n        self.maybe_decrement_after_lambda_arguments(leaf)\n        if leaf.type in CLOSING_BRACKETS:\n            self.depth -= 1\n>           opening_bracket = self.bracket_match.pop((self.depth, leaf.type))\nE           KeyError: (0, 8)\n\nblack.py:905: KeyError",
                "test_function_decorators": [
                    "patch('black.dump_to_file', dump_to_stderr)"
                ]
            }
        ]
    }
}