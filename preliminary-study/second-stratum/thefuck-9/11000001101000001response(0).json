{
    "thefuck": [
        {
            "bugID": 9,
            "bitvector": {
                "1.3.1": 1,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.1.2": 0,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 0,
                "2.1.1": 1,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 11,
            "file_name": "thefuck/rules/git_push.py",
            "replace_code": "def get_new_command(command):\n    # If --set-upstream or -u are passed, remove it and its argument. This is\n    # because the remaining arguments are concatenated onto the command suggested\n    # by git, which includes --set-upstream and its argument\n\n    try:\n        upstream_option_index = command.script_parts.index('--set-upstream')\n    except ValueError:\n        try:\n            upstream_option_index = command.script_parts.index('-u')\n        except ValueError:\n            upstream_option_index = -1\n    \n    if upstream_option_index != -1:\n        if len(command.script_parts) > upstream_option_index + 1:\n            command.script_parts.pop(upstream_option_index)\n            command.script_parts.pop(upstream_option_index)\n    \n    stderr_lines = command.stderr.split('\\n')\n    if len(stderr_lines) >= 3:\n        push_upstream = stderr_lines[-3].strip().partition('git ')[2]\n        return replace_argument(\" \".join(command.script_parts), 'push', push_upstream)\n    \n    return \" \".join(command.script_parts)"
        }
    ]
}