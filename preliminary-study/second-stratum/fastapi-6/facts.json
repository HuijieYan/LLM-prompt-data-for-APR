{
    "1.3.2": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/fastapi/fastapi/dependencies/utils.py",
    "2.1.1": [
        "def test_python_list_param_as_form():\n    response = client.post(\n        \"/form/python-list\", data={\"items\": [\"first\", \"second\", \"third\"]}\n    )\n    assert response.status_code == 200\n    assert response.json() == [\"first\", \"second\", \"third\"]"
    ],
    "2.1.2": [
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/fastapi/tests/test_forms_from_non_typing_sequences.py"
    ],
    "2.2.1": [
        [
            "E       assert 422 == 200\nE         +422\nE         -200"
        ]
    ],
    "2.2.2": [
        [
            "def test_python_list_param_as_form():\n        response = client.post(\n            \"/form/python-list\", data={\"items\": [\"first\", \"second\", \"third\"]}\n        )\n>       assert response.status_code == 200",
            "\ntests/test_forms_from_non_typing_sequences.py:29: AssertionError"
        ]
    ],
    "3.1.1": [
        "Support repeated key=value in form data\n"
    ],
    "3.1.2": [
        "Is your feature request related to a problem\nYes.\n\nGiven some URL encoded data like this...\n\nchoices=parrot&choices=spider\n...only the last key=value wins.\n\nThis does not work like I expected:\n\nchoices: list = Form(...)\nYou can only validate against the last value.\n\nThe solution you would like\nPerhaps FastAPI should collect repeated keys in the 2-tuple list that request.form() gives and assign those values as a list to the same key before validation happens.\n"
    ]
}