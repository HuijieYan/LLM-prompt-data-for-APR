<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="boyudeMacBook-Pro.local" name="pytest" skipped="0" tests="1" time="5.007" timestamp="2023-11-15T23:01:11.108845"><testcase classname="tests.test_doc_auto_generation" file="tests/test_doc_auto_generation.py" line="348" name="test_doc_lists[docs_descriptor1]" time="0.012"><failure message="AssertionError: assert (&apos;&lt;p&gt;Base class for recurrent layers.&lt;/p&gt;\n&apos;\n &apos;&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;\n&apos;\n &apos;&lt;p&gt;return_sequences: Boolean. Whether to return the last output\n&apos;\n &apos;in the output sequence, or the full sequence.\n&apos;\n &apos;return_state: Boolean. Whether to return the last state\n&apos;\n &apos;in addition to the output.&lt;/p&gt;&apos;) == (&apos;&lt;p&gt;Base class for recurrent layers.&lt;/p&gt;\n&apos;\n &apos;&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;\n&apos;\n &apos;&lt;ul&gt;\n&apos;\n &apos;&lt;li&gt;&lt;strong&gt;return_sequences&lt;/strong&gt;: Boolean. Whether to return the last &apos;\n &apos;output\n&apos;\n &apos;    in the output sequence, or the full sequence.&lt;/li&gt;\n&apos;\n &apos;&lt;li&gt;&lt;strong&gt;return_state&lt;/strong&gt;: Boolean. Whether to return the last &apos;\n &apos;state\n&apos;\n &apos;    in addition to the output.&lt;/li&gt;\n&apos;\n &apos;&lt;/ul&gt;&apos;)
    &lt;p&gt;Base class for recurrent layers.&lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;
  - &lt;ul&gt;
  - &lt;li&gt;&lt;strong&gt;return_sequences&lt;/strong&gt;: Boolean. Whether to return the last output
  ?  ^^^^^^^^^^                 ---------
  + &lt;p&gt;return_sequences: Boolean. Whether to return the last output
  ?  ^
  -     in the output sequence, or the full sequence.&lt;/li&gt;
  ? ----                                             -----
  + in the output sequence, or the full sequence.
  - &lt;li&gt;&lt;strong&gt;return_state&lt;/strong&gt;: Boolean. Whether to return the last state
  ? ------------            ---------
  + return_state: Boolean. Whether to return the last state
  -     in addition to the output.&lt;/li&gt;
  ? ----                            ^^ -
  + in addition to the output.&lt;/p&gt;
  ?                             ^
  - &lt;/ul&gt;">docs_descriptor = {&apos;doc&apos;: &apos;Base class for recurrent layers.\n\n    # Arguments\n        return_sequences: Boolean. Whether to return the...r the full sequence.\n- __return_state__: Boolean. Whether to return the last state\n    in addition to the output.\n&apos;}

    @pytest.mark.parametrize(&apos;docs_descriptor&apos;, [
        test_doc1,
        test_doc_with_arguments_as_last_block,
    ])
    def test_doc_lists(docs_descriptor):
        docstring = autogen.process_docstring(docs_descriptor[&apos;doc&apos;])
&gt;       assert markdown(docstring) == markdown(docs_descriptor[&apos;result&apos;])
E       AssertionError: assert (&apos;&lt;p&gt;Base class for recurrent layers.&lt;/p&gt;\n&apos;\n &apos;&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;\n&apos;\n &apos;&lt;p&gt;return_sequences: Boolean. Whether to return the last output\n&apos;\n &apos;in the output sequence, or the full sequence.\n&apos;\n &apos;return_state: Boolean. Whether to return the last state\n&apos;\n &apos;in addition to the output.&lt;/p&gt;&apos;) == (&apos;&lt;p&gt;Base class for recurrent layers.&lt;/p&gt;\n&apos;\n &apos;&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;\n&apos;\n &apos;&lt;ul&gt;\n&apos;\n &apos;&lt;li&gt;&lt;strong&gt;return_sequences&lt;/strong&gt;: Boolean. Whether to return the last &apos;\n &apos;output\n&apos;\n &apos;    in the output sequence, or the full sequence.&lt;/li&gt;\n&apos;\n &apos;&lt;li&gt;&lt;strong&gt;return_state&lt;/strong&gt;: Boolean. Whether to return the last &apos;\n &apos;state\n&apos;\n &apos;    in addition to the output.&lt;/li&gt;\n&apos;\n &apos;&lt;/ul&gt;&apos;)
E           &lt;p&gt;Base class for recurrent layers.&lt;/p&gt;
E           &lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;
E         - &lt;ul&gt;
E         - &lt;li&gt;&lt;strong&gt;return_sequences&lt;/strong&gt;: Boolean. Whether to return the last output
E         ?  ^^^^^^^^^^                 ---------
E         + &lt;p&gt;return_sequences: Boolean. Whether to return the last output
E         ?  ^
E         -     in the output sequence, or the full sequence.&lt;/li&gt;
E         ? ----                                             -----
E         + in the output sequence, or the full sequence.
E         - &lt;li&gt;&lt;strong&gt;return_state&lt;/strong&gt;: Boolean. Whether to return the last state
E         ? ------------            ---------
E         + return_state: Boolean. Whether to return the last state
E         -     in addition to the output.&lt;/li&gt;
E         ? ----                            ^^ -
E         + in addition to the output.&lt;/p&gt;
E         ?                             ^
E         - &lt;/ul&gt;

tests/test_doc_auto_generation.py:355: AssertionError</failure></testcase></testsuite></testsuites>