<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="1" failures="1" hostname="boyudeMacBook-Pro.local" name="pytest" skipped="0" tests="1" time="0.330" timestamp="2023-11-15T22:15:41.591434"><testcase classname="tqdm.tests.tests_tqdm" file="tqdm/tests/tests_tqdm.py" line="774" name="test_nototal" time="0.004"><failure message="TypeError: unsupported operand type(s) for *=: &apos;NoneType&apos; and &apos;int&apos;">@with_setup(pretest, posttest)
    def test_nototal():
        &quot;&quot;&quot;Test unknown total length&quot;&quot;&quot;
        with closing(StringIO()) as our_file:
&gt;           for i in tqdm((i for i in range(10)), file=our_file, unit_scale=10):

tqdm/tests/tests_tqdm.py:779: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tqdm/_tqdm.py:927: in __init__
    self.display()
tqdm/_tqdm.py:1297: in display
    self.sp(self.__repr__() if msg is None else msg)
tqdm/_tqdm.py:966: in __repr__
    return self.format_meter(**self.format_dict)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 0, total = None, elapsed = 0, ncols = None, prefix = &apos;&apos;, ascii = True
unit = &apos;it&apos;, unit_scale = 10, rate = None, bar_format = None, postfix = None
unit_divisor = 1000, extra_kwargs = {}

    @staticmethod
    def format_meter(n, total, elapsed, ncols=None, prefix=&apos;&apos;, ascii=False,
                     unit=&apos;it&apos;, unit_scale=False, rate=None, bar_format=None,
                     postfix=None, unit_divisor=1000, **extra_kwargs):
        &quot;&quot;&quot;
        Return a string-based progress bar given some parameters
    
        Parameters
        ----------
        n  : int
            Number of finished iterations.
        total  : int
            The expected total number of iterations. If meaningless (), only
            basic progress statistics are displayed (no ETA).
        elapsed  : float
            Number of seconds passed since start.
        ncols  : int, optional
            The width of the entire output message. If specified,
            dynamically resizes the progress meter to stay within this bound
            [default: None]. The fallback meter width is 10 for the progress
            bar + no limit for the iterations counter and statistics. If 0,
            will not print any meter (only stats).
        prefix  : str, optional
            Prefix message (included in total width) [default: &apos;&apos;].
            Use as {desc} in bar_format string.
        ascii  : bool, optional
            If not set, use unicode (smooth blocks) to fill the meter
            [default: False]. The fallback is to use ASCII characters
            (1-9 #).
        unit  : str, optional
            The iteration unit [default: &apos;it&apos;].
        unit_scale  : bool or int or float, optional
            If 1 or True, the number of iterations will be printed with an
            appropriate SI metric prefix (k = 10^3, M = 10^6, etc.)
            [default: False]. If any other non-zero number, will scale
            `total` and `n`.
        rate  : float, optional
            Manual override for iteration rate.
            If [default: None], uses n/elapsed.
        bar_format  : str, optional
            Specify a custom bar string formatting. May impact performance.
            [default: &apos;{l_bar}{bar}{r_bar}&apos;], where
            l_bar=&apos;{desc}: {percentage:3.0f}%|&apos; and
            r_bar=&apos;| {n_fmt}/{total_fmt} [{elapsed}&lt;{remaining}, &apos;
              &apos;{rate_fmt}{postfix}]&apos;
            Possible vars: l_bar, bar, r_bar, n, n_fmt, total, total_fmt,
              percentage, rate, rate_fmt, rate_noinv, rate_noinv_fmt,
              rate_inv, rate_inv_fmt, elapsed, elapsed_s,
              remaining, remaining_s, desc, postfix, unit.
            Note that a trailing &quot;: &quot; is automatically removed after {desc}
            if the latter is empty.
        postfix  : *, optional
            Similar to `prefix`, but placed at the end
            (e.g. for additional stats).
            Note: postfix is usually a string (not a dict) for this method,
            and will if possible be set to postfix = &apos;, &apos; + postfix.
            However other types are supported (#382).
        unit_divisor  : float, optional
            [default: 1000], ignored unless `unit_scale` is True.
    
        Returns
        -------
        out  : Formatted meter and stats, ready to display.
        &quot;&quot;&quot;
    
        # sanity check: total
        if total and n &gt; total:
            total = None
    
        # apply custom scale if necessary
        if unit_scale and unit_scale not in (True, 1):
&gt;           total *= unit_scale
E           TypeError: unsupported operand type(s) for *=: &apos;NoneType&apos; and &apos;int&apos;

tqdm/_tqdm.py:323: TypeError</failure></testcase><testcase classname="tqdm.tests.tests_tqdm" file="tqdm/tests/tests_tqdm.py" line="774" name="test_nototal" time="0.000"><error message="test teardown failure">def posttest():
        if getattr(tqdm, &quot;_instances&quot;, False):
            n = len(tqdm._instances)
            if n:
                tqdm._instances.clear()
                raise EnvironmentError(
&gt;                   &quot;{0} `tqdm` instances still in existence POST-test&quot;.format(n))
E               OSError: 1 `tqdm` instances still in existence POST-test

tqdm/tests/tests_tqdm.py:132: OSError</error></testcase></testsuite></testsuites>