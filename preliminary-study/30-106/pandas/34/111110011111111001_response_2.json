{
    "pandas": [
        {
            "bugID": 34,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 1406,
            "file_name": "pandas/core/resample.py",
            "replace_code": "def _get_time_bins(self, ax):\n    # Existing code...\n\n    # Adjust bin edges to handle ambiguous times\n    first, last = _get_timestamp_range_edges(\n        ax.min(), ax.max(), self.freq, closed=self.closed, base=self.base\n    )\n    # Use first/last directly instead of call replace() on them\n    # because replace() will swallow the nanosecond part\n    # thus last bin maybe slightly before the end if the end contains\n    # nanosecond part and lead to `Values falls after last bin` error\n    binner = labels = date_range(\n        freq=self.freq,\n        start=first.tz_convert(ax.tz),\n        end=last.tz_convert(ax.tz),\n        tz=ax.tz,\n        ambiguous=\"infer\",\n        nonexistent=\"shift_forward\",\n    )\n\n    ax_values = ax.asi8\n    binner, bin_edges = self._adjust_bin_edges(binner, ax_values)\n\n    # General version, knowing nothing about relative frequencies\n    bins = lib.generate_bins_dt64(\n        ax_values, bin_edges, self.closed, hasnans=ax.hasnans\n    )\n\n    # Handle labeling based on closed and label parameters\n    labels = self._adjust_labels(labels, binner)\n\n    return binner, bins, labels",
            "imports": [
                "from pandas import Timestamp"
            ]
        }
    ]
}