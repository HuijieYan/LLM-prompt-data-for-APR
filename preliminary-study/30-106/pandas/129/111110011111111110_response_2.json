{
    "pandas": [
        {
            "bugID": 129,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 1302,
            "file_name": "pandas/core/arrays/datetimelike.py",
            "replace_code": "def __rsub__(self, other):\n    from pandas.core.dtypes.common import (\n        pandas_dtype,\n        is_datetime_or_timedelta_dtype,\n    )\n    from pandas.core.arrays import DatetimeArray\n    \n    if (\n        is_datetime_or_timedelta_dtype(other)\n        and is_datetime_or_timedelta_dtype(self.dtype)\n    ):\n        if not isinstance(self, DatetimeArray):\n            self = DatetimeArray(self, dtype=pandas_dtype(self.dtype))\n        if not isinstance(other, DatetimeArray):\n            other = DatetimeArray(other, dtype=pandas_dtype(other.dtype))\n        return other - self\n    raise TypeError(\n        \"cannot subtract {cls} from {typ}\".format(\n            cls=type(self).__name__, typ=type(other).__name__\n        )\n    )",
            "imports": [
                "from pandas.core.dtypes.common import (\n        pandas_dtype,\n        is_datetime_or_timedelta_dtype,\n    )",
                "from pandas.core.arrays import DatetimeArray"
            ]
        }
    ]
}