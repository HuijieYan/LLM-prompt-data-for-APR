{
    "keras": [
        {
            "bugID": 9,
            "bitvector": {
                "1.3.1": 0,
                "1.3.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.1.2": 0,
                "2.2.3": 1,
                "2.2.4": 0,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "start_line": 117,
            "file_name": "docs/autogen.py",
            "replace_code": "def process_list_block(docstring, starting_point, section_end,\n                       leading_spaces, marker):\n    import re\n    block = docstring[starting_point:section_end]\n    docstring_slice = docstring[starting_point:section_end].replace(block, marker)\n    docstring = docstring[:starting_point] + docstring_slice + docstring[section_end:]\n    \n    lines = block.split('\\n')\n    lines = [re.sub(r'^' + ' ' * leading_spaces, '', line) for line in lines]\n    \n    top_level_regex = r'^(\\s+)([^\\s\\\\\\(]+):(.*)'\n    top_level_replacement = r'\\1- __\\2__:\\3'\n    lines = [re.sub(top_level_regex, top_level_replacement, line) for line in lines]\n    \n    lines = [re.sub(r'^(\\s{4})', '', line) for line in lines]\n    \n    indent = 0\n    text_block = False\n    for i in range(len(lines)):\n        line = lines[i]\n        if line.lstrip().startswith('-'):\n            indent = len(re.match(r\"\\s*\", line).group())\n            if text_block:\n                text_block = False\n                lines[i] = '\\n' + line\n        elif len(re.match(r\"\\s*\", line).group()) < indent:\n            text_block = True\n            indent = len(re.match(r\"\\s*\", line).group())\n            lines[i] = '\\n' + line\n        else:\n            text_block = False\n            indent = 0\n    \n    block = '\\n'.join(lines)\n    return docstring, block"
        }
    ]
}