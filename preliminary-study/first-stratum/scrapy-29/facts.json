{
    "1.3.2": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/scrapy/utils/request.py",
    "1.1.1": "def request_httprepr(request):\n    \n    parsed = urlparse_cached(request)\n    path = urlunparse(('', '', parsed.path or '/', parsed.params, parsed.query, ''))\n    s = to_bytes(request.method) + b\" \" + to_bytes(path) + b\" HTTP/1.1\\r\\n\"\n    s += b\"Host: \" + to_bytes(parsed.hostname) + b\"\\r\\n\"\n    if request.headers:\n        s += request.headers.to_string() + b\"\\r\\n\"\n    s += b\"\\r\\n\"\n    s += request.body\n    return s\n",
    "1.1.2": "Return the raw HTTP representation (as bytes) of the given request.\nThis is provided only for reference since it's not the actual stream of\nbytes that will be send when performing the request (that's controlled\nby Twisted).",
    "2.2.3": {
        "start": [],
        "end": []
    },
    "2.2.4": {
        "start": [],
        "end": []
    },
    "2.1.1": [
        "    def test_request_httprepr_for_non_http_request(self):\n        # the representation is not important but it must not fail.\n        request_httprepr(Request(\"file:///tmp/foo.txt\"))\n        request_httprepr(Request(\"ftp://localhost/tmp/foo.txt\"))"
    ],
    "2.1.2": [
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/tests/test_utils_request.py"
    ],
    "2.2.1": [
        [
            "E           TypeError: to_bytes must receive a unicode, str or bytes object, got NoneType"
        ]
    ],
    "2.2.2": [
        [
            "self = <tests.test_utils_request.UtilsRequestTest testMethod=test_request_httprepr_for_non_http_request>\n\n    def test_request_httprepr_for_non_http_request(self):\n        # the representation is not important but it must not fail.\n>       request_httprepr(Request(\"file:///tmp/foo.txt\"))\n\n/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/tests/test_utils_request.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/scrapy/utils/request.py:82: in request_httprepr\n    s += b\"Host: \" + to_bytes(parsed.hostname) + b\"\\r\\n\"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = None, encoding = None, errors = 'strict'\n\n    def to_bytes(text, encoding=None, errors='strict'):\n        \"\"\"Return the binary representation of `text`. If `text`\n        is already a bytes object, return it as-is.\"\"\"\n        if isinstance(text, bytes):\n            return text\n        if not isinstance(text, six.string_types):\n>           raise TypeError('to_bytes must receive a unicode, str or bytes '\n                            'object, got %s' % type(text).__name__)",
            "\n/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/scrapy/utils/python.py:116: TypeError"
        ]
    ]
}