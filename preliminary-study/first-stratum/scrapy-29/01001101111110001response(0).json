{
    "scrapy": [
        {
            "bugID": 29,
            "bitvector": {
                "1.3.1": 0,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.1.2": 1,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 73,
            "file_name": "scrapy/utils/request.py",
            "replace_code": "def request_httprepr(request):\n    from urllib.parse import urlparse, urlunparse\n    from twisted.web.client import Request\n    \"\"\"\n    Return the raw HTTP representation (as bytes) of the given request.\n    This is provided only for reference since it's not the actual stream of\n    bytes that will be send when performing the request (that's controlled\n    by Twisted).\n    \"\"\"\n    \n    parsed = urlparse(request.url)  # Use urlparse instead of urlparse_cached\n    \n    path = urlunparse(('', '', parsed.path or '/', parsed.params, parsed.query, ''))\n    \n    s = to_bytes(request.method) + b\" \" + to_bytes(path) + b\" HTTP/1.1\\r\\n\"\n    \n    # Check if parsed URL contains a hostname before using it\n    hostname = parsed.hostname if parsed.hostname else b\"default_hostname\"\n    s += b\"Host: \" + to_bytes(hostname) + b\"\\r\\n\"\n    \n    if request.headers:\n        s += request.headers.to_string() + b\"\\r\\n\"\n    \n    s += b\"\\r\\n\"\n    s += request.body\n    return s"
        }
    ]
}