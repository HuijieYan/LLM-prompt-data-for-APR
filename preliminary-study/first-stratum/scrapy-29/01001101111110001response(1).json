{
    "scrapy": [
        {
            "bugID": 29,
            "bitvector": {
                "1.3.1": 0,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.1.2": 1,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 73,
            "file_name": "scrapy/utils/request.py",
            "replace_code": "def request_httprepr(request):\n    from twisted.web.http_headers import Headers\n    from urllib.parse import urlparse, urlunparse\n    from twisted.web.client import Request\n    \"\"\"\n    Return the raw HTTP representation (as bytes) of the given request.\n    This is provided only for reference since it's not the actual stream of\n    bytes that will be sent when performing the request (that's controlled\n    by Twisted).\n    \"\"\"\n    parsed = urlparse(request.url)\n    path = urlunparse(('', '', parsed.path or '/', parsed.params, parsed.query, ''))\n    s = request.method.encode('utf-8') + b\" \" + path.encode('utf-8') + b\" HTTP/1.1\\r\\n\"\n    host_header = b\"Host: \" + parsed.hostname.encode('utf-8') + b\"\\r\\n\"\n    if request.headers:\n        headers = request.headers.to_string().encode('utf-8') + b\"\\r\\n\"\n        s += headers\n    else:\n        headers = b\"\"\n    s += host_header + headers + b\"\\r\\n\" + request.body\n    return s"
        }
    ]
}