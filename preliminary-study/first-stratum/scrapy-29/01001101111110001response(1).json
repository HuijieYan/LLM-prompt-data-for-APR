{
    "scrapy": [
        {
            "bugID": 29,
            "bitvector": {
                "1.3.1": 0,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.1.2": 1,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 73,
            "file_name": "scrapy/utils/request.py",
            "replace_code": "def request_httprepr(request):\n    from six import ensure_binary\n    \"\"\"\n    Return the raw HTTP representation (as bytes) of the given request.\n    This is provided only for reference since it's not the actual stream of\n    bytes that will be send when performing the request (that's controlled\n    by Twisted).\n    \"\"\"\n    \n    parsed = urlparse_cached(request)\n    path = urlunparse(('', '', parsed.path or '/', parsed.params, parsed.query, ''))\n    s = ensure_binary(request.method) + b\" \" + ensure_binary(path) + b\" HTTP/1.1\\r\\n\"\n    s += b\"Host: \" + ensure_binary(parsed.hostname) + b\"\\r\\n\"\n    if request.headers:\n        s += ensure_binary(request.headers.to_string()) + b\"\\r\\n\"\n    s += b\"\\r\\n\"\n    s += request.body\n    return s"
        }
    ]
}