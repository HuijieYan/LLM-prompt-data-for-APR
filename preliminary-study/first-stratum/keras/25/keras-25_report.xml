<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="boyudeMacBook-Pro.local" name="pytest" skipped="0" tests="1" time="3.135" timestamp="2023-11-15T23:00:52.053214"><testcase classname="tests.keras.applications.imagenet_utils_test" file="tests/keras/applications/imagenet_utils_test.py" line="9" name="test_preprocess_input" time="0.001"><failure message="numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc &apos;subtract&apos; output from dtype(&apos;float64&apos;) to dtype(&apos;int32&apos;) with casting rule &apos;same_kind&apos;">def test_preprocess_input():
        # Test image batch with float and int image input
        x = np.random.uniform(0, 255, (2, 10, 10, 3))
        xint = x.astype(&apos;int32&apos;)
        assert utils.preprocess_input(x).shape == x.shape
&gt;       assert utils.preprocess_input(xint).shape == xint.shape

tests/keras/applications/imagenet_utils_test.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
keras/applications/imagenet_utils.py:178: in preprocess_input
    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([[[[147,  32, 102],
         [118,  49,  90],
         [141,  13, 167],
         [167, 229,  29],
         [214,...         [ 75, 183, 159],
         [221, 239,  33],
         [ 38, 167,  83],
         [ 66, 135,  32]]]], dtype=int32)
data_format = &apos;channels_last&apos;, mode = &apos;caffe&apos;

    def _preprocess_numpy_input(x, data_format, mode):
        &quot;&quot;&quot;Preprocesses a Numpy array encoding a batch of images.
    
        # Arguments
            x: Input array, 3D or 4D.
            data_format: Data format of the image array.
            mode: One of &quot;caffe&quot;, &quot;tf&quot; or &quot;torch&quot;.
                - caffe: will convert the images from RGB to BGR,
                    then will zero-center each color channel with
                    respect to the ImageNet dataset,
                    without scaling.
                - tf: will scale pixels between -1 and 1,
                    sample-wise.
                - torch: will scale pixels between 0 and 1 and then
                    will normalize each channel with respect to the
                    ImageNet dataset.
    
        # Returns
            Preprocessed Numpy array.
        &quot;&quot;&quot;
        if mode == &apos;tf&apos;:
            x /= 127.5
            x -= 1.
            return x
    
        if mode == &apos;torch&apos;:
            x /= 255.
            mean = [0.485, 0.456, 0.406]
            std = [0.229, 0.224, 0.225]
        else:
            if data_format == &apos;channels_first&apos;:
                # &apos;RGB&apos;-&gt;&apos;BGR&apos;
                if x.ndim == 3:
                    x = x[::-1, ...]
                else:
                    x = x[:, ::-1, ...]
            else:
                # &apos;RGB&apos;-&gt;&apos;BGR&apos;
                x = x[..., ::-1]
            mean = [103.939, 116.779, 123.68]
            std = None
    
        # Zero-center by mean pixel
        if data_format == &apos;channels_first&apos;:
            if x.ndim == 3:
                x[0, :, :] -= mean[0]
                x[1, :, :] -= mean[1]
                x[2, :, :] -= mean[2]
                if std is not None:
                    x[0, :, :] /= std[0]
                    x[1, :, :] /= std[1]
                    x[2, :, :] /= std[2]
            else:
                x[:, 0, :, :] -= mean[0]
                x[:, 1, :, :] -= mean[1]
                x[:, 2, :, :] -= mean[2]
                if std is not None:
                    x[:, 0, :, :] /= std[0]
                    x[:, 1, :, :] /= std[1]
                    x[:, 2, :, :] /= std[2]
        else:
&gt;           x[..., 0] -= mean[0]
E           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc &apos;subtract&apos; output from dtype(&apos;float64&apos;) to dtype(&apos;int32&apos;) with casting rule &apos;same_kind&apos;

keras/applications/imagenet_utils.py:82: UFuncTypeError</failure></testcase></testsuite></testsuites>