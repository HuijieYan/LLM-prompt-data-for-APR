{
    "keras": [
        {
            "bugID": 9,
            "bitvector": {
                "1.3.1": 1,
                "1.3.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.1.2": 1,
                "2.2.3": 1,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "start_line": 117,
            "file_name": "docs/autogen.py",
            "replace_code": "def process_list_block(docstring, starting_point, section_end, leading_spaces, marker):\n    import re\n    ending_point = docstring.find('\\n\\n', starting_point)\n    block = docstring[starting_point:(None if ending_point == -1 else ending_point)]\n    # Place marker for later reinjection.\n    docstring_slice = docstring[starting_point:section_end].replace(block, marker)\n    docstring = docstring[:starting_point] + docstring_slice + docstring[section_end:]\n    lines = block.split('\\n')\n    lines = [line.lstrip() for line in lines]\n    lines = [re.sub(r'^\\s*(\\S.*?):', r'- __\\1__:', line) for line in lines]\n    lines = [re.sub(r'^[-*] ', '', line) for line in lines]\n    \n    indent = 0\n    text_block = False\n    for i in range(len(lines)):\n        line = lines[i]\n        spaces = re.search(r'^\\s*', line)\n        if spaces:\n            if line.startswith('-'):\n                if len(spaces.group(0)) > indent:\n                    text_block = False\n                indent = len(spaces.group(0))\n            lines[i] = line[indent:]\n    block = '\\n'.join(lines)\n    return docstring, block"
        }
    ]
}