{
    "keras": [
        {
            "bugID": 25,
            "bitvector": {
                "1.3.1": 1,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.1.2": 0,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 0,
                "2.1.1": 1,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 21,
            "file_name": "keras/applications/imagenet_utils.py",
            "replace_code": "def _preprocess_numpy_input(x, data_format, mode='tf'):\n    import numpy as np\n    mean_tf = [103.939, 116.779, 123.68]\n    std_tf = None\n    \n    mean_torch = [0.485, 0.456, 0.406]\n    std_torch = [0.229, 0.224, 0.225]\n    \n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n    elif mode == 'torch':\n        x /= 255.\n        mean = mean_torch\n        std = std_torch\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = mean_tf\n        std = std_tf\n    \n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        for i in range(3):\n            x[i, ...] -= mean[i]\n            if std is not None:\n                x[i, ...] /= std[i]\n    else:\n        for i in range(3):\n            x[..., i] -= mean[i]\n            if std is not None:\n                x[..., i] /= std[i]\n    return x"
        }
    ]
}