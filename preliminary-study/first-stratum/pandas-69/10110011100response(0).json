{
    "pandas": [
        {
            "bugID": 69,
            "bitvector": {
                "1.3.2": 1,
                "1.2.4": 0,
                "1.2.1": 1,
                "1.3.4": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 1,
                "3.1.2": 0,
                "cot": 0
            },
            "start_line": 2110,
            "file_name": "pandas/core/indexing.py",
            "replace_code": "# file name: /Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/core/indexing.py\n\n# class signature containing the corrected function\n@Appender(IndexingMixin.at.__doc__)\nclass _AtIndexer(_ScalarAccessIndexer):\n    # ... omitted code ...\n\n\n    # this is the corrected function\n    def _convert_key(self, key, is_setter: bool = False):\n        \n        # allow arbitrary setting\n        if is_setter:\n            return list(key)\n    \n        for ax, i in zip(self.obj.axes, key):\n            if ax.dtype.is_integer:\n                if not np.issubdtype(type(i), np.integer):\n                    raise ValueError(\n                        \"At based indexing on an integer index \"\n                        \"can only have integer indexers\"\n                    )\n            else:\n                if np.issubdtype(type(i), np.integer) and not np.issubdtype(ax.dtype, np.integer):\n                    raise ValueError(\n                        \"At based indexing on an non-integer \"\n                        \"index can only have non-integer \"\n                        \"indexers\"\n                    )\n        return key"
        }
    ]
}