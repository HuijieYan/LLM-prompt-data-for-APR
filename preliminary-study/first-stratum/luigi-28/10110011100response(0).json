{
    "luigi": [
        {
            "bugID": 28,
            "bitvector": {
                "1.3.2": 1,
                "1.2.4": 0,
                "1.2.1": 1,
                "1.3.4": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 1,
                "3.1.2": 0,
                "cot": 0
            },
            "start_line": 137,
            "file_name": "luigi/contrib/hive.py",
            "replace_code": "# file name: /Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/luigi/luigi/contrib/hive.py\n\n# relative function's signature in this file\ndef run_hive_cmd(hivecmd, check_return_code=True):\n    # ... omitted code ...\n\n# relative function's signature in this file\ndef partition_spec(self, partition):\n    # ... omitted code ...\n\n# class signature containing the corrected function\nclass HiveCommandClient(HiveClient):\n    # ... omitted code ...\n\n    # this is the corrected function\n    def table_exists(self, table, database='default', partition=None):\n        if partition is None:\n            stdout = run_hive_cmd('use {0}; show tables like \"{1}\";'.format(database, table))\n\n            return stdout and table.lower() in stdout.lower()\n        else:\n            stdout = run_hive_cmd('use {0}; show tables like \"{1}{2}\";'.format(database, table, self.partition_spec(partition)))\n\n            return stdout.lower() == \"OK\""
        }
    ]
}