{
    "1.3.2": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/luigi/luigi/contrib/hive.py",
    "1.1.1": "def table_exists(self, table, database='default', partition=None):\n    if partition is None:\n        stdout = run_hive_cmd('use {0}; show tables like \"{1}\";'.format(database, table))\n\n        return stdout and table in stdout\n    else:\n        stdout = run_hive_cmd( % (database, table, self.partition_spec(partition)))\n\n        if stdout:\n            return True\n        else:\n            return False\n",
    "1.2.1": "class HiveCommandClient(HiveClient)",
    "1.2.2": "Uses `hive` invocations to find information.",
    "2.1.1": [
        "    @mock.patch(\"luigi.contrib.hive.run_hive_cmd\")\n    def test_table_exists(self, run_command):\n        run_command.return_value = \"OK\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertFalse(returned)\n\n        run_command.return_value = \"OK\\n\" \\\n                                   \"mytable\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertTrue(returned)\n\n        # Issue #896 test case insensitivity\n        returned = self.client.table_exists(\"MyTable\")\n        self.assertTrue(returned)\n\n        run_command.return_value = \"day=2013-06-28/hour=3\\n\" \\\n                                   \"day=2013-06-28/hour=4\\n\" \\\n                                   \"day=2013-07-07/hour=2\\n\"\n        self.client.partition_spec = mock.Mock(name=\"partition_spec\")\n        self.client.partition_spec.return_value = \"somepart\"\n        returned = self.client.table_exists(\"mytable\", partition={'a': 'b'})\n        self.assertTrue(returned)\n\n        run_command.return_value = \"\"\n        returned = self.client.table_exists(\"mytable\", partition={'a': 'b'})\n        self.assertFalse(returned)"
    ],
    "2.1.2": [
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/luigi/test/contrib/hive_test.py"
    ],
    "2.2.1": [
        [
            "E       AssertionError: False is not true"
        ]
    ],
    "2.2.2": [
        [
            "self = <contrib.hive_test.HiveCommandClientTest testMethod=test_table_exists>\nrun_command = <MagicMock name='run_hive_cmd' id='4490353104'>\n\n    @mock.patch(\"luigi.contrib.hive.run_hive_cmd\")\n    def test_table_exists(self, run_command):\n        run_command.return_value = \"OK\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertFalse(returned)\n    \n        run_command.return_value = \"OK\\n\" \\\n                                   \"mytable\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertTrue(returned)\n    \n        # Issue #896 test case insensitivity\n        returned = self.client.table_exists(\"MyTable\")\n>       self.assertTrue(returned)",
            "\ntest/contrib/hive_test.py:111: AssertionError"
        ]
    ]
}