{
    "pandas:86": {
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/core/reshape/pivot.py": {
            "buggy_functions": [
                {
                    "function_name": "pivot",
                    "function_code": "@Substitution(\"\\ndata : DataFrame\")\n@Appender(_shared_docs[\"pivot\"], indents=1)\ndef pivot(data: \"DataFrame\", index=None, columns=None, values=None) -> \"DataFrame\":\n    if values is None:\n        cols = [columns] if index is None else [index, columns]\n        append = index is None\n        indexed = data.set_index(cols, append=append)\n    else:\n        if index is None:\n            index = data.index\n        else:\n            index = data[index]\n        index = MultiIndex.from_arrays([index, data[columns]])\n\n        if is_list_like(values) and not isinstance(values, tuple):\n            # Exclude tuple because it is seen as a single column name\n            indexed = data._constructor(\n                data[values].values, index=index, columns=values\n            )\n        else:\n            indexed = data._constructor_sliced(data[values].values, index=index)\n    return indexed.unstack(columns)\n",
                    "decorators": [
                        "Substitution('\\ndata : DataFrame')",
                        "Appender(_shared_docs['pivot'], indents=1)"
                    ],
                    "start_line": 429,
                    "variables": {
                        "values": [
                            432,
                            449,
                            443,
                            446
                        ],
                        "cols": [
                            433,
                            435
                        ],
                        "index": [
                            449,
                            433,
                            434,
                            437,
                            438,
                            440,
                            441,
                            446
                        ],
                        "columns": [
                            433,
                            450,
                            441
                        ],
                        "append": [
                            434,
                            435
                        ],
                        "indexed": [
                            449,
                            450,
                            435,
                            445
                        ],
                        "data.set_index": [
                            435
                        ],
                        "data": [
                            449,
                            435,
                            438,
                            440,
                            441,
                            445,
                            446
                        ],
                        "data.index": [
                            438
                        ],
                        "MultiIndex.from_arrays": [
                            441
                        ],
                        "MultiIndex": [
                            441
                        ],
                        "is_list_like": [
                            443
                        ],
                        "isinstance": [
                            443
                        ],
                        "tuple": [
                            443
                        ],
                        "data._constructor": [
                            445
                        ],
                        "data._constructor_sliced": [
                            449
                        ],
                        "indexed.unstack": [
                            450
                        ],
                        "Substitution": [
                            429
                        ],
                        "Appender": [
                            430
                        ],
                        "_shared_docs": [
                            430
                        ]
                    },
                    "filtered_variables": {
                        "values": [
                            432,
                            449,
                            443,
                            446
                        ],
                        "cols": [
                            433,
                            435
                        ],
                        "index": [
                            449,
                            433,
                            434,
                            437,
                            438,
                            440,
                            441,
                            446
                        ],
                        "columns": [
                            433,
                            450,
                            441
                        ],
                        "append": [
                            434,
                            435
                        ],
                        "indexed": [
                            449,
                            450,
                            435,
                            445
                        ],
                        "data.set_index": [
                            435
                        ],
                        "data": [
                            449,
                            435,
                            438,
                            440,
                            441,
                            445,
                            446
                        ],
                        "data.index": [
                            438
                        ],
                        "MultiIndex.from_arrays": [
                            441
                        ],
                        "MultiIndex": [
                            441
                        ],
                        "is_list_like": [
                            443
                        ],
                        "isinstance": [
                            443
                        ],
                        "tuple": [
                            443
                        ],
                        "data._constructor": [
                            445
                        ],
                        "data._constructor_sliced": [
                            449
                        ],
                        "indexed.unstack": [
                            450
                        ],
                        "Substitution": [
                            429
                        ],
                        "Appender": [
                            430
                        ],
                        "_shared_docs": [
                            430
                        ]
                    },
                    "diff_line_number": 431,
                    "class_data": null
                }
            ],
            "inscope_functions": [
                "pivot_table(data, values=None, index=None, columns=None, aggfunc='mean', fill_value=None, margins=False, dropna=True, margins_name='All', observed=False) -> 'DataFrame'",
                "_add_margins(table: Union['Series', 'DataFrame'], data, values, rows, cols, aggfunc, observed=None, margins_name: str='All', fill_value=None)",
                "_compute_grand_margin(data, values, aggfunc, margins_name: str='All')",
                "_generate_marginal_results(table, data, values, rows, cols, aggfunc, observed, grand_margin, margins_name: str='All')",
                "_generate_marginal_results_without_values(table: 'DataFrame', data, rows, cols, aggfunc, observed, margins_name: str='All')",
                "_convert_by(by)",
                "pivot(data: 'DataFrame', index=None, columns=None, values=None) -> 'DataFrame'",
                "crosstab(index, columns, values=None, rownames=None, colnames=None, aggfunc=None, margins=False, margins_name: str='All', dropna: bool=True, normalize=False) -> 'DataFrame'",
                "_normalize(table, normalize, margins: bool, margins_name='All')",
                "_get_names(arrs, names, prefix: str='row')",
                "_all_key(key)",
                "_all_key()"
            ],
            "variables_in_file": {
                "TYPE_CHECKING": [
                    19
                ],
                "index": [
                    128,
                    162,
                    39,
                    560,
                    49,
                    433,
                    179,
                    434,
                    437,
                    438,
                    567,
                    563,
                    440,
                    441,
                    572,
                    446,
                    63,
                    449,
                    122,
                    126
                ],
                "_convert_by": [
                    40,
                    39
                ],
                "columns": [
                    450,
                    163,
                    40,
                    268,
                    433,
                    50,
                    179,
                    561,
                    564,
                    567,
                    441,
                    573,
                    63
                ],
                "isinstance": [
                    149,
                    289,
                    291,
                    292,
                    420,
                    42,
                    567,
                    183,
                    443,
                    705,
                    200,
                    712,
                    81,
                    222,
                    102,
                    620,
                    239,
                    244,
                    248,
                    255
                ],
                "aggfunc": [
                    390,
                    397,
                    408,
                    289,
                    290,
                    291,
                    164,
                    292,
                    293,
                    295,
                    297,
                    42,
                    45,
                    302,
                    575,
                    578,
                    325,
                    591,
                    208,
                    101,
                    234,
                    365,
                    246
                ],
                "list": [
                    98,
                    69,
                    712,
                    425,
                    42,
                    713,
                    369
                ],
                "pieces": [
                    58,
                    43,
                    61
                ],
                "List": [
                    43
                ],
                "DataFrame": [
                    43,
                    262,
                    583
                ],
                "keys": [
                    128,
                    100,
                    44,
                    80,
                    93,
                    59,
                    61,
                    63
                ],
                "func": [
                    59,
                    52,
                    45
                ],
                "table": [
                    643,
                    644,
                    134,
                    392,
                    137,
                    393,
                    139,
                    648,
                    141,
                    649,
                    143,
                    399,
                    145,
                    400,
                    147,
                    404,
                    149,
                    150,
                    405,
                    659,
                    153,
                    660,
                    663,
                    666,
                    158,
                    159,
                    671,
                    672,
                    673,
                    677,
                    678,
                    679,
                    685,
                    46,
                    174,
                    175,
                    177,
                    686,
                    688,
                    180,
                    689,
                    690,
                    183,
                    184,
                    58,
                    186,
                    698,
                    328,
                    204,
                    205,
                    593,
                    210,
                    212,
                    213,
                    653,
                    654,
                    605,
                    222,
                    350,
                    607,
                    225,
                    611,
                    612,
                    229,
                    615,
                    361,
                    362,
                    244,
                    246,
                    119,
                    122
                ],
                "pivot_table": [
                    46
                ],
                "data": [
                    390,
                    397,
                    408,
                    157,
                    287,
                    160,
                    302,
                    47,
                    435,
                    438,
                    440,
                    441,
                    571,
                    572,
                    445,
                    446,
                    573,
                    449,
                    325,
                    583,
                    76,
                    208,
                    84,
                    88,
                    89,
                    92,
                    100,
                    230,
                    365,
                    112,
                    113,
                    117,
                    246
                ],
                "values": [
                    285,
                    287,
                    161,
                    48,
                    177,
                    432,
                    443,
                    446,
                    575,
                    65,
                    449,
                    67,
                    578,
                    69,
                    325,
                    72,
                    586,
                    75,
                    590,
                    80,
                    208,
                    92,
                    222,
                    95,
                    98,
                    227,
                    231,
                    365,
                    110
                ],
                "fill_value": [
                    167,
                    51,
                    152,
                    153,
                    252
                ],
                "margins": [
                    612,
                    646,
                    627,
                    597,
                    53,
                    155
                ],
                "dropna": [
                    165,
                    102,
                    599,
                    136,
                    54,
                    183,
                    156
                ],
                "margins_name": [
                    386,
                    387,
                    653,
                    654,
                    657,
                    166,
                    684,
                    302,
                    55,
                    322,
                    200,
                    203,
                    205,
                    208,
                    213,
                    598,
                    218,
                    220,
                    225,
                    612,
                    237,
                    246
                ],
                "observed": [
                    100,
                    325,
                    390,
                    408,
                    328,
                    235,
                    365,
                    397,
                    246,
                    56,
                    350
                ],
                "pieces.append": [
                    58
                ],
                "keys.append": [
                    59
                ],
                "getattr": [
                    290,
                    59,
                    293
                ],
                "concat": [
                    685,
                    356,
                    61,
                    671
                ],
                "values_passed": [
                    65,
                    66,
                    172
                ],
                "is_list_like": [
                    67,
                    443
                ],
                "values_multi": [
                    68,
                    173,
                    71
                ],
                "i": [
                    128,
                    129,
                    704,
                    131,
                    708,
                    75,
                    76,
                    77
                ],
                "KeyError": [
                    96,
                    640,
                    624,
                    77
                ],
                "to_filter": [
                    88,
                    89,
                    85,
                    79
                ],
                "x": [
                    631,
                    80,
                    81,
                    82,
                    84,
                    85,
                    567,
                    632,
                    633
                ],
                "Grouper": [
                    81,
                    420
                ],
                "x.key": [
                    82
                ],
                "to_filter.append": [
                    85
                ],
                "TypeError": [
                    96,
                    298,
                    335,
                    273,
                    86
                ],
                "len": [
                    128,
                    385,
                    387,
                    389,
                    407,
                    179,
                    316,
                    322,
                    324,
                    710,
                    588,
                    88,
                    217,
                    218,
                    102,
                    358,
                    364,
                    369,
                    380,
                    126
                ],
                "data.columns": [
                    88,
                    92
                ],
                "key": [
                    225,
                    322,
                    353,
                    262,
                    351,
                    328,
                    329,
                    334,
                    343,
                    216,
                    218,
                    220,
                    93,
                    350,
                    95
                ],
                "values.drop": [
                    95
                ],
                "ValueError": [
                    96,
                    576,
                    641,
                    579,
                    201,
                    206,
                    656,
                    625,
                    693,
                    214,
                    696
                ],
                "grouped": [
                    100,
                    101
                ],
                "data.groupby": [
                    100,
                    397
                ],
                "agged": [
                    129,
                    101,
                    102,
                    103,
                    134,
                    114,
                    115,
                    117,
                    119,
                    126
                ],
                "grouped.agg": [
                    101
                ],
                "ABCDataFrame": [
                    102,
                    244,
                    149,
                    567,
                    183
                ],
                "agged.columns": [
                    102
                ],
                "agged.dropna": [
                    103
                ],
                "v": [
                    290,
                    293,
                    295,
                    297,
                    110,
                    112,
                    113,
                    114,
                    115,
                    117,
                    287
                ],
                "is_integer_dtype": [
                    113,
                    115
                ],
                "maybe_downcast_to_dtype": [
                    117,
                    270
                ],
                "dtype": [
                    267,
                    268,
                    117,
                    270
                ],
                "table.index.nlevels": [
                    137,
                    122
                ],
                "table.index": [
                    679,
                    648,
                    137,
                    139,
                    204,
                    205,
                    689,
                    122
                ],
                "index_names": [
                    130,
                    126
                ],
                "agged.index.names": [
                    129,
                    126
                ],
                "agged.index": [
                    129,
                    126
                ],
                "to_unstack": [
                    131,
                    133,
                    134,
                    127
                ],
                "range": [
                    128,
                    369
                ],
                "name": [
                    129,
                    130,
                    133,
                    653,
                    654
                ],
                "to_unstack.append": [
                    131,
                    133
                ],
                "agged.unstack": [
                    134
                ],
                "m": [
                    144,
                    138,
                    147,
                    141
                ],
                "MultiIndex.from_arrays": [
                    144,
                    441,
                    138
                ],
                "MultiIndex": [
                    144,
                    441,
                    138
                ],
                "cartesian_product": [
                    145,
                    139
                ],
                "table.index.levels": [
                    139
                ],
                "table.index.names": [
                    139,
                    204
                ],
                "table.reindex": [
                    147,
                    141
                ],
                "table.columns.nlevels": [
                    175,
                    143
                ],
                "table.columns": [
                    673,
                    649,
                    362,
                    175,
                    143,
                    145,
                    690,
                    212,
                    213,
                    405
                ],
                "table.columns.levels": [
                    145
                ],
                "table.columns.names": [
                    145,
                    212
                ],
                "table.sort_index": [
                    150
                ],
                "table._ensure_type": [
                    153
                ],
                "table.fillna": [
                    672,
                    644,
                    678,
                    688,
                    153
                ],
                "all": [
                    157
                ],
                "data.notna": [
                    157
                ],
                "_add_margins": [
                    158
                ],
                "table.empty": [
                    605,
                    174
                ],
                "table.T": [
                    180
                ],
                "table.dropna": [
                    184
                ],
                "Substitution": [
                    25,
                    429
                ],
                "Appender": [
                    26,
                    430
                ],
                "_shared_docs": [
                    26,
                    430
                ],
                "Union": [
                    216,
                    630,
                    190
                ],
                "str": [
                    289,
                    292,
                    197,
                    200,
                    620,
                    461,
                    378,
                    630,
                    216,
                    314,
                    283,
                    701,
                    255
                ],
                "msg": [
                    203,
                    214,
                    206
                ],
                "format": [
                    657,
                    203,
                    708
                ],
                "level": [
                    213,
                    212,
                    204,
                    205
                ],
                "table.index.get_level_values": [
                    205
                ],
                "grand_margin": [
                    256,
                    225,
                    258,
                    290,
                    293,
                    295,
                    297,
                    236,
                    300,
                    208,
                    348,
                    286
                ],
                "_compute_grand_margin": [
                    208
                ],
                "table.ndim": [
                    210
                ],
                "table.columns.get_level_values": [
                    213
                ],
                "Tuple": [
                    216
                ],
                "rows": [
                    324,
                    325,
                    358,
                    389,
                    232,
                    390,
                    246,
                    217,
                    218
                ],
                "ABCSeries": [
                    705,
                    420,
                    222,
                    567
                ],
                "table.append": [
                    225,
                    677,
                    686
                ],
                "Series": [
                    225,
                    410,
                    372,
                    353
                ],
                "marginal_result_set": [
                    228,
                    239,
                    240,
                    241,
                    245,
                    248,
                    249,
                    250
                ],
                "_generate_marginal_results": [
                    228
                ],
                "cols": [
                    385,
                    322,
                    387,
                    408,
                    233,
                    268,
                    269,
                    364,
                    365,
                    369,
                    433,
                    435,
                    246,
                    407,
                    380,
                    316
                ],
                "tuple": [
                    248,
                    443,
                    239
                ],
                "result": [
                    264,
                    393,
                    267,
                    268,
                    272,
                    400,
                    402,
                    276,
                    277,
                    278,
                    404,
                    280,
                    410,
                    412,
                    356,
                    359,
                    361,
                    241,
                    372,
                    374,
                    250,
                    252
                ],
                "margin_keys": [
                    354,
                    382,
                    362,
                    394,
                    346,
                    241,
                    401,
                    405,
                    374,
                    250,
                    412,
                    254,
                    319
                ],
                "row_margin": [
                    256,
                    258,
                    262,
                    365,
                    366,
                    410,
                    241,
                    370,
                    372,
                    374,
                    408,
                    412,
                    250,
                    252
                ],
                "_generate_marginal_results_without_values": [
                    245
                ],
                "row_margin.reindex": [
                    252
                ],
                "result.columns": [
                    372,
                    410,
                    252
                ],
                "k": [
                    256,
                    258,
                    255,
                    290,
                    292,
                    293,
                    295,
                    297,
                    254,
                    287
                ],
                "margin_dummy": [
                    272,
                    277,
                    269,
                    262
                ],
                "T": [
                    262
                ],
                "row_names": [
                    264,
                    278
                ],
                "result.index.names": [
                    264,
                    278
                ],
                "result.index": [
                    264,
                    276,
                    278
                ],
                "set": [
                    267
                ],
                "result.dtypes": [
                    267
                ],
                "result.select_dtypes": [
                    268
                ],
                "apply": [
                    408,
                    269,
                    390,
                    397
                ],
                "result.append": [
                    272,
                    277
                ],
                "result.index._to_safe_for_reshape": [
                    276
                ],
                "items": [
                    287
                ],
                "dict": [
                    291
                ],
                "data.index": [
                    438,
                    302
                ],
                "table_pieces": [
                    352,
                    353,
                    356,
                    345,
                    318
                ],
                "margin": [
                    353,
                    325,
                    390,
                    392,
                    397,
                    334,
                    399,
                    343,
                    348
                ],
                "agg": [
                    365,
                    325
                ],
                "groupby": [
                    408,
                    365,
                    325,
                    390
                ],
                "cat_axis": [
                    356,
                    326,
                    328,
                    339,
                    340,
                    349,
                    350
                ],
                "piece": [
                    352,
                    328,
                    332,
                    334,
                    338,
                    339,
                    343,
                    345,
                    350
                ],
                "table.groupby": [
                    328,
                    350
                ],
                "all_key": [
                    353,
                    354,
                    391,
                    392,
                    329,
                    394,
                    334,
                    398,
                    399,
                    401,
                    343,
                    346,
                    351
                ],
                "_all_key": [
                    391,
                    329,
                    398,
                    351
                ],
                "piece.copy": [
                    332
                ],
                "piece.set_axis": [
                    338
                ],
                "_to_safe_for_reshape": [
                    339
                ],
                "piece._get_axis": [
                    339
                ],
                "table_pieces.append": [
                    352,
                    345,
                    353
                ],
                "margin_keys.append": [
                    401,
                    346,
                    354,
                    394
                ],
                "row_margin.stack": [
                    366
                ],
                "new_order": [
                    369,
                    370
                ],
                "row_margin.index": [
                    370
                ],
                "row_margin.index.reorder_levels": [
                    370
                ],
                "np.nan": [
                    410,
                    372
                ],
                "np": [
                    410,
                    420,
                    372
                ],
                "by": [
                    416,
                    417,
                    419,
                    420,
                    421,
                    423,
                    425,
                    426
                ],
                "is_scalar": [
                    419
                ],
                "np.ndarray": [
                    420
                ],
                "Index": [
                    420
                ],
                "hasattr": [
                    421
                ],
                "append": [
                    434,
                    435
                ],
                "indexed": [
                    449,
                    450,
                    435,
                    445
                ],
                "data.set_index": [
                    435
                ],
                "data._constructor": [
                    445
                ],
                "data._constructor_sliced": [
                    449
                ],
                "indexed.unstack": [
                    450
                ],
                "bool": [
                    618,
                    630,
                    620,
                    462
                ],
                "com.maybe_make_list": [
                    560,
                    561
                ],
                "com": [
                    560,
                    561
                ],
                "rownames": [
                    595,
                    563,
                    572
                ],
                "_get_names": [
                    563,
                    564
                ],
                "colnames": [
                    564,
                    573,
                    596
                ],
                "common_idx": [
                    569,
                    566,
                    583
                ],
                "pass_objs": [
                    568,
                    569,
                    567
                ],
                "get_objs_combined_axis": [
                    569
                ],
                "Dict": [
                    571,
                    630
                ],
                "data.update": [
                    572,
                    573
                ],
                "zip": [
                    572,
                    573
                ],
                "df": [
                    583,
                    584,
                    587,
                    590,
                    593,
                    606
                ],
                "original_df_cols": [
                    584,
                    606
                ],
                "df.columns": [
                    584,
                    606
                ],
                "kwargs": [
                    600,
                    588,
                    591
                ],
                "df.pivot_table": [
                    593
                ],
                "cols_diff": [
                    606,
                    607
                ],
                "df.columns.difference": [
                    606
                ],
                "normalize": [
                    610,
                    675,
                    612,
                    681,
                    620,
                    623,
                    666,
                    669,
                    639
                ],
                "_normalize": [
                    666,
                    611
                ],
                "axis_subs": [
                    621,
                    623
                ],
                "normalizers": [
                    636,
                    630,
                    639
                ],
                "Callable": [
                    630
                ],
                "sum": [
                    631
                ],
                "x.sum": [
                    632,
                    633,
                    631
                ],
                "x.div": [
                    633
                ],
                "f": [
                    643,
                    639
                ],
                "table_index": [
                    648,
                    689,
                    679
                ],
                "table_columns": [
                    649,
                    690,
                    673
                ],
                "table.iloc": [
                    653,
                    654,
                    659,
                    660,
                    663
                ],
                "column_margin": [
                    682,
                    685,
                    659,
                    670,
                    671
                ],
                "index_margin": [
                    676,
                    677,
                    683,
                    684,
                    686,
                    660
                ],
                "column_margin.sum": [
                    682,
                    670
                ],
                "index_margin.sum": [
                    683,
                    676
                ],
                "index_margin.loc": [
                    684
                ],
                "names": [
                    706,
                    708,
                    710,
                    712,
                    713,
                    715,
                    702,
                    703
                ],
                "arr": [
                    704,
                    705,
                    706
                ],
                "enumerate": [
                    704
                ],
                "arrs": [
                    704,
                    710
                ],
                "arr.name": [
                    705,
                    706
                ],
                "names.append": [
                    706,
                    708
                ],
                "prefix": [
                    708
                ],
                "AssertionError": [
                    711
                ]
            },
            "filtered_variables_in_file": {
                "TYPE_CHECKING": [
                    19
                ],
                "index": [
                    128,
                    162,
                    39,
                    560,
                    49,
                    433,
                    179,
                    434,
                    437,
                    438,
                    567,
                    563,
                    440,
                    441,
                    572,
                    446,
                    63,
                    449,
                    122,
                    126
                ],
                "_convert_by": [
                    40,
                    39
                ],
                "columns": [
                    450,
                    163,
                    40,
                    268,
                    433,
                    50,
                    179,
                    561,
                    564,
                    567,
                    441,
                    573,
                    63
                ],
                "isinstance": [
                    149,
                    289,
                    291,
                    292,
                    420,
                    42,
                    567,
                    183,
                    443,
                    705,
                    200,
                    712,
                    81,
                    222,
                    102,
                    620,
                    239,
                    244,
                    248,
                    255
                ],
                "aggfunc": [
                    390,
                    397,
                    408,
                    289,
                    290,
                    291,
                    164,
                    292,
                    293,
                    295,
                    297,
                    42,
                    45,
                    302,
                    575,
                    578,
                    325,
                    591,
                    208,
                    101,
                    234,
                    365,
                    246
                ],
                "list": [
                    98,
                    69,
                    712,
                    425,
                    42,
                    713,
                    369
                ],
                "pieces": [
                    58,
                    43,
                    61
                ],
                "List": [
                    43
                ],
                "DataFrame": [
                    43,
                    262,
                    583
                ],
                "keys": [
                    128,
                    100,
                    44,
                    80,
                    93,
                    59,
                    61,
                    63
                ],
                "func": [
                    59,
                    52,
                    45
                ],
                "table": [
                    643,
                    644,
                    134,
                    392,
                    137,
                    393,
                    139,
                    648,
                    141,
                    649,
                    143,
                    399,
                    145,
                    400,
                    147,
                    404,
                    149,
                    150,
                    405,
                    659,
                    153,
                    660,
                    663,
                    666,
                    158,
                    159,
                    671,
                    672,
                    673,
                    677,
                    678,
                    679,
                    685,
                    46,
                    174,
                    175,
                    177,
                    686,
                    688,
                    180,
                    689,
                    690,
                    183,
                    184,
                    58,
                    186,
                    698,
                    328,
                    204,
                    205,
                    593,
                    210,
                    212,
                    213,
                    653,
                    654,
                    605,
                    222,
                    350,
                    607,
                    225,
                    611,
                    612,
                    229,
                    615,
                    361,
                    362,
                    244,
                    246,
                    119,
                    122
                ],
                "pivot_table": [
                    46
                ],
                "data": [
                    390,
                    397,
                    408,
                    157,
                    287,
                    160,
                    302,
                    47,
                    435,
                    438,
                    440,
                    441,
                    571,
                    572,
                    445,
                    446,
                    573,
                    449,
                    325,
                    583,
                    76,
                    208,
                    84,
                    88,
                    89,
                    92,
                    100,
                    230,
                    365,
                    112,
                    113,
                    117,
                    246
                ],
                "values": [
                    285,
                    287,
                    161,
                    48,
                    177,
                    432,
                    443,
                    446,
                    575,
                    65,
                    449,
                    67,
                    578,
                    69,
                    325,
                    72,
                    586,
                    75,
                    590,
                    80,
                    208,
                    92,
                    222,
                    95,
                    98,
                    227,
                    231,
                    365,
                    110
                ],
                "fill_value": [
                    167,
                    51,
                    152,
                    153,
                    252
                ],
                "margins": [
                    612,
                    646,
                    627,
                    597,
                    53,
                    155
                ],
                "dropna": [
                    165,
                    102,
                    599,
                    136,
                    54,
                    183,
                    156
                ],
                "margins_name": [
                    386,
                    387,
                    653,
                    654,
                    657,
                    166,
                    684,
                    302,
                    55,
                    322,
                    200,
                    203,
                    205,
                    208,
                    213,
                    598,
                    218,
                    220,
                    225,
                    612,
                    237,
                    246
                ],
                "observed": [
                    100,
                    325,
                    390,
                    408,
                    328,
                    235,
                    365,
                    397,
                    246,
                    56,
                    350
                ],
                "pieces.append": [
                    58
                ],
                "keys.append": [
                    59
                ],
                "getattr": [
                    290,
                    59,
                    293
                ],
                "concat": [
                    685,
                    356,
                    61,
                    671
                ],
                "values_passed": [
                    65,
                    66,
                    172
                ],
                "is_list_like": [
                    67,
                    443
                ],
                "values_multi": [
                    68,
                    173,
                    71
                ],
                "i": [
                    128,
                    129,
                    704,
                    131,
                    708,
                    75,
                    76,
                    77
                ],
                "KeyError": [
                    96,
                    640,
                    624,
                    77
                ],
                "to_filter": [
                    88,
                    89,
                    85,
                    79
                ],
                "x": [
                    631,
                    80,
                    81,
                    82,
                    84,
                    85,
                    567,
                    632,
                    633
                ],
                "Grouper": [
                    81,
                    420
                ],
                "x.key": [
                    82
                ],
                "to_filter.append": [
                    85
                ],
                "TypeError": [
                    96,
                    298,
                    335,
                    273,
                    86
                ],
                "len": [
                    128,
                    385,
                    387,
                    389,
                    407,
                    179,
                    316,
                    322,
                    324,
                    710,
                    588,
                    88,
                    217,
                    218,
                    102,
                    358,
                    364,
                    369,
                    380,
                    126
                ],
                "data.columns": [
                    88,
                    92
                ],
                "key": [
                    225,
                    322,
                    353,
                    262,
                    351,
                    328,
                    329,
                    334,
                    343,
                    216,
                    218,
                    220,
                    93,
                    350,
                    95
                ],
                "values.drop": [
                    95
                ],
                "ValueError": [
                    96,
                    576,
                    641,
                    579,
                    201,
                    206,
                    656,
                    625,
                    693,
                    214,
                    696
                ],
                "grouped": [
                    100,
                    101
                ],
                "data.groupby": [
                    100,
                    397
                ],
                "agged": [
                    129,
                    101,
                    102,
                    103,
                    134,
                    114,
                    115,
                    117,
                    119,
                    126
                ],
                "grouped.agg": [
                    101
                ],
                "ABCDataFrame": [
                    102,
                    244,
                    149,
                    567,
                    183
                ],
                "agged.columns": [
                    102
                ],
                "agged.dropna": [
                    103
                ],
                "v": [
                    290,
                    293,
                    295,
                    297,
                    110,
                    112,
                    113,
                    114,
                    115,
                    117,
                    287
                ],
                "is_integer_dtype": [
                    113,
                    115
                ],
                "maybe_downcast_to_dtype": [
                    117,
                    270
                ],
                "dtype": [
                    267,
                    268,
                    117,
                    270
                ],
                "table.index.nlevels": [
                    137,
                    122
                ],
                "table.index": [
                    679,
                    648,
                    137,
                    139,
                    204,
                    205,
                    689,
                    122
                ],
                "index_names": [
                    130,
                    126
                ],
                "agged.index.names": [
                    129,
                    126
                ],
                "agged.index": [
                    129,
                    126
                ],
                "to_unstack": [
                    131,
                    133,
                    134,
                    127
                ],
                "range": [
                    128,
                    369
                ],
                "name": [
                    129,
                    130,
                    133,
                    653,
                    654
                ],
                "to_unstack.append": [
                    131,
                    133
                ],
                "agged.unstack": [
                    134
                ],
                "m": [
                    144,
                    138,
                    147,
                    141
                ],
                "MultiIndex.from_arrays": [
                    144,
                    441,
                    138
                ],
                "MultiIndex": [
                    144,
                    441,
                    138
                ],
                "cartesian_product": [
                    145,
                    139
                ],
                "table.index.levels": [
                    139
                ],
                "table.index.names": [
                    139,
                    204
                ],
                "table.reindex": [
                    147,
                    141
                ],
                "table.columns.nlevels": [
                    175,
                    143
                ],
                "table.columns": [
                    673,
                    649,
                    362,
                    175,
                    143,
                    145,
                    690,
                    212,
                    213,
                    405
                ],
                "table.columns.levels": [
                    145
                ],
                "table.columns.names": [
                    145,
                    212
                ],
                "table.sort_index": [
                    150
                ],
                "table._ensure_type": [
                    153
                ],
                "table.fillna": [
                    672,
                    644,
                    678,
                    688,
                    153
                ],
                "all": [
                    157
                ],
                "data.notna": [
                    157
                ],
                "_add_margins": [
                    158
                ],
                "table.empty": [
                    605,
                    174
                ],
                "table.T": [
                    180
                ],
                "table.dropna": [
                    184
                ],
                "Substitution": [
                    25,
                    429
                ],
                "Appender": [
                    26,
                    430
                ],
                "_shared_docs": [
                    26,
                    430
                ],
                "Union": [
                    216,
                    630,
                    190
                ],
                "str": [
                    289,
                    292,
                    197,
                    200,
                    620,
                    461,
                    378,
                    630,
                    216,
                    314,
                    283,
                    701,
                    255
                ],
                "msg": [
                    203,
                    214,
                    206
                ],
                "format": [
                    657,
                    203,
                    708
                ],
                "level": [
                    213,
                    212,
                    204,
                    205
                ],
                "table.index.get_level_values": [
                    205
                ],
                "grand_margin": [
                    256,
                    225,
                    258,
                    290,
                    293,
                    295,
                    297,
                    236,
                    300,
                    208,
                    348,
                    286
                ],
                "_compute_grand_margin": [
                    208
                ],
                "table.ndim": [
                    210
                ],
                "table.columns.get_level_values": [
                    213
                ],
                "Tuple": [
                    216
                ],
                "rows": [
                    324,
                    325,
                    358,
                    389,
                    232,
                    390,
                    246,
                    217,
                    218
                ],
                "ABCSeries": [
                    705,
                    420,
                    222,
                    567
                ],
                "table.append": [
                    225,
                    677,
                    686
                ],
                "Series": [
                    225,
                    410,
                    372,
                    353
                ],
                "marginal_result_set": [
                    228,
                    239,
                    240,
                    241,
                    245,
                    248,
                    249,
                    250
                ],
                "_generate_marginal_results": [
                    228
                ],
                "cols": [
                    385,
                    322,
                    387,
                    408,
                    233,
                    268,
                    269,
                    364,
                    365,
                    369,
                    433,
                    435,
                    246,
                    407,
                    380,
                    316
                ],
                "tuple": [
                    248,
                    443,
                    239
                ],
                "result": [
                    264,
                    393,
                    267,
                    268,
                    272,
                    400,
                    402,
                    276,
                    277,
                    278,
                    404,
                    280,
                    410,
                    412,
                    356,
                    359,
                    361,
                    241,
                    372,
                    374,
                    250,
                    252
                ],
                "margin_keys": [
                    354,
                    382,
                    362,
                    394,
                    346,
                    241,
                    401,
                    405,
                    374,
                    250,
                    412,
                    254,
                    319
                ],
                "row_margin": [
                    256,
                    258,
                    262,
                    365,
                    366,
                    410,
                    241,
                    370,
                    372,
                    374,
                    408,
                    412,
                    250,
                    252
                ],
                "_generate_marginal_results_without_values": [
                    245
                ],
                "row_margin.reindex": [
                    252
                ],
                "result.columns": [
                    372,
                    410,
                    252
                ],
                "k": [
                    256,
                    258,
                    255,
                    290,
                    292,
                    293,
                    295,
                    297,
                    254,
                    287
                ],
                "margin_dummy": [
                    272,
                    277,
                    269,
                    262
                ],
                "T": [
                    262
                ],
                "row_names": [
                    264,
                    278
                ],
                "result.index.names": [
                    264,
                    278
                ],
                "result.index": [
                    264,
                    276,
                    278
                ],
                "set": [
                    267
                ],
                "result.dtypes": [
                    267
                ],
                "result.select_dtypes": [
                    268
                ],
                "apply": [
                    408,
                    269,
                    390,
                    397
                ],
                "result.append": [
                    272,
                    277
                ],
                "result.index._to_safe_for_reshape": [
                    276
                ],
                "items": [
                    287
                ],
                "dict": [
                    291
                ],
                "data.index": [
                    438,
                    302
                ],
                "table_pieces": [
                    352,
                    353,
                    356,
                    345,
                    318
                ],
                "margin": [
                    353,
                    325,
                    390,
                    392,
                    397,
                    334,
                    399,
                    343,
                    348
                ],
                "agg": [
                    365,
                    325
                ],
                "groupby": [
                    408,
                    365,
                    325,
                    390
                ],
                "cat_axis": [
                    356,
                    326,
                    328,
                    339,
                    340,
                    349,
                    350
                ],
                "piece": [
                    352,
                    328,
                    332,
                    334,
                    338,
                    339,
                    343,
                    345,
                    350
                ],
                "table.groupby": [
                    328,
                    350
                ],
                "all_key": [
                    353,
                    354,
                    391,
                    392,
                    329,
                    394,
                    334,
                    398,
                    399,
                    401,
                    343,
                    346,
                    351
                ],
                "_all_key": [
                    391,
                    329,
                    398,
                    351
                ],
                "piece.copy": [
                    332
                ],
                "piece.set_axis": [
                    338
                ],
                "_to_safe_for_reshape": [
                    339
                ],
                "piece._get_axis": [
                    339
                ],
                "table_pieces.append": [
                    352,
                    345,
                    353
                ],
                "margin_keys.append": [
                    401,
                    346,
                    354,
                    394
                ],
                "row_margin.stack": [
                    366
                ],
                "new_order": [
                    369,
                    370
                ],
                "row_margin.index": [
                    370
                ],
                "row_margin.index.reorder_levels": [
                    370
                ],
                "np.nan": [
                    410,
                    372
                ],
                "np": [
                    410,
                    420,
                    372
                ],
                "by": [
                    416,
                    417,
                    419,
                    420,
                    421,
                    423,
                    425,
                    426
                ],
                "is_scalar": [
                    419
                ],
                "np.ndarray": [
                    420
                ],
                "Index": [
                    420
                ],
                "hasattr": [
                    421
                ],
                "append": [
                    434,
                    435
                ],
                "indexed": [
                    449,
                    450,
                    435,
                    445
                ],
                "data.set_index": [
                    435
                ],
                "data._constructor": [
                    445
                ],
                "data._constructor_sliced": [
                    449
                ],
                "indexed.unstack": [
                    450
                ],
                "bool": [
                    618,
                    630,
                    620,
                    462
                ],
                "com.maybe_make_list": [
                    560,
                    561
                ],
                "com": [
                    560,
                    561
                ],
                "rownames": [
                    595,
                    563,
                    572
                ],
                "_get_names": [
                    563,
                    564
                ],
                "colnames": [
                    564,
                    573,
                    596
                ],
                "common_idx": [
                    569,
                    566,
                    583
                ],
                "pass_objs": [
                    568,
                    569,
                    567
                ],
                "get_objs_combined_axis": [
                    569
                ],
                "Dict": [
                    571,
                    630
                ],
                "data.update": [
                    572,
                    573
                ],
                "zip": [
                    572,
                    573
                ],
                "df": [
                    583,
                    584,
                    587,
                    590,
                    593,
                    606
                ],
                "original_df_cols": [
                    584,
                    606
                ],
                "df.columns": [
                    584,
                    606
                ],
                "kwargs": [
                    600,
                    588,
                    591
                ],
                "df.pivot_table": [
                    593
                ],
                "cols_diff": [
                    606,
                    607
                ],
                "df.columns.difference": [
                    606
                ],
                "normalize": [
                    610,
                    675,
                    612,
                    681,
                    620,
                    623,
                    666,
                    669,
                    639
                ],
                "_normalize": [
                    666,
                    611
                ],
                "axis_subs": [
                    621,
                    623
                ],
                "normalizers": [
                    636,
                    630,
                    639
                ],
                "Callable": [
                    630
                ],
                "sum": [
                    631
                ],
                "x.sum": [
                    632,
                    633,
                    631
                ],
                "x.div": [
                    633
                ],
                "f": [
                    643,
                    639
                ],
                "table_index": [
                    648,
                    689,
                    679
                ],
                "table_columns": [
                    649,
                    690,
                    673
                ],
                "table.iloc": [
                    653,
                    654,
                    659,
                    660,
                    663
                ],
                "column_margin": [
                    682,
                    685,
                    659,
                    670,
                    671
                ],
                "index_margin": [
                    676,
                    677,
                    683,
                    684,
                    686,
                    660
                ],
                "column_margin.sum": [
                    682,
                    670
                ],
                "index_margin.sum": [
                    683,
                    676
                ],
                "index_margin.loc": [
                    684
                ],
                "names": [
                    706,
                    708,
                    710,
                    712,
                    713,
                    715,
                    702,
                    703
                ],
                "arr": [
                    704,
                    705,
                    706
                ],
                "enumerate": [
                    704
                ],
                "arrs": [
                    704,
                    710
                ],
                "arr.name": [
                    705,
                    706
                ],
                "names.append": [
                    706,
                    708
                ],
                "prefix": [
                    708
                ],
                "AssertionError": [
                    711
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/tests/reshape/test_pivot.py",
                "test_function": "test_pivot_columns_none_raise_error",
                "test_function_code": "    def test_pivot_columns_none_raise_error(self):\n        # GH 30924\n        df = pd.DataFrame(\n            {\"col1\": [\"a\", \"b\", \"c\"], \"col2\": [1, 2, 3], \"col3\": [1, 2, 3]}\n        )\n        msg = r\"pivot\\(\\) missing 1 required argument: 'columns'\"\n        with pytest.raises(TypeError, match=msg):\n            df.pivot(index=\"col1\", values=\"col3\")",
                "test_error": "KeyError: None",
                "full_test_error": "self = Index(['col1', 'col2', 'col3'], dtype='object'), key = None\nmethod = None, tolerance = None\n\n    @Appender(_index_shared_docs[\"get_loc\"])\n    def get_loc(self, key, method=None, tolerance=None):\n        if method is None:\n            if tolerance is not None:\n                raise ValueError(\n                    \"tolerance argument only valid if using pad, \"\n                    \"backfill or nearest lookups\"\n                )\n            try:\n>               return self._engine.get_loc(key)\n\npandas/core/indexes/base.py:2901: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   cpdef get_loc(self, object val):\n\npandas/_libs/index.pyx:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   return self.mapping.get_item(val)\n\npandas/_libs/index.pyx:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   cpdef get_item(self, object val):\n\npandas/_libs/hashtable_class_helper.pxi:1614: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise KeyError(val)\nE   KeyError: None\n\npandas/_libs/hashtable_class_helper.pxi:1622: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pandas.tests.reshape.test_pivot.TestPivotTable object at 0x113afbf40>\n\n    def test_pivot_columns_none_raise_error(self):\n        # GH 30924\n        df = pd.DataFrame(\n            {\"col1\": [\"a\", \"b\", \"c\"], \"col2\": [1, 2, 3], \"col3\": [1, 2, 3]}\n        )\n        msg = r\"pivot\\(\\) missing 1 required argument: 'columns'\"\n        with pytest.raises(TypeError, match=msg):\n>           df.pivot(index=\"col1\", values=\"col3\")\n\npandas/tests/reshape/test_pivot.py:791: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/frame.py:5947: in pivot\n    return pivot(self, index=index, columns=columns, values=values)\npandas/core/reshape/pivot.py:441: in pivot\n    index = MultiIndex.from_arrays([index, data[columns]])\npandas/core/frame.py:2793: in __getitem__\n    indexer = self.columns.get_loc(key)\npandas/core/indexes/base.py:2903: in get_loc\n    return self._engine.get_loc(self._maybe_cast_indexer(key))\npandas/_libs/index.pyx:109: in pandas._libs.index.IndexEngine.get_loc\n    cpdef get_loc(self, object val):\npandas/_libs/index.pyx:136: in pandas._libs.index.IndexEngine.get_loc\n    return self.mapping.get_item(val)\npandas/_libs/hashtable_class_helper.pxi:1614: in pandas._libs.hashtable.PyObjectHashTable.get_item\n    cpdef get_item(self, object val):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise KeyError(val)\nE   KeyError: None\n\npandas/_libs/hashtable_class_helper.pxi:1622: KeyError",
                "traceback": ">   cpdef get_loc(self, object val):\n\npandas/_libs/index.pyx:109:",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   return self.mapping.get_item(val)\n\npandas/_libs/index.pyx:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   cpdef get_item(self, object val):\n\npandas/_libs/hashtable_class_helper.pxi:1614: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise KeyError(val)\nE   KeyError: None\n\npandas/_libs/hashtable_class_helper.pxi:1622: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pandas.tests.reshape.test_pivot.TestPivotTable object at 0x113afbf40>\n\n    def test_pivot_columns_none_raise_error(self):\n        # GH 30924\n        df = pd.DataFrame(\n            {\"col1\": [\"a\", \"b\", \"c\"], \"col2\": [1, 2, 3], \"col3\": [1, 2, 3]}\n        )\n        msg = r\"pivot\\(\\) missing 1 required argument: 'columns'\"\n        with pytest.raises(TypeError, match=msg):\n>           df.pivot(index=\"col1\", values=\"col3\")\n\npandas/tests/reshape/test_pivot.py:791: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/frame.py:5947: in pivot\n    return pivot(self, index=index, columns=columns, values=values)\npandas/core/reshape/pivot.py:441: in pivot\n    index = MultiIndex.from_arrays([index, data[columns]])\npandas/core/frame.py:2793: in __getitem__\n    indexer = self.columns.get_loc(key)\npandas/core/indexes/base.py:2903: in get_loc\n    return self._engine.get_loc(self._maybe_cast_indexer(key))\npandas/_libs/index.pyx:109: in pandas._libs.index.IndexEngine.get_loc\n    cpdef get_loc(self, object val):\npandas/_libs/index.pyx:136: in pandas._libs.index.IndexEngine.get_loc\n    return self.mapping.get_item(val)\npandas/_libs/hashtable_class_helper.pxi:1614: in pandas._libs.hashtable.PyObjectHashTable.get_item\n    cpdef get_item(self, object val):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise KeyError(val)\nE   KeyError: None\n\npandas/_libs/hashtable_class_helper.pxi:1622: KeyError",
                "test_function_decorators": []
            }
        ]
    }
}