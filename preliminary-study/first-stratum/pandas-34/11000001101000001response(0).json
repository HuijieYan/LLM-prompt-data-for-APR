{
    "pandas": [
        {
            "bugID": 34,
            "bitvector": {
                "1.3.1": 1,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.1.2": 0,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 0,
                "2.1.1": 1,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 1406,
            "file_name": "pandas/core/resample.py",
            "replace_code": "def _get_time_bins(self, ax):\n\n    if not isinstance(ax, pd.DatetimeIndex):\n        raise TypeError(\n            \"axis must be a DatetimeIndex, but got an instance of {0}\".format(\n                type(ax).__name__\n            )\n        )\n    \n    if len(ax) == 0:\n        binner = labels = pd.DatetimeIndex([], freq=self.freq, name=ax.name)\n        return binner, [], labels\n    \n    first, last = ax.min(), ax.max()\n    binner = labels = pd.date_range(\n        start=first,\n        end=last,\n        freq=self.freq,\n        tz=ax.tz,\n        name=ax.name,\n        ambiguous=\"infer\",\n        nonexistent=\"shift_forward\",\n    )\n    \n    ax_values = ax.to_numpy()\n    binner, bin_edges = self._adjust_bin_edges(binner, ax_values)\n    \n    bins = np.digitize(ax_values, bin_edges, right=(self.closed == \"right\"))\n    \n    if self.closed == \"right\":\n        labels = binner\n        if self.label == \"right\":\n            labels = labels[1:]\n    elif self.label == \"right\":\n        labels = labels[1:]\n    \n    if ax.hasnans:\n        binner = binner.insert(0, pd.NaT)\n        labels = labels.insert(0, pd.NaT)\n    \n    if len(bins) < len(labels):\n        labels = labels[: len(bins)]\n    \n    return binner, bins, labels"
        }
    ]
}