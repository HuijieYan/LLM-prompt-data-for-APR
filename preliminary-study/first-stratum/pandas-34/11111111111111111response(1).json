{
    "pandas": [
        {
            "bugID": 34,
            "bitvector": {
                "1.3.1": 1,
                "1.3.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.1.2": 1,
                "2.2.3": 1,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "start_line": 1406,
            "file_name": "pandas/core/resample.py",
            "replace_code": "def _get_time_bins(self, ax):\n\n    if not isinstance(ax, DatetimeIndex):\n        raise TypeError(\n            \"axis must be a DatetimeIndex, but got \"\n            f\"an instance of {type(ax).__name__}\"\n        )\n    \n    if len(ax) == 0:\n        binner = labels = DatetimeIndex(data=[], freq=self.freq, name=ax.name)\n        return binner, [], labels\n    \n    # Calculate the bin edges, considering the ambiguous times\n    first = ax[0].floor('D')  # Adjust for ambiguous times\n    last = ax[-1].ceil('D')  # Adjust for ambiguous times\n    \n    binner = labels = date_range(\n        freq=self.freq,\n        start=first,\n        end=last,\n        tz=ax.tz,\n        name=ax.name,\n        ambiguous=\"infer\",\n        nonexistent=\"shift_forward\",\n    )\n    \n    ax_values = ax.asi8\n    binner, _ = self._adjust_bin_edges(binner, ax_values)\n    \n    # Calculate the bins using the adjusted bin edges\n    bins = lib.generate_bins_dt64(ax_values, binner.asi8, self.closed, hasnans=ax.hasnans)\n    \n    # Handle labels for 'right' and 'hasnans' cases\n    # ...\n    \n    return binner, bins, labels"
        }
    ]
}