{
    "scrapy:28": {
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/scrapy/dupefilters.py": {
            "buggy_functions": [
                {
                    "function_name": "__init__",
                    "function_code": "def __init__(self, path=None, debug=False):\n    self.file = None\n    self.fingerprints = set()\n    self.logdupes = True\n    self.debug = debug\n    self.logger = logging.getLogger(__name__)\n    if path:\n        self.file = open(os.path.join(path, 'requests.seen'), 'a+')\n        self.fingerprints.update(x.rstrip() for x in self.file)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 31,
                    "variables": {
                        "self.file": [
                            32,
                            38,
                            39
                        ],
                        "self": [
                            32,
                            33,
                            34,
                            35,
                            36,
                            38,
                            39
                        ],
                        "self.fingerprints": [
                            33,
                            39
                        ],
                        "set": [
                            33
                        ],
                        "self.logdupes": [
                            34
                        ],
                        "self.debug": [
                            35
                        ],
                        "debug": [
                            35
                        ],
                        "self.logger": [
                            36
                        ],
                        "logging.getLogger": [
                            36
                        ],
                        "logging": [
                            36
                        ],
                        "__name__": [
                            36
                        ],
                        "path": [
                            37,
                            38
                        ],
                        "open": [
                            38
                        ],
                        "os.path.join": [
                            38
                        ],
                        "os.path": [
                            38
                        ],
                        "os": [
                            38
                        ],
                        "self.fingerprints.update": [
                            39
                        ],
                        "x.rstrip": [
                            39
                        ],
                        "x": [
                            39
                        ]
                    },
                    "filtered_variables": {
                        "self.file": [
                            32,
                            38,
                            39
                        ],
                        "self": [
                            32,
                            33,
                            34,
                            35,
                            36,
                            38,
                            39
                        ],
                        "self.fingerprints": [
                            33,
                            39
                        ],
                        "self.logdupes": [
                            34
                        ],
                        "self.debug": [
                            35
                        ],
                        "debug": [
                            35
                        ],
                        "self.logger": [
                            36
                        ],
                        "logging.getLogger": [
                            36
                        ],
                        "logging": [
                            36
                        ],
                        "path": [
                            37,
                            38
                        ],
                        "os.path.join": [
                            38
                        ],
                        "os.path": [
                            38
                        ],
                        "os": [
                            38
                        ],
                        "self.fingerprints.update": [
                            39
                        ],
                        "x.rstrip": [
                            39
                        ],
                        "x": [
                            39
                        ]
                    },
                    "diff_line_number": 38,
                    "class_data": {
                        "signature": "class RFPDupeFilter(BaseDupeFilter)",
                        "docstring": "Request Fingerprint duplicates filter",
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, path=None, debug=False):\n    self.file = None\n    self.fingerprints = set()\n    self.logdupes = True\n    self.debug = debug\n    self.logger = logging.getLogger(__name__)\n    if path:\n        self.file = open(os.path.join(path, 'requests.seen'), 'a+')\n        self.fingerprints.update((x.rstrip() for x in self.file))",
                            "@classmethod\ndef from_settings(cls, settings):\n    debug = settings.getbool('DUPEFILTER_DEBUG')\n    return cls(job_dir(settings), debug)",
                            "def request_seen(self, request):\n    fp = self.request_fingerprint(request)\n    if fp in self.fingerprints:\n        return True\n    self.fingerprints.add(fp)\n    if self.file:\n        self.file.write(fp + os.linesep)",
                            "def request_fingerprint(self, request):\n    return request_fingerprint(request)",
                            "def close(self, reason):\n    if self.file:\n        self.file.close()",
                            "def log(self, request, spider):\n    if self.debug:\n        msg = 'Filtered duplicate request: %(request)s'\n        self.logger.debug(msg, {'request': request}, extra={'spider': spider})\n    elif self.logdupes:\n        msg = 'Filtered duplicate request: %(request)s - no more duplicates will be shown (see DUPEFILTER_DEBUG to show all duplicates)'\n        self.logger.debug(msg, {'request': request}, extra={'spider': spider})\n        self.logdupes = False\n    spider.crawler.stats.inc_value('dupefilter/filtered', spider=spider)"
                        ],
                        "constructor_variables": [
                            "debug",
                            "fingerprints",
                            "logdupes",
                            "file",
                            "logger"
                        ],
                        "class_level_variables": [],
                        "class_decorators": []
                    },
                    "variable_values": [
                        [
                            {
                                "self.file": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self": {
                                    "variable_value": "<scrapy.dupefilters.RFPDupeFilter object at 0x10d0904f0>",
                                    "variable_type": "RFPDupeFilter"
                                },
                                "self.fingerprints": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self.logdupes": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self.debug": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "debug": {
                                    "variable_value": "False",
                                    "variable_type": "bool"
                                },
                                "self.logger": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "logging.getLogger": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "logging": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "path": {
                                    "variable_value": "/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmp5fgp_gza",
                                    "variable_type": "str"
                                },
                                "os.path.join": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "os.path": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "os": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.fingerprints.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "x.rstrip": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "x": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "self.file": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self": {
                                    "variable_value": "<scrapy.dupefilters.RFPDupeFilter object at 0x10c09e430>",
                                    "variable_type": "RFPDupeFilter"
                                },
                                "self.fingerprints": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self.logdupes": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self.debug": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "debug": {
                                    "variable_value": "False",
                                    "variable_type": "bool"
                                },
                                "self.logger": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "logging.getLogger": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "logging": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "path": {
                                    "variable_value": "/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmp61a8s9i1",
                                    "variable_type": "str"
                                },
                                "os.path.join": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "os.path": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "os": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "self.file.seek": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "self.fingerprints.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType"
                                },
                                "x.rstrip": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                },
                                "x": {
                                    "variable_value": "None",
                                    "variable_type": "None"
                                }
                            },
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [],
            "variables_in_file": {
                "object": [
                    9
                ],
                "cls": [
                    44,
                    13
                ],
                "classmethod": [
                    41,
                    11
                ],
                "BaseDupeFilter": [
                    28
                ],
                "self.file": [
                    32,
                    38,
                    39,
                    51,
                    52,
                    58,
                    59
                ],
                "self": [
                    32,
                    33,
                    34,
                    35,
                    36,
                    38,
                    39,
                    47,
                    48,
                    50,
                    51,
                    52,
                    58,
                    59,
                    62,
                    64,
                    65,
                    69,
                    70
                ],
                "self.fingerprints": [
                    48,
                    33,
                    50,
                    39
                ],
                "set": [
                    33
                ],
                "self.logdupes": [
                    65,
                    34,
                    70
                ],
                "self.debug": [
                    35,
                    62
                ],
                "debug": [
                    43,
                    35,
                    44
                ],
                "self.logger": [
                    64,
                    36,
                    69
                ],
                "logging.getLogger": [
                    36
                ],
                "logging": [
                    36
                ],
                "__name__": [
                    36
                ],
                "path": [
                    37,
                    38
                ],
                "open": [
                    38
                ],
                "os.path.join": [
                    38
                ],
                "os.path": [
                    38
                ],
                "os": [
                    52,
                    38
                ],
                "self.fingerprints.update": [
                    39
                ],
                "x.rstrip": [
                    39
                ],
                "x": [
                    39
                ],
                "settings.getbool": [
                    43
                ],
                "settings": [
                    43,
                    44
                ],
                "job_dir": [
                    44
                ],
                "fp": [
                    48,
                    50,
                    52,
                    47
                ],
                "self.request_fingerprint": [
                    47
                ],
                "request": [
                    64,
                    69,
                    55,
                    47
                ],
                "self.fingerprints.add": [
                    50
                ],
                "self.file.write": [
                    52
                ],
                "os.linesep": [
                    52
                ],
                "request_fingerprint": [
                    55
                ],
                "self.file.close": [
                    59
                ],
                "msg": [
                    64,
                    66,
                    69,
                    63
                ],
                "self.logger.debug": [
                    64,
                    69
                ],
                "spider": [
                    64,
                    72,
                    69
                ],
                "spider.crawler.stats.inc_value": [
                    72
                ],
                "spider.crawler.stats": [
                    72
                ],
                "spider.crawler": [
                    72
                ]
            },
            "filtered_variables_in_file": {
                "cls": [
                    44,
                    13
                ],
                "BaseDupeFilter": [
                    28
                ],
                "self.file": [
                    32,
                    38,
                    39,
                    51,
                    52,
                    58,
                    59
                ],
                "self": [
                    32,
                    33,
                    34,
                    35,
                    36,
                    38,
                    39,
                    47,
                    48,
                    50,
                    51,
                    52,
                    58,
                    59,
                    62,
                    64,
                    65,
                    69,
                    70
                ],
                "self.fingerprints": [
                    48,
                    33,
                    50,
                    39
                ],
                "self.logdupes": [
                    65,
                    34,
                    70
                ],
                "self.debug": [
                    35,
                    62
                ],
                "debug": [
                    43,
                    35,
                    44
                ],
                "self.logger": [
                    64,
                    36,
                    69
                ],
                "logging.getLogger": [
                    36
                ],
                "logging": [
                    36
                ],
                "path": [
                    37,
                    38
                ],
                "os.path.join": [
                    38
                ],
                "os.path": [
                    38
                ],
                "os": [
                    52,
                    38
                ],
                "self.fingerprints.update": [
                    39
                ],
                "x.rstrip": [
                    39
                ],
                "x": [
                    39
                ],
                "settings.getbool": [
                    43
                ],
                "settings": [
                    43,
                    44
                ],
                "job_dir": [
                    44
                ],
                "fp": [
                    48,
                    50,
                    52,
                    47
                ],
                "self.request_fingerprint": [
                    47
                ],
                "request": [
                    64,
                    69,
                    55,
                    47
                ],
                "self.fingerprints.add": [
                    50
                ],
                "self.file.write": [
                    52
                ],
                "os.linesep": [
                    52
                ],
                "request_fingerprint": [
                    55
                ],
                "self.file.close": [
                    59
                ],
                "msg": [
                    64,
                    66,
                    69,
                    63
                ],
                "self.logger.debug": [
                    64,
                    69
                ],
                "spider": [
                    64,
                    72,
                    69
                ],
                "spider.crawler.stats.inc_value": [
                    72
                ],
                "spider.crawler.stats": [
                    72
                ],
                "spider.crawler": [
                    72
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/tests/test_dupefilters.py",
                "test_function": "test_dupefilter_path",
                "test_function_code": "    def test_dupefilter_path(self):\n        r1 = Request('http://scrapytest.org/1')\n        r2 = Request('http://scrapytest.org/2')\n\n        path = tempfile.mkdtemp()\n        try:\n            df = RFPDupeFilter(path)\n            df.open()\n            assert not df.request_seen(r1)\n            assert df.request_seen(r1)\n            df.close('finished')\n\n            df2 = RFPDupeFilter(path)\n            df2.open()\n            assert df2.request_seen(r1)\n            assert not df2.request_seen(r2)\n            assert df2.request_seen(r2)\n            df2.close('finished')\n        finally:\n            shutil.rmtree(path)",
                "test_error": "AssertionError",
                "full_test_error": "self = <tests.test_dupefilters.RFPDupeFilterTest testMethod=test_dupefilter_path>\n\n    def test_dupefilter_path(self):\n        r1 = Request('http://scrapytest.org/1')\n        r2 = Request('http://scrapytest.org/2')\n    \n        path = tempfile.mkdtemp()\n        try:\n            df = RFPDupeFilter(path)\n            df.open()\n            assert not df.request_seen(r1)\n            assert df.request_seen(r1)\n            df.close('finished')\n    \n            df2 = RFPDupeFilter(path)\n            df2.open()\n>           assert df2.request_seen(r1)\nE           AssertionError\n\n/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/scrapy/tests/test_dupefilters.py:43: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}