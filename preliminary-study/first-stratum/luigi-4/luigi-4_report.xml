<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="boyudeMacBook-Pro.local" name="pytest" skipped="0" tests="1" time="0.202" timestamp="2023-11-15T22:44:26.976705"><testcase classname="test.contrib.redshift_test.TestS3CopyToTable" file="test/contrib/redshift_test.py" line="333" name="test_s3_copy_with_nonetype_columns" time="0.007"><failure message="TypeError: object of type &apos;NoneType&apos; has no len()">self = &lt;contrib.redshift_test.TestS3CopyToTable testMethod=test_s3_copy_with_nonetype_columns&gt;
mock_redshift_target = &lt;MagicMock name=&apos;RedshiftTarget&apos; id=&apos;4532160496&apos;&gt;

    @mock.patch(&quot;luigi.contrib.redshift.RedshiftTarget&quot;)
    def test_s3_copy_with_nonetype_columns(self, mock_redshift_target):
        task = DummyS3CopyToTableKey(columns=None)
&gt;       task.run()

test/contrib/redshift_test.py:337: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
luigi/contrib/redshift.py:338: in run
    self.copy(cursor, path)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = DummyS3CopyToTableKey(table=dummy_table, columns=null)
cursor = &lt;MagicMock name=&apos;RedshiftTarget().connect().cursor()&apos; id=&apos;4534379088&apos;&gt;
f = &apos;s3://bucket/key&apos;

    def copy(self, cursor, f):
        &quot;&quot;&quot;
        Defines copying from s3 into redshift.
    
        If both key-based and role-based credentials are provided, role-based will be used.
        &quot;&quot;&quot;
        logger.info(&quot;Inserting file: %s&quot;, f)
        colnames = &apos;&apos;
&gt;       if len(self.columns) &gt; 0:
E       TypeError: object of type &apos;NoneType&apos; has no len()

luigi/contrib/redshift.py:356: TypeError</failure></testcase></testsuite></testsuites>