{
    "tornado:14": {
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/tornado/tornado/ioloop.py": {
            "buggy_functions": [
                {
                    "function_name": "initialize",
                    "function_code": "    def initialize(self, make_current=None):\n        if make_current is None:\n            if IOLoop.current(instance=False) is None:\n                self.make_current()\n        elif make_current:\n            if IOLoop.current(instance=False) is None:\n                raise RuntimeError(\"current IOLoop already exists\")\n            self.make_current()\n",
                    "decorators": [],
                    "start_line": 247,
                    "variables": {
                        "make_current": [
                            248,
                            251
                        ],
                        "IOLoop.current": [
                            249,
                            252
                        ],
                        "IOLoop": [
                            249,
                            252
                        ],
                        "self.make_current": [
                            250,
                            254
                        ],
                        "self": [
                            250,
                            254
                        ],
                        "RuntimeError": [
                            253
                        ]
                    },
                    "filtered_variables": {
                        "make_current": [
                            248,
                            251
                        ],
                        "IOLoop.current": [
                            249,
                            252
                        ],
                        "IOLoop": [
                            249,
                            252
                        ],
                        "self.make_current": [
                            250,
                            254
                        ],
                        "self": [
                            250,
                            254
                        ],
                        "RuntimeError": [
                            253
                        ]
                    },
                    "diff_line_number": 252,
                    "class_data": {
                        "signature": "class IOLoop(Configurable)",
                        "docstring": "A level-triggered I/O loop.\n\nWe use ``epoll`` (Linux) or ``kqueue`` (BSD and Mac OS X) if they\nare available, or else we fall back on select(). If you are\nimplementing a system that needs to handle thousands of\nsimultaneous connections, you should use a system that supports\neither ``epoll`` or ``kqueue``.\n\nExample usage for a simple TCP server:\n\n.. testcode::\n\n    import errno\n    import functools\n    import tornado.ioloop\n    import socket\n\n    def connection_ready(sock, fd, events):\n        while True:\n            try:\n                connection, address = sock.accept()\n            except socket.error as e:\n                if e.args[0] not in (errno.EWOULDBLOCK, errno.EAGAIN):\n                    raise\n                return\n            connection.setblocking(0)\n            handle_connection(connection, address)\n\n    if __name__ == '__main__':\n        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n        sock.setblocking(0)\n        sock.bind((\"\", port))\n        sock.listen(128)\n\n        io_loop = tornado.ioloop.IOLoop.current()\n        callback = functools.partial(connection_ready, sock)\n        io_loop.add_handler(sock.fileno(), callback, io_loop.READ)\n        io_loop.start()\n\n.. testoutput::\n   :hide:\n\nBy default, a newly-constructed `IOLoop` becomes the thread's current\n`IOLoop`, unless there already is a current `IOLoop`. This behavior\ncan be controlled with the ``make_current`` argument to the `IOLoop`\nconstructor: if ``make_current=True``, the new `IOLoop` will always\ntry to become current and it raises an error if there is already a\ncurrent instance. If ``make_current=False``, the new `IOLoop` will\nnot try to become current.\n\n.. versionchanged:: 4.2\n   Added the ``make_current`` keyword argument to the `IOLoop`\n   constructor.",
                        "constructor_docstring": null,
                        "functions": [
                            "instance()",
                            "initialized()",
                            "install(self)",
                            "clear_instance()",
                            "current(instance=True)",
                            "make_current(self)",
                            "clear_current()",
                            "configurable_base(cls)",
                            "configurable_default(cls)",
                            "initialize(self, make_current=None)",
                            "close(self, all_fds=False)",
                            "add_handler(self, fd, handler, events)",
                            "update_handler(self, fd, events)",
                            "remove_handler(self, fd)",
                            "set_blocking_signal_threshold(self, seconds, action)",
                            "set_blocking_log_threshold(self, seconds)",
                            "log_stack(self, signal, frame)",
                            "start(self)",
                            "_setup_logging(self)",
                            "stop(self)",
                            "run_sync(self, func, timeout=None)",
                            "time(self)",
                            "add_timeout(self, deadline, callback, *args, **kwargs)",
                            "call_later(self, delay, callback, *args, **kwargs)",
                            "call_at(self, when, callback, *args, **kwargs)",
                            "remove_timeout(self, timeout)",
                            "add_callback(self, callback, *args, **kwargs)",
                            "add_callback_from_signal(self, callback, *args, **kwargs)",
                            "spawn_callback(self, callback, *args, **kwargs)",
                            "add_future(self, future, callback)",
                            "_run_callback(self, callback)",
                            "handle_callback_exception(self, callback)",
                            "split_fd(self, fd)",
                            "close_fd(self, fd)",
                            "run()"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "_EPOLLIN",
                            "_EPOLLPRI",
                            "_EPOLLOUT",
                            "_EPOLLERR",
                            "_EPOLLHUP",
                            "_EPOLLRDHUP",
                            "_EPOLLONESHOT",
                            "_EPOLLET",
                            "NONE",
                            "READ",
                            "WRITE",
                            "ERROR",
                            "_instance_lock",
                            "_current"
                        ],
                        "class_decorators": []
                    }
                }
            ],
            "inscope_functions": [
                "instance()",
                "initialized()",
                "install(self)",
                "clear_instance()",
                "current(instance=True)",
                "make_current(self)",
                "clear_current()",
                "configurable_base(cls)",
                "configurable_default(cls)",
                "initialize(self, make_current=None)",
                "close(self, all_fds=False)",
                "add_handler(self, fd, handler, events)",
                "update_handler(self, fd, events)",
                "remove_handler(self, fd)",
                "set_blocking_signal_threshold(self, seconds, action)",
                "set_blocking_log_threshold(self, seconds)",
                "log_stack(self, signal, frame)",
                "start(self)",
                "_setup_logging(self)",
                "stop(self)",
                "run_sync(self, func, timeout=None)",
                "time(self)",
                "add_timeout(self, deadline, callback, *args, **kwargs)",
                "call_later(self, delay, callback, *args, **kwargs)",
                "call_at(self, when, callback, *args, **kwargs)",
                "remove_timeout(self, timeout)",
                "add_callback(self, callback, *args, **kwargs)",
                "add_callback_from_signal(self, callback, *args, **kwargs)",
                "spawn_callback(self, callback, *args, **kwargs)",
                "add_future(self, future, callback)",
                "_run_callback(self, callback)",
                "handle_callback_exception(self, callback)",
                "split_fd(self, fd)",
                "close_fd(self, fd)",
                "initialize(self, impl, time_func=None, **kwargs)",
                "close(self, all_fds=False)",
                "add_handler(self, fd, handler, events)",
                "update_handler(self, fd, events)",
                "remove_handler(self, fd)",
                "set_blocking_signal_threshold(self, seconds, action)",
                "start(self)",
                "stop(self)",
                "time(self)",
                "call_at(self, deadline, callback, *args, **kwargs)",
                "remove_timeout(self, timeout)",
                "add_callback(self, callback, *args, **kwargs)",
                "add_callback_from_signal(self, callback, *args, **kwargs)",
                "__init__(self, deadline, callback, io_loop)",
                "__lt__(self, other)",
                "__le__(self, other)",
                "__init__(self, callback, callback_time, io_loop=None)",
                "start(self)",
                "stop(self)",
                "is_running(self)",
                "_run(self)",
                "_schedule_next(self)",
                "run()"
            ],
            "variables_in_file": {
                "ImportError": [
                    58,
                    53
                ],
                "signal": [
                    838,
                    727,
                    720,
                    881,
                    884,
                    758,
                    726,
                    54,
                    854,
                    762,
                    767
                ],
                "_POLL_TIMEOUT": [
                    64,
                    827,
                    830
                ],
                "Exception": [
                    67,
                    873,
                    842,
                    427,
                    716,
                    599,
                    1021
                ],
                "Configurable": [
                    71
                ],
                "_EPOLLIN": [
                    128,
                    139
                ],
                "_EPOLLPRI": [
                    129
                ],
                "_EPOLLOUT": [
                    130,
                    140
                ],
                "_EPOLLERR": [
                    131,
                    141
                ],
                "_EPOLLHUP": [
                    132,
                    141
                ],
                "_EPOLLRDHUP": [
                    133
                ],
                "_EPOLLONESHOT": [
                    134
                ],
                "_EPOLLET": [
                    135
                ],
                "NONE": [
                    138
                ],
                "READ": [
                    139
                ],
                "WRITE": [
                    140
                ],
                "ERROR": [
                    141
                ],
                "_instance_lock": [
                    144
                ],
                "threading.Lock": [
                    144,
                    672
                ],
                "threading": [
                    144,
                    146,
                    672
                ],
                "_current": [
                    146
                ],
                "threading.local": [
                    146
                ],
                "hasattr": [
                    167,
                    237,
                    240,
                    720,
                    758,
                    185,
                    666,
                    157,
                    159
                ],
                "IOLoop": [
                    656,
                    157,
                    158,
                    159,
                    161,
                    162,
                    167,
                    176,
                    177,
                    185,
                    186,
                    207,
                    209,
                    736,
                    225,
                    737,
                    992,
                    229,
                    233,
                    882,
                    249,
                    252
                ],
                "IOLoop._instance_lock": [
                    158
                ],
                "IOLoop._instance": [
                    186,
                    161,
                    162,
                    177
                ],
                "staticmethod": [
                    227,
                    164,
                    179,
                    148,
                    188
                ],
                "IOLoop.initialized": [
                    176
                ],
                "self": [
                    1024,
                    1027,
                    1028,
                    1030,
                    1031,
                    1032,
                    1034,
                    523,
                    572,
                    584,
                    598,
                    600,
                    664,
                    665,
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    684,
                    685,
                    686,
                    687,
                    177,
                    690,
                    691,
                    692,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    702,
                    703,
                    704,
                    707,
                    708,
                    711,
                    712,
                    713,
                    715,
                    724,
                    730,
                    732,
                    733,
                    734,
                    225,
                    737,
                    738,
                    739,
                    762,
                    250,
                    254,
                    778,
                    779,
                    780,
                    787,
                    788,
                    789,
                    790,
                    794,
                    795,
                    796,
                    797,
                    800,
                    801,
                    804,
                    805,
                    807,
                    810,
                    813,
                    818,
                    822,
                    826,
                    832,
                    835,
                    841,
                    341,
                    853,
                    855,
                    349,
                    861,
                    862,
                    863,
                    865,
                    872,
                    874,
                    879,
                    880,
                    887,
                    888,
                    889,
                    892,
                    898,
                    899,
                    909,
                    912,
                    913,
                    915,
                    916,
                    918,
                    925,
                    929,
                    932,
                    942,
                    436,
                    437,
                    439,
                    440,
                    442,
                    955,
                    956,
                    957,
                    964,
                    968,
                    988,
                    991,
                    992,
                    993,
                    994,
                    998,
                    999,
                    1000,
                    489,
                    491,
                    1004,
                    1005,
                    1006,
                    1007,
                    1014,
                    1017,
                    507,
                    1020,
                    1022
                ],
                "current": [
                    208,
                    210,
                    207
                ],
                "getattr": [
                    736,
                    207
                ],
                "IOLoop._current": [
                    736,
                    225,
                    737,
                    229,
                    207,
                    882
                ],
                "instance": [
                    208
                ],
                "IOLoop.instance": [
                    209
                ],
                "IOLoop._current.instance": [
                    225,
                    737,
                    229,
                    882
                ],
                "classmethod": [
                    235,
                    231
                ],
                "select": [
                    240,
                    237
                ],
                "EPollIOLoop": [
                    239
                ],
                "KQueueIOLoop": [
                    243
                ],
                "SelectIOLoop": [
                    245
                ],
                "make_current": [
                    248,
                    251
                ],
                "IOLoop.current": [
                    992,
                    249,
                    252
                ],
                "self.make_current": [
                    250,
                    254
                ],
                "RuntimeError": [
                    914,
                    731,
                    253
                ],
                "NotImplementedError": [
                    547,
                    358,
                    300,
                    332,
                    398,
                    559,
                    532,
                    309,
                    281,
                    318
                ],
                "self.set_blocking_signal_threshold": [
                    341
                ],
                "seconds": [
                    725,
                    724,
                    341
                ],
                "self.log_stack": [
                    341
                ],
                "gen_log.warning": [
                    348
                ],
                "gen_log": [
                    721,
                    348,
                    717
                ],
                "self._blocking_signal_threshold": [
                    835,
                    679,
                    880,
                    724,
                    853,
                    855,
                    349
                ],
                "join": [
                    350
                ],
                "traceback.format_stack": [
                    350
                ],
                "traceback": [
                    350
                ],
                "frame": [
                    350
                ],
                "any": [
                    371
                ],
                "handlers": [
                    371,
                    372,
                    373
                ],
                "logging.getLogger": [
                    371,
                    372,
                    373
                ],
                "logging": [
                    371,
                    372,
                    373,
                    374
                ],
                "logging.basicConfig": [
                    374
                ],
                "future_cell": [
                    422,
                    428,
                    429,
                    432,
                    434,
                    435,
                    436,
                    443,
                    445
                ],
                "result": [
                    426,
                    431,
                    432,
                    435,
                    445
                ],
                "func": [
                    426
                ],
                "TracebackFuture": [
                    434,
                    428
                ],
                "set_exc_info": [
                    429
                ],
                "sys.exc_info": [
                    429
                ],
                "sys": [
                    429
                ],
                "is_future": [
                    593,
                    581,
                    431
                ],
                "set_result": [
                    435
                ],
                "self.add_future": [
                    436,
                    598
                ],
                "self.stop": [
                    436,
                    439
                ],
                "self.add_callback": [
                    584,
                    932,
                    572,
                    437
                ],
                "run": [
                    437
                ],
                "timeout": [
                    899,
                    900,
                    811,
                    812,
                    813,
                    908,
                    816,
                    438,
                    439,
                    441,
                    444,
                    895
                ],
                "timeout_handle": [
                    442,
                    439
                ],
                "self.add_timeout": [
                    523,
                    439
                ],
                "self.time": [
                    491,
                    788,
                    439,
                    826,
                    507
                ],
                "self.start": [
                    440
                ],
                "self.remove_timeout": [
                    442
                ],
                "done": [
                    443
                ],
                "TimeoutError": [
                    444
                ],
                "time.time": [
                    668,
                    460
                ],
                "time": [
                    668,
                    460
                ],
                "isinstance": [
                    488,
                    953,
                    490
                ],
                "deadline": [
                    896,
                    954,
                    488,
                    489,
                    490,
                    491,
                    494,
                    953,
                    826,
                    955,
                    796
                ],
                "numbers.Real": [
                    488,
                    953
                ],
                "numbers": [
                    488,
                    953
                ],
                "self.call_at": [
                    489,
                    491,
                    507
                ],
                "callback": [
                    897,
                    523,
                    917,
                    790,
                    932,
                    809,
                    810,
                    943,
                    816,
                    956,
                    572,
                    582,
                    584,
                    592,
                    600,
                    988,
                    612,
                    489,
                    492,
                    507
                ],
                "args": [
                    897,
                    932,
                    489,
                    523,
                    492,
                    943,
                    917,
                    507,
                    572
                ],
                "kwargs": [
                    897,
                    932,
                    489,
                    523,
                    492,
                    943,
                    917,
                    664,
                    507,
                    572
                ],
                "datetime.timedelta": [
                    490
                ],
                "datetime": [
                    490
                ],
                "timedelta_to_seconds": [
                    491
                ],
                "TypeError": [
                    954,
                    494
                ],
                "delay": [
                    507
                ],
                "when": [
                    523
                ],
                "stack_context.NullContext": [
                    928,
                    571
                ],
                "stack_context": [
                    928,
                    897,
                    582,
                    943,
                    917,
                    571,
                    703
                ],
                "future": [
                    584,
                    581,
                    583
                ],
                "stack_context.wrap": [
                    897,
                    582,
                    943,
                    917,
                    703
                ],
                "future.add_done_callback": [
                    583
                ],
                "ret": [
                    592,
                    593,
                    598
                ],
                "f.result": [
                    598
                ],
                "f": [
                    598
                ],
                "self.handle_callback_exception": [
                    600,
                    874,
                    872
                ],
                "app_log.error": [
                    612
                ],
                "app_log": [
                    612
                ],
                "fd.fileno": [
                    631
                ],
                "fd": [
                    649,
                    651,
                    694,
                    695,
                    702,
                    703,
                    704,
                    707,
                    708,
                    711,
                    712,
                    713,
                    715,
                    863,
                    865,
                    872,
                    874,
                    631,
                    633
                ],
                "AttributeError": [
                    632,
                    650
                ],
                "fd.close": [
                    649
                ],
                "os.close": [
                    651
                ],
                "os": [
                    651,
                    758
                ],
                "OSError": [
                    867,
                    652
                ],
                "initialize": [
                    664
                ],
                "super": [
                    664
                ],
                "PollIOLoop": [
                    664
                ],
                "self._impl": [
                    704,
                    708,
                    841,
                    715,
                    665,
                    697,
                    666,
                    667
                ],
                "impl": [
                    665
                ],
                "set_close_exec": [
                    667
                ],
                "self._impl.fileno": [
                    667
                ],
                "self.time_func": [
                    892,
                    668
                ],
                "time_func": [
                    668
                ],
                "self._handlers": [
                    865,
                    712,
                    872,
                    874,
                    694,
                    669,
                    703
                ],
                "self._events": [
                    713,
                    862,
                    861,
                    670,
                    863
                ],
                "self._callbacks": [
                    779,
                    780,
                    942,
                    818,
                    915,
                    916,
                    698,
                    671
                ],
                "self._callback_lock": [
                    672,
                    690,
                    778,
                    912
                ],
                "self._timeouts": [
                    673,
                    801,
                    899,
                    805,
                    807,
                    826,
                    787,
                    789,
                    790,
                    822,
                    794,
                    699,
                    796,
                    797
                ],
                "self._cancellations": [
                    800,
                    801,
                    674,
                    804,
                    909,
                    795
                ],
                "self._running": [
                    832,
                    993,
                    675,
                    739,
                    1027,
                    998,
                    1004,
                    1014,
                    887,
                    1017,
                    730
                ],
                "self._stopped": [
                    676,
                    879,
                    888,
                    733,
                    734
                ],
                "self._closing": [
                    913,
                    691,
                    677
                ],
                "self._thread_ident": [
                    929,
                    738,
                    918,
                    678
                ],
                "self._timeout_counter": [
                    680
                ],
                "itertools.count": [
                    680
                ],
                "itertools": [
                    680
                ],
                "self._waker": [
                    684,
                    685,
                    686,
                    692,
                    696,
                    889,
                    762,
                    925
                ],
                "Waker": [
                    684
                ],
                "self.add_handler": [
                    685
                ],
                "self._waker.fileno": [
                    692,
                    685
                ],
                "self._waker.consume": [
                    686
                ],
                "self.READ": [
                    687
                ],
                "self.remove_handler": [
                    692
                ],
                "all_fds": [
                    693
                ],
                "handler": [
                    694,
                    703
                ],
                "self._handlers.values": [
                    694
                ],
                "self.close_fd": [
                    695
                ],
                "self._waker.close": [
                    696
                ],
                "self._impl.close": [
                    697
                ],
                "obj": [
                    711,
                    707,
                    702,
                    703
                ],
                "self.split_fd": [
                    707,
                    702,
                    711
                ],
                "self._impl.register": [
                    704
                ],
                "events": [
                    704,
                    866,
                    708,
                    863
                ],
                "self.ERROR": [
                    704,
                    708
                ],
                "self._impl.modify": [
                    708
                ],
                "self._handlers.pop": [
                    712
                ],
                "self._events.pop": [
                    713
                ],
                "self._impl.unregister": [
                    715
                ],
                "gen_log.debug": [
                    717
                ],
                "gen_log.error": [
                    721
                ],
                "signal.signal": [
                    726
                ],
                "signal.SIGALRM": [
                    726
                ],
                "action": [
                    727
                ],
                "signal.SIG_DFL": [
                    727
                ],
                "self._setup_logging": [
                    732
                ],
                "old_current": [
                    736,
                    882
                ],
                "thread.get_ident": [
                    929,
                    738,
                    918
                ],
                "thread": [
                    929,
                    738,
                    918
                ],
                "old_wakeup_fd": [
                    768,
                    772,
                    883,
                    884,
                    757,
                    762,
                    763,
                    767
                ],
                "os.name": [
                    758
                ],
                "signal.set_wakeup_fd": [
                    762,
                    884,
                    767
                ],
                "self._waker.write_fileno": [
                    762
                ],
                "ValueError": [
                    769,
                    990
                ],
                "callbacks": [
                    816,
                    809,
                    779
                ],
                "due_timeouts": [
                    816,
                    786,
                    811,
                    797
                ],
                "now": [
                    788,
                    796
                ],
                "heapq.heappop": [
                    794,
                    797
                ],
                "heapq": [
                    794,
                    899,
                    797,
                    807
                ],
                "due_timeouts.append": [
                    797
                ],
                "len": [
                    801
                ],
                "x": [
                    805,
                    806
                ],
                "x.callback": [
                    806
                ],
                "heapq.heapify": [
                    807
                ],
                "self._run_callback": [
                    810,
                    813
                ],
                "timeout.callback": [
                    908,
                    812,
                    813
                ],
                "poll_timeout": [
                    841,
                    821,
                    826,
                    827,
                    830
                ],
                "max": [
                    827
                ],
                "min": [
                    827
                ],
                "signal.setitimer": [
                    854,
                    838,
                    881
                ],
                "signal.ITIMER_REAL": [
                    854,
                    838,
                    881
                ],
                "event_pairs": [
                    841,
                    861
                ],
                "self._impl.poll": [
                    841
                ],
                "errno_from_exception": [
                    848,
                    868
                ],
                "e": [
                    848,
                    868
                ],
                "errno.EINTR": [
                    848
                ],
                "errno": [
                    848,
                    868
                ],
                "self._events.update": [
                    861
                ],
                "self._events.popitem": [
                    863
                ],
                "fd_obj": [
                    865,
                    866,
                    875
                ],
                "handler_func": [
                    865,
                    866,
                    875
                ],
                "IOError": [
                    867
                ],
                "errno.EPIPE": [
                    868
                ],
                "self._handlers.get": [
                    872,
                    874
                ],
                "self._waker.wake": [
                    889,
                    925
                ],
                "_Timeout": [
                    895
                ],
                "functools.partial": [
                    897,
                    916,
                    942
                ],
                "functools": [
                    897,
                    916,
                    942
                ],
                "heapq.heappush": [
                    899
                ],
                "list_empty": [
                    915,
                    918
                ],
                "self._callbacks.append": [
                    916,
                    942
                ],
                "object": [
                    946,
                    972
                ],
                "__slots__": [
                    950
                ],
                "self.deadline": [
                    968,
                    955,
                    964
                ],
                "self.callback": [
                    988,
                    956,
                    1020,
                    1022
                ],
                "self.tiebreaker": [
                    968,
                    964,
                    957
                ],
                "next": [
                    957
                ],
                "io_loop._timeout_counter": [
                    957
                ],
                "io_loop": [
                    992,
                    957
                ],
                "other.deadline": [
                    969,
                    965
                ],
                "other": [
                    969,
                    965
                ],
                "other.tiebreaker": [
                    969,
                    965
                ],
                "callback_time": [
                    989,
                    991
                ],
                "self.callback_time": [
                    1031,
                    991
                ],
                "self.io_loop": [
                    992,
                    1028,
                    999,
                    1034,
                    1006,
                    1022
                ],
                "self._timeout": [
                    994,
                    1034,
                    1005,
                    1006,
                    1007
                ],
                "self._next_timeout": [
                    1032,
                    1034,
                    1030,
                    999
                ],
                "self.io_loop.time": [
                    1028,
                    999
                ],
                "self._schedule_next": [
                    1000,
                    1024
                ],
                "self.io_loop.remove_timeout": [
                    1006
                ],
                "self.io_loop.handle_callback_exception": [
                    1022
                ],
                "current_time": [
                    1032,
                    1028,
                    1030
                ],
                "callback_time_sec": [
                    1032,
                    1031
                ],
                "math.floor": [
                    1032
                ],
                "math": [
                    1032
                ],
                "self.io_loop.add_timeout": [
                    1034
                ],
                "self._run": [
                    1034
                ]
            },
            "filtered_variables_in_file": {
                "ImportError": [
                    58,
                    53
                ],
                "signal": [
                    838,
                    727,
                    720,
                    881,
                    884,
                    758,
                    726,
                    54,
                    854,
                    762,
                    767
                ],
                "_POLL_TIMEOUT": [
                    64,
                    827,
                    830
                ],
                "Exception": [
                    67,
                    873,
                    842,
                    427,
                    716,
                    599,
                    1021
                ],
                "Configurable": [
                    71
                ],
                "_EPOLLIN": [
                    128,
                    139
                ],
                "_EPOLLPRI": [
                    129
                ],
                "_EPOLLOUT": [
                    130,
                    140
                ],
                "_EPOLLERR": [
                    131,
                    141
                ],
                "_EPOLLHUP": [
                    132,
                    141
                ],
                "_EPOLLRDHUP": [
                    133
                ],
                "_EPOLLONESHOT": [
                    134
                ],
                "_EPOLLET": [
                    135
                ],
                "NONE": [
                    138
                ],
                "READ": [
                    139
                ],
                "WRITE": [
                    140
                ],
                "ERROR": [
                    141
                ],
                "_instance_lock": [
                    144
                ],
                "threading.Lock": [
                    144,
                    672
                ],
                "threading": [
                    144,
                    146,
                    672
                ],
                "_current": [
                    146
                ],
                "threading.local": [
                    146
                ],
                "hasattr": [
                    167,
                    237,
                    240,
                    720,
                    758,
                    185,
                    666,
                    157,
                    159
                ],
                "IOLoop": [
                    656,
                    157,
                    158,
                    159,
                    161,
                    162,
                    167,
                    176,
                    177,
                    185,
                    186,
                    207,
                    209,
                    736,
                    225,
                    737,
                    992,
                    229,
                    233,
                    882,
                    249,
                    252
                ],
                "IOLoop._instance_lock": [
                    158
                ],
                "IOLoop._instance": [
                    186,
                    161,
                    162,
                    177
                ],
                "staticmethod": [
                    227,
                    164,
                    179,
                    148,
                    188
                ],
                "IOLoop.initialized": [
                    176
                ],
                "self": [
                    1024,
                    1027,
                    1028,
                    1030,
                    1031,
                    1032,
                    1034,
                    523,
                    572,
                    584,
                    598,
                    600,
                    664,
                    665,
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    684,
                    685,
                    686,
                    687,
                    177,
                    690,
                    691,
                    692,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    702,
                    703,
                    704,
                    707,
                    708,
                    711,
                    712,
                    713,
                    715,
                    724,
                    730,
                    732,
                    733,
                    734,
                    225,
                    737,
                    738,
                    739,
                    762,
                    250,
                    254,
                    778,
                    779,
                    780,
                    787,
                    788,
                    789,
                    790,
                    794,
                    795,
                    796,
                    797,
                    800,
                    801,
                    804,
                    805,
                    807,
                    810,
                    813,
                    818,
                    822,
                    826,
                    832,
                    835,
                    841,
                    341,
                    853,
                    855,
                    349,
                    861,
                    862,
                    863,
                    865,
                    872,
                    874,
                    879,
                    880,
                    887,
                    888,
                    889,
                    892,
                    898,
                    899,
                    909,
                    912,
                    913,
                    915,
                    916,
                    918,
                    925,
                    929,
                    932,
                    942,
                    436,
                    437,
                    439,
                    440,
                    442,
                    955,
                    956,
                    957,
                    964,
                    968,
                    988,
                    991,
                    992,
                    993,
                    994,
                    998,
                    999,
                    1000,
                    489,
                    491,
                    1004,
                    1005,
                    1006,
                    1007,
                    1014,
                    1017,
                    507,
                    1020,
                    1022
                ],
                "current": [
                    208,
                    210,
                    207
                ],
                "getattr": [
                    736,
                    207
                ],
                "IOLoop._current": [
                    736,
                    225,
                    737,
                    229,
                    207,
                    882
                ],
                "instance": [
                    208
                ],
                "IOLoop.instance": [
                    209
                ],
                "IOLoop._current.instance": [
                    225,
                    737,
                    229,
                    882
                ],
                "classmethod": [
                    235,
                    231
                ],
                "select": [
                    240,
                    237
                ],
                "EPollIOLoop": [
                    239
                ],
                "KQueueIOLoop": [
                    243
                ],
                "SelectIOLoop": [
                    245
                ],
                "make_current": [
                    248,
                    251
                ],
                "IOLoop.current": [
                    992,
                    249,
                    252
                ],
                "self.make_current": [
                    250,
                    254
                ],
                "RuntimeError": [
                    914,
                    731,
                    253
                ],
                "NotImplementedError": [
                    547,
                    358,
                    300,
                    332,
                    398,
                    559,
                    532,
                    309,
                    281,
                    318
                ],
                "self.set_blocking_signal_threshold": [
                    341
                ],
                "seconds": [
                    725,
                    724,
                    341
                ],
                "self.log_stack": [
                    341
                ],
                "gen_log.warning": [
                    348
                ],
                "gen_log": [
                    721,
                    348,
                    717
                ],
                "self._blocking_signal_threshold": [
                    835,
                    679,
                    880,
                    724,
                    853,
                    855,
                    349
                ],
                "join": [
                    350
                ],
                "traceback.format_stack": [
                    350
                ],
                "traceback": [
                    350
                ],
                "frame": [
                    350
                ],
                "any": [
                    371
                ],
                "handlers": [
                    371,
                    372,
                    373
                ],
                "logging.getLogger": [
                    371,
                    372,
                    373
                ],
                "logging": [
                    371,
                    372,
                    373,
                    374
                ],
                "logging.basicConfig": [
                    374
                ],
                "future_cell": [
                    422,
                    428,
                    429,
                    432,
                    434,
                    435,
                    436,
                    443,
                    445
                ],
                "result": [
                    426,
                    431,
                    432,
                    435,
                    445
                ],
                "func": [
                    426
                ],
                "TracebackFuture": [
                    434,
                    428
                ],
                "set_exc_info": [
                    429
                ],
                "sys.exc_info": [
                    429
                ],
                "sys": [
                    429
                ],
                "is_future": [
                    593,
                    581,
                    431
                ],
                "set_result": [
                    435
                ],
                "self.add_future": [
                    436,
                    598
                ],
                "self.stop": [
                    436,
                    439
                ],
                "self.add_callback": [
                    584,
                    932,
                    572,
                    437
                ],
                "run": [
                    437
                ],
                "timeout": [
                    899,
                    900,
                    811,
                    812,
                    813,
                    908,
                    816,
                    438,
                    439,
                    441,
                    444,
                    895
                ],
                "timeout_handle": [
                    442,
                    439
                ],
                "self.add_timeout": [
                    523,
                    439
                ],
                "self.time": [
                    491,
                    788,
                    439,
                    826,
                    507
                ],
                "self.start": [
                    440
                ],
                "self.remove_timeout": [
                    442
                ],
                "done": [
                    443
                ],
                "TimeoutError": [
                    444
                ],
                "time.time": [
                    668,
                    460
                ],
                "time": [
                    668,
                    460
                ],
                "isinstance": [
                    488,
                    953,
                    490
                ],
                "deadline": [
                    896,
                    954,
                    488,
                    489,
                    490,
                    491,
                    494,
                    953,
                    826,
                    955,
                    796
                ],
                "numbers.Real": [
                    488,
                    953
                ],
                "numbers": [
                    488,
                    953
                ],
                "self.call_at": [
                    489,
                    491,
                    507
                ],
                "callback": [
                    897,
                    523,
                    917,
                    790,
                    932,
                    809,
                    810,
                    943,
                    816,
                    956,
                    572,
                    582,
                    584,
                    592,
                    600,
                    988,
                    612,
                    489,
                    492,
                    507
                ],
                "args": [
                    897,
                    932,
                    489,
                    523,
                    492,
                    943,
                    917,
                    507,
                    572
                ],
                "kwargs": [
                    897,
                    932,
                    489,
                    523,
                    492,
                    943,
                    917,
                    664,
                    507,
                    572
                ],
                "datetime.timedelta": [
                    490
                ],
                "datetime": [
                    490
                ],
                "timedelta_to_seconds": [
                    491
                ],
                "TypeError": [
                    954,
                    494
                ],
                "delay": [
                    507
                ],
                "when": [
                    523
                ],
                "stack_context.NullContext": [
                    928,
                    571
                ],
                "stack_context": [
                    928,
                    897,
                    582,
                    943,
                    917,
                    571,
                    703
                ],
                "future": [
                    584,
                    581,
                    583
                ],
                "stack_context.wrap": [
                    897,
                    582,
                    943,
                    917,
                    703
                ],
                "future.add_done_callback": [
                    583
                ],
                "ret": [
                    592,
                    593,
                    598
                ],
                "f.result": [
                    598
                ],
                "f": [
                    598
                ],
                "self.handle_callback_exception": [
                    600,
                    874,
                    872
                ],
                "app_log.error": [
                    612
                ],
                "app_log": [
                    612
                ],
                "fd.fileno": [
                    631
                ],
                "fd": [
                    649,
                    651,
                    694,
                    695,
                    702,
                    703,
                    704,
                    707,
                    708,
                    711,
                    712,
                    713,
                    715,
                    863,
                    865,
                    872,
                    874,
                    631,
                    633
                ],
                "AttributeError": [
                    632,
                    650
                ],
                "fd.close": [
                    649
                ],
                "os.close": [
                    651
                ],
                "os": [
                    651,
                    758
                ],
                "OSError": [
                    867,
                    652
                ],
                "initialize": [
                    664
                ],
                "super": [
                    664
                ],
                "PollIOLoop": [
                    664
                ],
                "self._impl": [
                    704,
                    708,
                    841,
                    715,
                    665,
                    697,
                    666,
                    667
                ],
                "impl": [
                    665
                ],
                "set_close_exec": [
                    667
                ],
                "self._impl.fileno": [
                    667
                ],
                "self.time_func": [
                    892,
                    668
                ],
                "time_func": [
                    668
                ],
                "self._handlers": [
                    865,
                    712,
                    872,
                    874,
                    694,
                    669,
                    703
                ],
                "self._events": [
                    713,
                    862,
                    861,
                    670,
                    863
                ],
                "self._callbacks": [
                    779,
                    780,
                    942,
                    818,
                    915,
                    916,
                    698,
                    671
                ],
                "self._callback_lock": [
                    672,
                    690,
                    778,
                    912
                ],
                "self._timeouts": [
                    673,
                    801,
                    899,
                    805,
                    807,
                    826,
                    787,
                    789,
                    790,
                    822,
                    794,
                    699,
                    796,
                    797
                ],
                "self._cancellations": [
                    800,
                    801,
                    674,
                    804,
                    909,
                    795
                ],
                "self._running": [
                    832,
                    993,
                    675,
                    739,
                    1027,
                    998,
                    1004,
                    1014,
                    887,
                    1017,
                    730
                ],
                "self._stopped": [
                    676,
                    879,
                    888,
                    733,
                    734
                ],
                "self._closing": [
                    913,
                    691,
                    677
                ],
                "self._thread_ident": [
                    929,
                    738,
                    918,
                    678
                ],
                "self._timeout_counter": [
                    680
                ],
                "itertools.count": [
                    680
                ],
                "itertools": [
                    680
                ],
                "self._waker": [
                    684,
                    685,
                    686,
                    692,
                    696,
                    889,
                    762,
                    925
                ],
                "Waker": [
                    684
                ],
                "self.add_handler": [
                    685
                ],
                "self._waker.fileno": [
                    692,
                    685
                ],
                "self._waker.consume": [
                    686
                ],
                "self.READ": [
                    687
                ],
                "self.remove_handler": [
                    692
                ],
                "all_fds": [
                    693
                ],
                "handler": [
                    694,
                    703
                ],
                "self._handlers.values": [
                    694
                ],
                "self.close_fd": [
                    695
                ],
                "self._waker.close": [
                    696
                ],
                "self._impl.close": [
                    697
                ],
                "obj": [
                    711,
                    707,
                    702,
                    703
                ],
                "self.split_fd": [
                    707,
                    702,
                    711
                ],
                "self._impl.register": [
                    704
                ],
                "events": [
                    704,
                    866,
                    708,
                    863
                ],
                "self.ERROR": [
                    704,
                    708
                ],
                "self._impl.modify": [
                    708
                ],
                "self._handlers.pop": [
                    712
                ],
                "self._events.pop": [
                    713
                ],
                "self._impl.unregister": [
                    715
                ],
                "gen_log.debug": [
                    717
                ],
                "gen_log.error": [
                    721
                ],
                "signal.signal": [
                    726
                ],
                "signal.SIGALRM": [
                    726
                ],
                "action": [
                    727
                ],
                "signal.SIG_DFL": [
                    727
                ],
                "self._setup_logging": [
                    732
                ],
                "old_current": [
                    736,
                    882
                ],
                "thread.get_ident": [
                    929,
                    738,
                    918
                ],
                "thread": [
                    929,
                    738,
                    918
                ],
                "old_wakeup_fd": [
                    768,
                    772,
                    883,
                    884,
                    757,
                    762,
                    763,
                    767
                ],
                "os.name": [
                    758
                ],
                "signal.set_wakeup_fd": [
                    762,
                    884,
                    767
                ],
                "self._waker.write_fileno": [
                    762
                ],
                "ValueError": [
                    769,
                    990
                ],
                "callbacks": [
                    816,
                    809,
                    779
                ],
                "due_timeouts": [
                    816,
                    786,
                    811,
                    797
                ],
                "now": [
                    788,
                    796
                ],
                "heapq.heappop": [
                    794,
                    797
                ],
                "heapq": [
                    794,
                    899,
                    797,
                    807
                ],
                "due_timeouts.append": [
                    797
                ],
                "len": [
                    801
                ],
                "x": [
                    805,
                    806
                ],
                "x.callback": [
                    806
                ],
                "heapq.heapify": [
                    807
                ],
                "self._run_callback": [
                    810,
                    813
                ],
                "timeout.callback": [
                    908,
                    812,
                    813
                ],
                "poll_timeout": [
                    841,
                    821,
                    826,
                    827,
                    830
                ],
                "max": [
                    827
                ],
                "min": [
                    827
                ],
                "signal.setitimer": [
                    854,
                    838,
                    881
                ],
                "signal.ITIMER_REAL": [
                    854,
                    838,
                    881
                ],
                "event_pairs": [
                    841,
                    861
                ],
                "self._impl.poll": [
                    841
                ],
                "errno_from_exception": [
                    848,
                    868
                ],
                "e": [
                    848,
                    868
                ],
                "errno.EINTR": [
                    848
                ],
                "errno": [
                    848,
                    868
                ],
                "self._events.update": [
                    861
                ],
                "self._events.popitem": [
                    863
                ],
                "fd_obj": [
                    865,
                    866,
                    875
                ],
                "handler_func": [
                    865,
                    866,
                    875
                ],
                "IOError": [
                    867
                ],
                "errno.EPIPE": [
                    868
                ],
                "self._handlers.get": [
                    872,
                    874
                ],
                "self._waker.wake": [
                    889,
                    925
                ],
                "_Timeout": [
                    895
                ],
                "functools.partial": [
                    897,
                    916,
                    942
                ],
                "functools": [
                    897,
                    916,
                    942
                ],
                "heapq.heappush": [
                    899
                ],
                "list_empty": [
                    915,
                    918
                ],
                "self._callbacks.append": [
                    916,
                    942
                ],
                "object": [
                    946,
                    972
                ],
                "__slots__": [
                    950
                ],
                "self.deadline": [
                    968,
                    955,
                    964
                ],
                "self.callback": [
                    988,
                    956,
                    1020,
                    1022
                ],
                "self.tiebreaker": [
                    968,
                    964,
                    957
                ],
                "next": [
                    957
                ],
                "io_loop._timeout_counter": [
                    957
                ],
                "io_loop": [
                    992,
                    957
                ],
                "other.deadline": [
                    969,
                    965
                ],
                "other": [
                    969,
                    965
                ],
                "other.tiebreaker": [
                    969,
                    965
                ],
                "callback_time": [
                    989,
                    991
                ],
                "self.callback_time": [
                    1031,
                    991
                ],
                "self.io_loop": [
                    992,
                    1028,
                    999,
                    1034,
                    1006,
                    1022
                ],
                "self._timeout": [
                    994,
                    1034,
                    1005,
                    1006,
                    1007
                ],
                "self._next_timeout": [
                    1032,
                    1034,
                    1030,
                    999
                ],
                "self.io_loop.time": [
                    1028,
                    999
                ],
                "self._schedule_next": [
                    1000,
                    1024
                ],
                "self.io_loop.remove_timeout": [
                    1006
                ],
                "self.io_loop.handle_callback_exception": [
                    1022
                ],
                "current_time": [
                    1032,
                    1028,
                    1030
                ],
                "callback_time_sec": [
                    1032,
                    1031
                ],
                "math.floor": [
                    1032
                ],
                "math": [
                    1032
                ],
                "self.io_loop.add_timeout": [
                    1034
                ],
                "self._run": [
                    1034
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/tornado/tornado/test/ioloop_test.py",
                "test_function": "test_force_current",
                "test_function_code": "    def test_force_current(self):\n        self.io_loop = IOLoop(make_current=True)\n        self.assertIs(self.io_loop, IOLoop.current())\n        with self.assertRaises(RuntimeError):\n            # A second make_current=True construction cannot succeed.\n            IOLoop(make_current=True)\n        # current() was not affected by the failed construction.\n        self.assertIs(self.io_loop, IOLoop.current())",
                "test_error": "RuntimeError: current IOLoop already exists",
                "full_test_error": "self = <tornado.test.ioloop_test.TestIOLoopCurrent testMethod=test_force_current>\n\n    def test_force_current(self):\n>       self.io_loop = IOLoop(make_current=True)\n\ntornado/test/ioloop_test.py:443: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntornado/util.py:221: in __new__\n    instance.initialize(*args, **init_kwargs)\ntornado/platform/kqueue.py:91: in initialize\n    super(KQueueIOLoop, self).initialize(impl=_KQueue(), **kwargs)\ntornado/ioloop.py:664: in initialize\n    super(PollIOLoop, self).initialize(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tornado.platform.kqueue.KQueueIOLoop object at 0x7f9b45dd5090>\nmake_current = True\n\n    def initialize(self, make_current=None):\n        if make_current is None:\n            if IOLoop.current(instance=False) is None:\n                self.make_current()\n        elif make_current:\n            if IOLoop.current(instance=False) is None:\n>               raise RuntimeError(\"current IOLoop already exists\")\nE               RuntimeError: current IOLoop already exists\n\ntornado/ioloop.py:253: RuntimeError",
                "traceback": "tornado/util.py:221: in __new__\n    instance.initialize(*args, **init_kwargs)\ntornado/platform/kqueue.py:91: in initialize\n    super(KQueueIOLoop, self).initialize(impl=_KQueue(), **kwargs)\ntornado/ioloop.py:664: in initialize\n    super(PollIOLoop, self).initialize(**kwargs)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tornado.platform.kqueue.KQueueIOLoop object at 0x7f9b45dd5090>\nmake_current = True\n\n    def initialize(self, make_current=None):\n        if make_current is None:\n            if IOLoop.current(instance=False) is None:\n                self.make_current()\n        elif make_current:\n            if IOLoop.current(instance=False) is None:\n>               raise RuntimeError(\"current IOLoop already exists\")\nE               RuntimeError: current IOLoop already exists\n\ntornado/ioloop.py:253: RuntimeError",
                "test_function_decorators": []
            }
        ]
    }
}