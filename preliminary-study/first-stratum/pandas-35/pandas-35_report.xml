<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="boyudeMacBook-Pro.local" name="pytest" skipped="0" tests="1" time="0.210" timestamp="2023-11-15T22:30:08.213531"><testcase classname="pandas.tests.indexes.multi.test_get_level_values" name="test_get_level_values_when_periods" time="0.002"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;view&apos;">def test_get_level_values_when_periods():
        # GH33131. See also discussion in GH32669.
        # This test can probably be removed when PeriodIndex._engine is removed.
        from pandas import Period, PeriodIndex
    
        idx = MultiIndex.from_arrays(
            [PeriodIndex([Period(&quot;2019Q1&quot;), Period(&quot;2019Q2&quot;)], name=&quot;b&quot;)]
        )
        idx2 = MultiIndex.from_arrays(
            [idx._get_level_values(level) for level in range(idx.nlevels)]
        )
&gt;       assert all(x.is_monotonic for x in idx2.levels)

pandas/tests/indexes/multi/test_get_level_values.py:105: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pandas/tests/indexes/multi/test_get_level_values.py:105: in &lt;genexpr&gt;
    assert all(x.is_monotonic for x in idx2.levels)
pandas/core/indexes/base.py:1548: in is_monotonic
    return self.is_monotonic_increasing
pandas/core/indexes/base.py:1565: in is_monotonic_increasing
    return self._engine.is_monotonic_increasing
pandas/_libs/index.pyx:172: in pandas._libs.index.IndexEngine.is_monotonic_increasing.__get__
    self._do_monotonic_check()
pandas/_libs/index.pyx:187: in pandas._libs.index.IndexEngine._do_monotonic_check
    values = self._get_index_values()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

&gt;   return super(PeriodEngine, self).vgetter().view(&quot;i8&quot;)
E   AttributeError: &apos;NoneType&apos; object has no attribute &apos;view&apos;

pandas/_libs/index.pyx:499: AttributeError</failure></testcase></testsuite></testsuites>