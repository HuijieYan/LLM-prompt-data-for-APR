{
    "pandas:35": {
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/core/indexes/period.py": {
            "buggy_functions": [
                {
                    "function_name": "_engine",
                    "function_code": "    @cache_readonly\n    def _engine(self):\n        # To avoid a reference cycle, pass a weakref of self to _engine_type.\n        period = weakref.ref(self)\n        return self._engine_type(period, len(self))\n",
                    "decorators": [
                        "cache_readonly"
                    ],
                    "start_line": 325,
                    "variables": {
                        "period": [
                            328,
                            329
                        ],
                        "weakref.ref": [
                            328
                        ],
                        "weakref": [
                            328
                        ],
                        "self": [
                            328,
                            329
                        ],
                        "self._engine_type": [
                            329
                        ],
                        "len": [
                            329
                        ],
                        "cache_readonly": [
                            325
                        ]
                    },
                    "filtered_variables": {
                        "period": [
                            328,
                            329
                        ],
                        "weakref.ref": [
                            328
                        ],
                        "weakref": [
                            328
                        ],
                        "self": [
                            328,
                            329
                        ],
                        "self._engine_type": [
                            329
                        ],
                        "len": [
                            329
                        ],
                        "cache_readonly": [
                            325
                        ]
                    },
                    "diff_line_number": 327,
                    "class_data": {
                        "signature": "class PeriodIndex(DatetimeIndexOpsMixin, Int64Index)",
                        "docstring": "Immutable ndarray holding ordinal values indicating regular periods in time.\n\nIndex keys are boxed to Period objects which carries the metadata (eg,\nfrequency information).\n\nParameters\n----------\ndata : array-like (1d int np.ndarray or PeriodArray), optional\n    Optional period-like data to construct index with.\ncopy : bool\n    Make a copy of input ndarray.\nfreq : str or period object, optional\n    One of pandas period strings or corresponding objects.\nyear : int, array, or Series, default None\nmonth : int, array, or Series, default None\nquarter : int, array, or Series, default None\nday : int, array, or Series, default None\nhour : int, array, or Series, default None\nminute : int, array, or Series, default None\nsecond : int, array, or Series, default None\ntz : object, default None\n    Timezone for converting datetime64 data to Periods.\ndtype : str or PeriodDtype, default None\n\nAttributes\n----------\nday\ndayofweek\ndayofyear\ndays_in_month\ndaysinmonth\nend_time\nfreq\nfreqstr\nhour\nis_leap_year\nminute\nmonth\nquarter\nqyear\nsecond\nstart_time\nweek\nweekday\nweekofyear\nyear\n\nMethods\n-------\nasfreq\nstrftime\nto_timestamp\n\nSee Also\n--------\nIndex : The base pandas Index type.\nPeriod : Represents a period of time.\nDatetimeIndex : Index with datetime64 data.\nTimedeltaIndex : Index of timedelta64 data.\nperiod_range : Create a fixed-frequency PeriodIndex.\n\nExamples\n--------\n>>> idx = pd.PeriodIndex(year=year_arr, quarter=q_arr)",
                        "constructor_docstring": null,
                        "functions": [
                            "__new__(cls, data=None, ordinal=None, freq=None, tz=None, dtype=None, copy=False, name=None, **fields)",
                            "_simple_new(cls, values: PeriodArray, name: Label=None)",
                            "values(self)",
                            "_has_complex_internals(self)",
                            "_shallow_copy(self, values=None, name: Label=no_default)",
                            "_maybe_convert_timedelta(self, other)",
                            "_is_comparable_dtype(self, dtype: DtypeObj) -> bool",
                            "_mpl_repr(self)",
                            "_formatter_func(self)",
                            "_engine(self)",
                            "__contains__(self, key: Any) -> bool",
                            "_int64index(self) -> Int64Index",
                            "__array_wrap__(self, result, context=None)",
                            "asof_locs(self, where, mask: np.ndarray) -> np.ndarray",
                            "astype(self, dtype, copy=True, how='start')",
                            "is_full(self) -> bool",
                            "inferred_type(self) -> str",
                            "get_indexer(self, target, method=None, limit=None, tolerance=None)",
                            "get_indexer_non_unique(self, target)",
                            "get_loc(self, key, method=None, tolerance=None)",
                            "_maybe_cast_slice_bound(self, label, side: str, kind: str)",
                            "_parsed_string_to_bounds(self, reso: str, parsed: datetime)",
                            "_validate_partial_date_slice(self, reso: str)",
                            "_get_string_slice(self, key: str, use_lhs: bool=True, use_rhs: bool=True)",
                            "insert(self, loc, item)",
                            "join(self, other, how='left', level=None, return_indexers=False, sort=False)",
                            "_assert_can_do_setop(self, other)",
                            "_setop(self, other, sort, opname: str)",
                            "intersection(self, other, sort=False)",
                            "difference(self, other, sort=None)",
                            "_union(self, other, sort)",
                            "_apply_meta(self, rawarr) -> 'PeriodIndex'",
                            "memory_usage(self, deep=False)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "_typ",
                            "_attributes",
                            "_is_numeric_dtype",
                            "_infer_as_myclass",
                            "_data",
                            "freq",
                            "_engine_type",
                            "_supports_partial_string_indexing"
                        ],
                        "class_decorators": [
                            "inherit_names(['strftime', 'to_timestamp', 'asfreq', 'start_time', 'end_time'] + PeriodArray._field_ops, PeriodArray, wrap=True)",
                            "inherit_names(['is_leap_year', 'freq', '_format_native_types'], PeriodArray)"
                        ]
                    }
                }
            ],
            "inscope_functions": [
                "_new_PeriodIndex(cls, **d)",
                "period_range(start=None, end=None, periods=None, freq=None, name=None) -> PeriodIndex",
                "__new__(cls, data=None, ordinal=None, freq=None, tz=None, dtype=None, copy=False, name=None, **fields)",
                "_simple_new(cls, values: PeriodArray, name: Label=None)",
                "values(self)",
                "_has_complex_internals(self)",
                "_shallow_copy(self, values=None, name: Label=no_default)",
                "_maybe_convert_timedelta(self, other)",
                "_is_comparable_dtype(self, dtype: DtypeObj) -> bool",
                "_mpl_repr(self)",
                "_formatter_func(self)",
                "_engine(self)",
                "__contains__(self, key: Any) -> bool",
                "_int64index(self) -> Int64Index",
                "__array_wrap__(self, result, context=None)",
                "asof_locs(self, where, mask: np.ndarray) -> np.ndarray",
                "astype(self, dtype, copy=True, how='start')",
                "is_full(self) -> bool",
                "inferred_type(self) -> str",
                "get_indexer(self, target, method=None, limit=None, tolerance=None)",
                "get_indexer_non_unique(self, target)",
                "get_loc(self, key, method=None, tolerance=None)",
                "_maybe_cast_slice_bound(self, label, side: str, kind: str)",
                "_parsed_string_to_bounds(self, reso: str, parsed: datetime)",
                "_validate_partial_date_slice(self, reso: str)",
                "_get_string_slice(self, key: str, use_lhs: bool=True, use_rhs: bool=True)",
                "insert(self, loc, item)",
                "join(self, other, how='left', level=None, return_indexers=False, sort=False)",
                "_assert_can_do_setop(self, other)",
                "_setop(self, other, sort, opname: str)",
                "intersection(self, other, sort=False)",
                "difference(self, other, sort=None)",
                "_union(self, other, sort)",
                "_apply_meta(self, rawarr) -> 'PeriodIndex'",
                "memory_usage(self, deep=False)"
            ],
            "variables_in_file": {
                "_index_doc_kwargs": [
                    440,
                    52,
                    53,
                    463
                ],
                "dict": [
                    52,
                    53
                ],
                "ibase._index_doc_kwargs": [
                    52
                ],
                "ibase": [
                    52
                ],
                "_index_doc_kwargs.update": [
                    53
                ],
                "values": [
                    64,
                    256,
                    66,
                    257,
                    258,
                    260,
                    231,
                    234,
                    236,
                    431,
                    432,
                    60,
                    61,
                    63
                ],
                "d.pop": [
                    60,
                    62
                ],
                "d": [
                    64,
                    66,
                    60,
                    62
                ],
                "values.dtype": [
                    61
                ],
                "freq": [
                    800,
                    193,
                    801,
                    195,
                    197,
                    202,
                    205,
                    798,
                    210,
                    213,
                    152,
                    62,
                    797,
                    190,
                    63
                ],
                "PeriodArray": [
                    800,
                    801,
                    195,
                    231,
                    71,
                    72,
                    75,
                    210,
                    724,
                    725,
                    151,
                    221,
                    190,
                    63
                ],
                "cls._simple_new": [
                    64,
                    218
                ],
                "cls": [
                    64,
                    66,
                    218,
                    202,
                    233,
                    186
                ],
                "DatetimeIndexOpsMixin": [
                    76
                ],
                "Int64Index": [
                    76,
                    631,
                    665,
                    666,
                    347,
                    348
                ],
                "_typ": [
                    144
                ],
                "_attributes": [
                    145
                ],
                "_is_numeric_dtype": [
                    148
                ],
                "_infer_as_myclass": [
                    149
                ],
                "_data": [
                    151
                ],
                "DateOffset": [
                    152,
                    287
                ],
                "_engine_type": [
                    154
                ],
                "libindex.PeriodEngine": [
                    154
                ],
                "libindex": [
                    154
                ],
                "_supports_partial_string_indexing": [
                    155
                ],
                "valid_field_set": [
                    172,
                    182,
                    183
                ],
                "issubset": [
                    182
                ],
                "set": [
                    182,
                    183
                ],
                "fields": [
                    190,
                    182,
                    183
                ],
                "argument": [
                    184,
                    183
                ],
                "list": [
                    183
                ],
                "TypeError": [
                    184,
                    506,
                    395
                ],
                "name": [
                    802,
                    260,
                    186,
                    237,
                    365,
                    369,
                    370,
                    372,
                    218,
                    255
                ],
                "maybe_extract_name": [
                    186
                ],
                "data": [
                    800,
                    801,
                    802,
                    195,
                    218,
                    202,
                    205,
                    207,
                    210,
                    213,
                    216,
                    186,
                    188,
                    190
                ],
                "ordinal": [
                    209,
                    210,
                    188,
                    207
                ],
                "freq2": [
                    193,
                    190
                ],
                "PeriodArray._generate_range": [
                    800,
                    190
                ],
                "validate_dtype_freq": [
                    197
                ],
                "dtype": [
                    419,
                    197,
                    307,
                    309,
                    411,
                    413,
                    415
                ],
                "isinstance": [
                    392,
                    394,
                    653,
                    281,
                    283,
                    797,
                    287,
                    307,
                    567,
                    569,
                    444,
                    711,
                    202,
                    333,
                    723,
                    724,
                    611,
                    231,
                    360,
                    368,
                    626,
                    371,
                    373,
                    501
                ],
                "data.freq": [
                    202
                ],
                "data.asfreq": [
                    205
                ],
                "np.asarray": [
                    209,
                    669,
                    247
                ],
                "np": [
                    386,
                    614,
                    615,
                    362,
                    364,
                    209,
                    401,
                    402,
                    468,
                    373,
                    247,
                    281,
                    669,
                    447
                ],
                "np.int64": [
                    209,
                    669
                ],
                "period_array": [
                    213
                ],
                "copy": [
                    419,
                    215
                ],
                "data.copy": [
                    216
                ],
                "Label": [
                    221,
                    254
                ],
                "type": [
                    384,
                    231,
                    711,
                    617,
                    618,
                    696,
                    669,
                    670
                ],
                "result": [
                    384,
                    641,
                    642,
                    643,
                    260,
                    261,
                    262,
                    402,
                    405,
                    407,
                    670,
                    671,
                    730,
                    732,
                    733,
                    233,
                    234,
                    236,
                    237,
                    238,
                    239,
                    240,
                    370,
                    372,
                    631,
                    380,
                    381
                ],
                "object.__new__": [
                    233
                ],
                "object": [
                    612,
                    233,
                    627,
                    699,
                    316
                ],
                "result._data": [
                    234
                ],
                "result._index_data": [
                    236
                ],
                "values._data": [
                    236
                ],
                "result.name": [
                    237
                ],
                "result._cache": [
                    261,
                    238
                ],
                "result._reset_identity": [
                    239
                ],
                "classmethod": [
                    220
                ],
                "self": [
                    516,
                    522,
                    523,
                    535,
                    541,
                    568,
                    571,
                    572,
                    579,
                    589,
                    593,
                    603,
                    606,
                    611,
                    612,
                    615,
                    617,
                    618,
                    624,
                    627,
                    632,
                    642,
                    643,
                    653,
                    654,
                    660,
                    661,
                    662,
                    665,
                    669,
                    670,
                    674,
                    675,
                    678,
                    679,
                    681,
                    683,
                    687,
                    690,
                    691,
                    694,
                    696,
                    699,
                    701,
                    702,
                    704,
                    707,
                    711,
                    713,
                    714,
                    718,
                    725,
                    726,
                    731,
                    732,
                    247,
                    255,
                    256,
                    258,
                    260,
                    282,
                    285,
                    290,
                    293,
                    301,
                    309,
                    316,
                    320,
                    328,
                    329,
                    334,
                    337,
                    341,
                    348,
                    365,
                    384,
                    393,
                    396,
                    397,
                    399,
                    402,
                    405,
                    416,
                    427,
                    429,
                    431,
                    445,
                    447,
                    451,
                    453,
                    456,
                    457,
                    459,
                    467,
                    468,
                    473,
                    504,
                    510
                ],
                "property": [
                    421,
                    434,
                    245,
                    249,
                    318
                ],
                "no_default": [
                    254,
                    255
                ],
                "self.name": [
                    384,
                    618,
                    365,
                    726,
                    696,
                    348,
                    255
                ],
                "cache": [
                    256,
                    261
                ],
                "self._cache.copy": [
                    256
                ],
                "self._cache": [
                    256,
                    731
                ],
                "self._data": [
                    258,
                    669,
                    617,
                    696,
                    285
                ],
                "self._simple_new": [
                    260
                ],
                "other": [
                    649,
                    653,
                    654,
                    661,
                    662,
                    663,
                    281,
                    666,
                    285,
                    287,
                    288,
                    291,
                    675,
                    293,
                    294,
                    676,
                    678,
                    679,
                    298,
                    681,
                    684,
                    685,
                    687,
                    691,
                    692,
                    694,
                    698,
                    699,
                    701,
                    704,
                    707,
                    708,
                    711,
                    713,
                    715,
                    716,
                    718,
                    624,
                    626,
                    628,
                    633
                ],
                "timedelta": [
                    281
                ],
                "np.timedelta64": [
                    281
                ],
                "Tick": [
                    281,
                    283
                ],
                "np.ndarray": [
                    281,
                    386
                ],
                "offset": [
                    282,
                    283
                ],
                "frequencies.to_offset": [
                    282
                ],
                "frequencies": [
                    282
                ],
                "self.freq.rule_code": [
                    282,
                    290
                ],
                "self.freq": [
                    384,
                    516,
                    393,
                    522,
                    396,
                    653,
                    535,
                    282,
                    290,
                    309,
                    568,
                    571,
                    445,
                    589,
                    334,
                    593,
                    725,
                    603,
                    611,
                    510
                ],
                "delta": [
                    285,
                    286
                ],
                "self._data._check_timedeltalike_freq_compat": [
                    285
                ],
                "freqstr": [
                    288,
                    289
                ],
                "other.rule_code": [
                    288
                ],
                "base": [
                    289,
                    290
                ],
                "libfrequencies.get_base_alias": [
                    289
                ],
                "libfrequencies": [
                    289
                ],
                "other.n": [
                    291
                ],
                "raise_on_incompatible": [
                    654,
                    301,
                    293,
                    397
                ],
                "is_integer": [
                    530,
                    578,
                    294
                ],
                "DtypeObj": [
                    303
                ],
                "PeriodDtype": [
                    307
                ],
                "dtype.freq": [
                    309
                ],
                "bool": [
                    601,
                    332,
                    422,
                    303
                ],
                "_values": [
                    316
                ],
                "self.astype": [
                    612,
                    714,
                    683,
                    627,
                    699,
                    316
                ],
                "self.array._formatter": [
                    320
                ],
                "self.array": [
                    320
                ],
                "period": [
                    328,
                    329
                ],
                "weakref.ref": [
                    328
                ],
                "weakref": [
                    328
                ],
                "self._engine_type": [
                    329
                ],
                "len": [
                    707,
                    360,
                    329,
                    427,
                    402
                ],
                "cache_readonly": [
                    346,
                    325
                ],
                "Any": [
                    332
                ],
                "key": [
                    513,
                    522,
                    523,
                    526,
                    528,
                    530,
                    532,
                    535,
                    541,
                    333,
                    334,
                    337,
                    339,
                    341,
                    603,
                    608,
                    496,
                    498,
                    499,
                    501,
                    504,
                    510
                ],
                "Period": [
                    611,
                    522,
                    588,
                    333,
                    371,
                    535,
                    568,
                    797
                ],
                "key.freq": [
                    334
                ],
                "key.ordinal": [
                    337
                ],
                "self._engine": [
                    337
                ],
                "hash": [
                    339
                ],
                "self.get_loc": [
                    523,
                    341
                ],
                "KeyError": [
                    608,
                    513,
                    577,
                    585,
                    526,
                    607,
                    532,
                    343,
                    538,
                    542,
                    543
                ],
                "doc": [
                    409,
                    331
                ],
                "Index.__contains__": [
                    331
                ],
                "Index": [
                    331,
                    461,
                    370,
                    372,
                    409,
                    541
                ],
                "Int64Index._simple_new": [
                    665,
                    666,
                    348
                ],
                "self.asi8": [
                    431,
                    399,
                    405,
                    665,
                    348
                ],
                "context": [
                    360,
                    361,
                    366,
                    367
                ],
                "tuple": [
                    360
                ],
                "func": [
                    361,
                    362,
                    364,
                    373,
                    374,
                    375
                ],
                "np.add": [
                    362
                ],
                "np.subtract": [
                    364
                ],
                "left": [
                    368,
                    369,
                    371,
                    366
                ],
                "right": [
                    368,
                    369,
                    371,
                    367
                ],
                "PeriodIndex": [
                    736,
                    737,
                    802,
                    742,
                    393,
                    394,
                    653,
                    368,
                    626,
                    723,
                    726,
                    444
                ],
                "left.name": [
                    369
                ],
                "right.name": [
                    369
                ],
                "np.ufunc": [
                    373
                ],
                "func.types": [
                    374
                ],
                "msg": [
                    378,
                    375
                ],
                "func.__name__": [
                    375
                ],
                "ValueError": [
                    430,
                    506,
                    599,
                    536,
                    793,
                    378,
                    574
                ],
                "is_bool_dtype": [
                    380
                ],
                "where_idx": [
                    391,
                    392,
                    393,
                    394,
                    396,
                    397,
                    399,
                    405
                ],
                "where": [
                    391
                ],
                "DatetimeIndex": [
                    392
                ],
                "where_idx._values": [
                    393
                ],
                "where_idx.freq": [
                    396
                ],
                "locs": [
                    401,
                    402,
                    405,
                    399
                ],
                "searchsorted": [
                    399
                ],
                "mask": [
                    402,
                    404,
                    399
                ],
                "where_idx.asi8": [
                    405,
                    399
                ],
                "np.where": [
                    401
                ],
                "take": [
                    402
                ],
                "np.arange": [
                    402
                ],
                "first": [
                    404,
                    405
                ],
                "mask.argmax": [
                    404
                ],
                "pandas_dtype": [
                    411
                ],
                "is_datetime64_any_dtype": [
                    413
                ],
                "tz": [
                    416,
                    415
                ],
                "getattr": [
                    667,
                    415
                ],
                "tz_localize": [
                    416
                ],
                "self.to_timestamp": [
                    416
                ],
                "how": [
                    416,
                    634,
                    628
                ],
                "astype": [
                    419,
                    699
                ],
                "super": [
                    649,
                    730,
                    419,
                    708
                ],
                "Index.astype": [
                    409
                ],
                "self.is_monotonic": [
                    429
                ],
                "all": [
                    432
                ],
                "str": [
                    545,
                    583,
                    591,
                    601,
                    656,
                    435,
                    501,
                    569
                ],
                "target": [
                    450,
                    456,
                    461,
                    465,
                    467,
                    471,
                    473,
                    442,
                    444,
                    445
                ],
                "ensure_index": [
                    676,
                    465,
                    692,
                    663,
                    442
                ],
                "target.freq": [
                    445
                ],
                "no_matches": [
                    448,
                    468,
                    469,
                    447
                ],
                "np.ones": [
                    468,
                    447
                ],
                "self.shape": [
                    468,
                    447
                ],
                "np.intp": [
                    468,
                    447
                ],
                "target.asi8": [
                    450,
                    471
                ],
                "self_index": [
                    461,
                    457,
                    451,
                    453
                ],
                "self._int64index": [
                    473,
                    451,
                    732
                ],
                "tolerance": [
                    455,
                    456,
                    523,
                    459,
                    461,
                    541
                ],
                "self._convert_tolerance": [
                    456
                ],
                "self._maybe_convert_timedelta": [
                    459
                ],
                "Index.get_indexer": [
                    461
                ],
                "method": [
                    541,
                    525,
                    523,
                    461
                ],
                "limit": [
                    461
                ],
                "Appender": [
                    440,
                    463
                ],
                "_index_shared_docs": [
                    440,
                    463
                ],
                "self._is_comparable_dtype": [
                    467
                ],
                "target.dtype": [
                    467
                ],
                "indexer": [
                    473,
                    474
                ],
                "missing": [
                    473,
                    474
                ],
                "self._int64index.get_indexer_non_unique": [
                    473
                ],
                "ensure_platform_int": [
                    474
                ],
                "orig_key": [
                    496,
                    538,
                    543
                ],
                "is_scalar": [
                    498
                ],
                "InvalidIndexError": [
                    499
                ],
                "loc": [
                    612,
                    615,
                    523,
                    524,
                    504,
                    505
                ],
                "self._get_string_slice": [
                    504
                ],
                "asdt": [
                    528,
                    522,
                    510
                ],
                "reso": [
                    515,
                    584,
                    585,
                    606,
                    587,
                    592,
                    603,
                    571,
                    572,
                    510
                ],
                "parse_time_string": [
                    603,
                    571,
                    510
                ],
                "DateParseError": [
                    511
                ],
                "err": [
                    608,
                    577,
                    513,
                    538,
                    543
                ],
                "grp": [
                    515,
                    519,
                    521,
                    587,
                    588,
                    592,
                    595
                ],
                "resolution.Resolution.get_freq_group": [
                    592,
                    587,
                    515
                ],
                "resolution.Resolution": [
                    592,
                    587,
                    515
                ],
                "resolution": [
                    515,
                    516,
                    587,
                    592,
                    593
                ],
                "freqn": [
                    516,
                    519,
                    521,
                    593,
                    595
                ],
                "resolution.get_freq_group": [
                    593,
                    516
                ],
                "Index.get_loc": [
                    541
                ],
                "kind": [
                    565
                ],
                "label": [
                    577,
                    578,
                    579,
                    581,
                    567,
                    568,
                    569,
                    571
                ],
                "datetime": [
                    583,
                    567
                ],
                "parsed": [
                    588,
                    571,
                    603,
                    572,
                    606
                ],
                "bounds": [
                    572,
                    573
                ],
                "self._parsed_string_to_bounds": [
                    572
                ],
                "side": [
                    573
                ],
                "is_float": [
                    578
                ],
                "self._invalid_indexer": [
                    579
                ],
                "iv": [
                    588,
                    589
                ],
                "iv.asfreq": [
                    589
                ],
                "self._partial_date_slice": [
                    606
                ],
                "use_lhs": [
                    606
                ],
                "use_rhs": [
                    606
                ],
                "item": [
                    611,
                    612,
                    615
                ],
                "item.freq": [
                    611
                ],
                "insert": [
                    612
                ],
                "i8result": [
                    617,
                    667,
                    669,
                    614
                ],
                "np.concatenate": [
                    614
                ],
                "asi8": [
                    615
                ],
                "np.array": [
                    615
                ],
                "item.ordinal": [
                    615
                ],
                "arr": [
                    617,
                    618
                ],
                "_simple_new": [
                    696,
                    617,
                    618,
                    670
                ],
                "self.dtype": [
                    701,
                    617,
                    681,
                    713,
                    699,
                    669
                ],
                "self._assert_can_do_setop": [
                    624,
                    691,
                    675,
                    661
                ],
                "join": [
                    627
                ],
                "level": [
                    635,
                    628
                ],
                "return_indexers": [
                    636,
                    628,
                    640
                ],
                "sort": [
                    704,
                    674,
                    708,
                    716,
                    685,
                    718,
                    687,
                    690,
                    660,
                    628,
                    667,
                    637
                ],
                "Int64Index.join": [
                    631
                ],
                "lidx": [
                    641,
                    642
                ],
                "ridx": [
                    641,
                    642
                ],
                "self._apply_meta": [
                    642,
                    643
                ],
                "_assert_can_do_setop": [
                    649
                ],
                "other.freq": [
                    653
                ],
                "self._validate_sort_keyword": [
                    690,
                    674,
                    660
                ],
                "res_name": [
                    670,
                    662
                ],
                "get_op_result_name": [
                    662
                ],
                "i8self": [
                    665,
                    667
                ],
                "i8other": [
                    666,
                    667
                ],
                "other.asi8": [
                    666
                ],
                "opname": [
                    667
                ],
                "parr": [
                    669,
                    670
                ],
                "self.equals": [
                    707,
                    694,
                    678
                ],
                "self._get_reconciled_name_object": [
                    679
                ],
                "is_dtype_equal": [
                    681,
                    713,
                    701
                ],
                "other.dtype": [
                    681,
                    713,
                    701
                ],
                "this": [
                    714,
                    683,
                    716,
                    685
                ],
                "other.astype": [
                    715,
                    684
                ],
                "this.intersection": [
                    685
                ],
                "self._setop": [
                    704,
                    718,
                    687
                ],
                "is_object_dtype": [
                    698
                ],
                "difference": [
                    699
                ],
                "_union": [
                    708
                ],
                "this._union": [
                    716
                ],
                "rawarr": [
                    723,
                    724,
                    725,
                    726,
                    727
                ],
                "PeriodIndex._simple_new": [
                    726
                ],
                "memory_usage": [
                    730
                ],
                "deep": [
                    730,
                    732
                ],
                "hasattr": [
                    731
                ],
                "self._int64index.memory_usage": [
                    732
                ],
                "inherit_names": [
                    75,
                    69
                ],
                "PeriodArray._field_ops": [
                    71
                ],
                "PeriodIndex._add_numeric_methods_disabled": [
                    736
                ],
                "PeriodIndex._add_logical_methods_disabled": [
                    737
                ],
                "com.count_not_none": [
                    792
                ],
                "com": [
                    792
                ],
                "start": [
                    792,
                    800,
                    797
                ],
                "end": [
                    792,
                    800,
                    797
                ],
                "periods": [
                    792,
                    800
                ]
            },
            "filtered_variables_in_file": {
                "_index_doc_kwargs": [
                    440,
                    52,
                    53,
                    463
                ],
                "dict": [
                    52,
                    53
                ],
                "ibase._index_doc_kwargs": [
                    52
                ],
                "ibase": [
                    52
                ],
                "_index_doc_kwargs.update": [
                    53
                ],
                "values": [
                    64,
                    256,
                    66,
                    257,
                    258,
                    260,
                    231,
                    234,
                    236,
                    431,
                    432,
                    60,
                    61,
                    63
                ],
                "d.pop": [
                    60,
                    62
                ],
                "d": [
                    64,
                    66,
                    60,
                    62
                ],
                "values.dtype": [
                    61
                ],
                "freq": [
                    800,
                    193,
                    801,
                    195,
                    197,
                    202,
                    205,
                    798,
                    210,
                    213,
                    152,
                    62,
                    797,
                    190,
                    63
                ],
                "PeriodArray": [
                    800,
                    801,
                    195,
                    231,
                    71,
                    72,
                    75,
                    210,
                    724,
                    725,
                    151,
                    221,
                    190,
                    63
                ],
                "cls._simple_new": [
                    64,
                    218
                ],
                "cls": [
                    64,
                    66,
                    218,
                    202,
                    233,
                    186
                ],
                "DatetimeIndexOpsMixin": [
                    76
                ],
                "Int64Index": [
                    76,
                    631,
                    665,
                    666,
                    347,
                    348
                ],
                "_typ": [
                    144
                ],
                "_attributes": [
                    145
                ],
                "_is_numeric_dtype": [
                    148
                ],
                "_infer_as_myclass": [
                    149
                ],
                "_data": [
                    151
                ],
                "DateOffset": [
                    152,
                    287
                ],
                "_engine_type": [
                    154
                ],
                "libindex.PeriodEngine": [
                    154
                ],
                "libindex": [
                    154
                ],
                "_supports_partial_string_indexing": [
                    155
                ],
                "valid_field_set": [
                    172,
                    182,
                    183
                ],
                "issubset": [
                    182
                ],
                "set": [
                    182,
                    183
                ],
                "fields": [
                    190,
                    182,
                    183
                ],
                "argument": [
                    184,
                    183
                ],
                "list": [
                    183
                ],
                "TypeError": [
                    184,
                    506,
                    395
                ],
                "name": [
                    802,
                    260,
                    186,
                    237,
                    365,
                    369,
                    370,
                    372,
                    218,
                    255
                ],
                "maybe_extract_name": [
                    186
                ],
                "data": [
                    800,
                    801,
                    802,
                    195,
                    218,
                    202,
                    205,
                    207,
                    210,
                    213,
                    216,
                    186,
                    188,
                    190
                ],
                "ordinal": [
                    209,
                    210,
                    188,
                    207
                ],
                "freq2": [
                    193,
                    190
                ],
                "PeriodArray._generate_range": [
                    800,
                    190
                ],
                "validate_dtype_freq": [
                    197
                ],
                "dtype": [
                    419,
                    197,
                    307,
                    309,
                    411,
                    413,
                    415
                ],
                "isinstance": [
                    392,
                    394,
                    653,
                    281,
                    283,
                    797,
                    287,
                    307,
                    567,
                    569,
                    444,
                    711,
                    202,
                    333,
                    723,
                    724,
                    611,
                    231,
                    360,
                    368,
                    626,
                    371,
                    373,
                    501
                ],
                "data.freq": [
                    202
                ],
                "data.asfreq": [
                    205
                ],
                "np.asarray": [
                    209,
                    669,
                    247
                ],
                "np": [
                    386,
                    614,
                    615,
                    362,
                    364,
                    209,
                    401,
                    402,
                    468,
                    373,
                    247,
                    281,
                    669,
                    447
                ],
                "np.int64": [
                    209,
                    669
                ],
                "period_array": [
                    213
                ],
                "copy": [
                    419,
                    215
                ],
                "data.copy": [
                    216
                ],
                "Label": [
                    221,
                    254
                ],
                "type": [
                    384,
                    231,
                    711,
                    617,
                    618,
                    696,
                    669,
                    670
                ],
                "result": [
                    384,
                    641,
                    642,
                    643,
                    260,
                    261,
                    262,
                    402,
                    405,
                    407,
                    670,
                    671,
                    730,
                    732,
                    733,
                    233,
                    234,
                    236,
                    237,
                    238,
                    239,
                    240,
                    370,
                    372,
                    631,
                    380,
                    381
                ],
                "object.__new__": [
                    233
                ],
                "object": [
                    612,
                    233,
                    627,
                    699,
                    316
                ],
                "result._data": [
                    234
                ],
                "result._index_data": [
                    236
                ],
                "values._data": [
                    236
                ],
                "result.name": [
                    237
                ],
                "result._cache": [
                    261,
                    238
                ],
                "result._reset_identity": [
                    239
                ],
                "classmethod": [
                    220
                ],
                "self": [
                    516,
                    522,
                    523,
                    535,
                    541,
                    568,
                    571,
                    572,
                    579,
                    589,
                    593,
                    603,
                    606,
                    611,
                    612,
                    615,
                    617,
                    618,
                    624,
                    627,
                    632,
                    642,
                    643,
                    653,
                    654,
                    660,
                    661,
                    662,
                    665,
                    669,
                    670,
                    674,
                    675,
                    678,
                    679,
                    681,
                    683,
                    687,
                    690,
                    691,
                    694,
                    696,
                    699,
                    701,
                    702,
                    704,
                    707,
                    711,
                    713,
                    714,
                    718,
                    725,
                    726,
                    731,
                    732,
                    247,
                    255,
                    256,
                    258,
                    260,
                    282,
                    285,
                    290,
                    293,
                    301,
                    309,
                    316,
                    320,
                    328,
                    329,
                    334,
                    337,
                    341,
                    348,
                    365,
                    384,
                    393,
                    396,
                    397,
                    399,
                    402,
                    405,
                    416,
                    427,
                    429,
                    431,
                    445,
                    447,
                    451,
                    453,
                    456,
                    457,
                    459,
                    467,
                    468,
                    473,
                    504,
                    510
                ],
                "property": [
                    421,
                    434,
                    245,
                    249,
                    318
                ],
                "no_default": [
                    254,
                    255
                ],
                "self.name": [
                    384,
                    618,
                    365,
                    726,
                    696,
                    348,
                    255
                ],
                "cache": [
                    256,
                    261
                ],
                "self._cache.copy": [
                    256
                ],
                "self._cache": [
                    256,
                    731
                ],
                "self._data": [
                    258,
                    669,
                    617,
                    696,
                    285
                ],
                "self._simple_new": [
                    260
                ],
                "other": [
                    649,
                    653,
                    654,
                    661,
                    662,
                    663,
                    281,
                    666,
                    285,
                    287,
                    288,
                    291,
                    675,
                    293,
                    294,
                    676,
                    678,
                    679,
                    298,
                    681,
                    684,
                    685,
                    687,
                    691,
                    692,
                    694,
                    698,
                    699,
                    701,
                    704,
                    707,
                    708,
                    711,
                    713,
                    715,
                    716,
                    718,
                    624,
                    626,
                    628,
                    633
                ],
                "timedelta": [
                    281
                ],
                "np.timedelta64": [
                    281
                ],
                "Tick": [
                    281,
                    283
                ],
                "np.ndarray": [
                    281,
                    386
                ],
                "offset": [
                    282,
                    283
                ],
                "frequencies.to_offset": [
                    282
                ],
                "frequencies": [
                    282
                ],
                "self.freq.rule_code": [
                    282,
                    290
                ],
                "self.freq": [
                    384,
                    516,
                    393,
                    522,
                    396,
                    653,
                    535,
                    282,
                    290,
                    309,
                    568,
                    571,
                    445,
                    589,
                    334,
                    593,
                    725,
                    603,
                    611,
                    510
                ],
                "delta": [
                    285,
                    286
                ],
                "self._data._check_timedeltalike_freq_compat": [
                    285
                ],
                "freqstr": [
                    288,
                    289
                ],
                "other.rule_code": [
                    288
                ],
                "base": [
                    289,
                    290
                ],
                "libfrequencies.get_base_alias": [
                    289
                ],
                "libfrequencies": [
                    289
                ],
                "other.n": [
                    291
                ],
                "raise_on_incompatible": [
                    654,
                    301,
                    293,
                    397
                ],
                "is_integer": [
                    530,
                    578,
                    294
                ],
                "DtypeObj": [
                    303
                ],
                "PeriodDtype": [
                    307
                ],
                "dtype.freq": [
                    309
                ],
                "bool": [
                    601,
                    332,
                    422,
                    303
                ],
                "_values": [
                    316
                ],
                "self.astype": [
                    612,
                    714,
                    683,
                    627,
                    699,
                    316
                ],
                "self.array._formatter": [
                    320
                ],
                "self.array": [
                    320
                ],
                "period": [
                    328,
                    329
                ],
                "weakref.ref": [
                    328
                ],
                "weakref": [
                    328
                ],
                "self._engine_type": [
                    329
                ],
                "len": [
                    707,
                    360,
                    329,
                    427,
                    402
                ],
                "cache_readonly": [
                    346,
                    325
                ],
                "Any": [
                    332
                ],
                "key": [
                    513,
                    522,
                    523,
                    526,
                    528,
                    530,
                    532,
                    535,
                    541,
                    333,
                    334,
                    337,
                    339,
                    341,
                    603,
                    608,
                    496,
                    498,
                    499,
                    501,
                    504,
                    510
                ],
                "Period": [
                    611,
                    522,
                    588,
                    333,
                    371,
                    535,
                    568,
                    797
                ],
                "key.freq": [
                    334
                ],
                "key.ordinal": [
                    337
                ],
                "self._engine": [
                    337
                ],
                "hash": [
                    339
                ],
                "self.get_loc": [
                    523,
                    341
                ],
                "KeyError": [
                    608,
                    513,
                    577,
                    585,
                    526,
                    607,
                    532,
                    343,
                    538,
                    542,
                    543
                ],
                "doc": [
                    409,
                    331
                ],
                "Index.__contains__": [
                    331
                ],
                "Index": [
                    331,
                    461,
                    370,
                    372,
                    409,
                    541
                ],
                "Int64Index._simple_new": [
                    665,
                    666,
                    348
                ],
                "self.asi8": [
                    431,
                    399,
                    405,
                    665,
                    348
                ],
                "context": [
                    360,
                    361,
                    366,
                    367
                ],
                "tuple": [
                    360
                ],
                "func": [
                    361,
                    362,
                    364,
                    373,
                    374,
                    375
                ],
                "np.add": [
                    362
                ],
                "np.subtract": [
                    364
                ],
                "left": [
                    368,
                    369,
                    371,
                    366
                ],
                "right": [
                    368,
                    369,
                    371,
                    367
                ],
                "PeriodIndex": [
                    736,
                    737,
                    802,
                    742,
                    393,
                    394,
                    653,
                    368,
                    626,
                    723,
                    726,
                    444
                ],
                "left.name": [
                    369
                ],
                "right.name": [
                    369
                ],
                "np.ufunc": [
                    373
                ],
                "func.types": [
                    374
                ],
                "msg": [
                    378,
                    375
                ],
                "func.__name__": [
                    375
                ],
                "ValueError": [
                    430,
                    506,
                    599,
                    536,
                    793,
                    378,
                    574
                ],
                "is_bool_dtype": [
                    380
                ],
                "where_idx": [
                    391,
                    392,
                    393,
                    394,
                    396,
                    397,
                    399,
                    405
                ],
                "where": [
                    391
                ],
                "DatetimeIndex": [
                    392
                ],
                "where_idx._values": [
                    393
                ],
                "where_idx.freq": [
                    396
                ],
                "locs": [
                    401,
                    402,
                    405,
                    399
                ],
                "searchsorted": [
                    399
                ],
                "mask": [
                    402,
                    404,
                    399
                ],
                "where_idx.asi8": [
                    405,
                    399
                ],
                "np.where": [
                    401
                ],
                "take": [
                    402
                ],
                "np.arange": [
                    402
                ],
                "first": [
                    404,
                    405
                ],
                "mask.argmax": [
                    404
                ],
                "pandas_dtype": [
                    411
                ],
                "is_datetime64_any_dtype": [
                    413
                ],
                "tz": [
                    416,
                    415
                ],
                "getattr": [
                    667,
                    415
                ],
                "tz_localize": [
                    416
                ],
                "self.to_timestamp": [
                    416
                ],
                "how": [
                    416,
                    634,
                    628
                ],
                "astype": [
                    419,
                    699
                ],
                "super": [
                    649,
                    730,
                    419,
                    708
                ],
                "Index.astype": [
                    409
                ],
                "self.is_monotonic": [
                    429
                ],
                "all": [
                    432
                ],
                "str": [
                    545,
                    583,
                    591,
                    601,
                    656,
                    435,
                    501,
                    569
                ],
                "target": [
                    450,
                    456,
                    461,
                    465,
                    467,
                    471,
                    473,
                    442,
                    444,
                    445
                ],
                "ensure_index": [
                    676,
                    465,
                    692,
                    663,
                    442
                ],
                "target.freq": [
                    445
                ],
                "no_matches": [
                    448,
                    468,
                    469,
                    447
                ],
                "np.ones": [
                    468,
                    447
                ],
                "self.shape": [
                    468,
                    447
                ],
                "np.intp": [
                    468,
                    447
                ],
                "target.asi8": [
                    450,
                    471
                ],
                "self_index": [
                    461,
                    457,
                    451,
                    453
                ],
                "self._int64index": [
                    473,
                    451,
                    732
                ],
                "tolerance": [
                    455,
                    456,
                    523,
                    459,
                    461,
                    541
                ],
                "self._convert_tolerance": [
                    456
                ],
                "self._maybe_convert_timedelta": [
                    459
                ],
                "Index.get_indexer": [
                    461
                ],
                "method": [
                    541,
                    525,
                    523,
                    461
                ],
                "limit": [
                    461
                ],
                "Appender": [
                    440,
                    463
                ],
                "_index_shared_docs": [
                    440,
                    463
                ],
                "self._is_comparable_dtype": [
                    467
                ],
                "target.dtype": [
                    467
                ],
                "indexer": [
                    473,
                    474
                ],
                "missing": [
                    473,
                    474
                ],
                "self._int64index.get_indexer_non_unique": [
                    473
                ],
                "ensure_platform_int": [
                    474
                ],
                "orig_key": [
                    496,
                    538,
                    543
                ],
                "is_scalar": [
                    498
                ],
                "InvalidIndexError": [
                    499
                ],
                "loc": [
                    612,
                    615,
                    523,
                    524,
                    504,
                    505
                ],
                "self._get_string_slice": [
                    504
                ],
                "asdt": [
                    528,
                    522,
                    510
                ],
                "reso": [
                    515,
                    584,
                    585,
                    606,
                    587,
                    592,
                    603,
                    571,
                    572,
                    510
                ],
                "parse_time_string": [
                    603,
                    571,
                    510
                ],
                "DateParseError": [
                    511
                ],
                "err": [
                    608,
                    577,
                    513,
                    538,
                    543
                ],
                "grp": [
                    515,
                    519,
                    521,
                    587,
                    588,
                    592,
                    595
                ],
                "resolution.Resolution.get_freq_group": [
                    592,
                    587,
                    515
                ],
                "resolution.Resolution": [
                    592,
                    587,
                    515
                ],
                "resolution": [
                    515,
                    516,
                    587,
                    592,
                    593
                ],
                "freqn": [
                    516,
                    519,
                    521,
                    593,
                    595
                ],
                "resolution.get_freq_group": [
                    593,
                    516
                ],
                "Index.get_loc": [
                    541
                ],
                "kind": [
                    565
                ],
                "label": [
                    577,
                    578,
                    579,
                    581,
                    567,
                    568,
                    569,
                    571
                ],
                "datetime": [
                    583,
                    567
                ],
                "parsed": [
                    588,
                    571,
                    603,
                    572,
                    606
                ],
                "bounds": [
                    572,
                    573
                ],
                "self._parsed_string_to_bounds": [
                    572
                ],
                "side": [
                    573
                ],
                "is_float": [
                    578
                ],
                "self._invalid_indexer": [
                    579
                ],
                "iv": [
                    588,
                    589
                ],
                "iv.asfreq": [
                    589
                ],
                "self._partial_date_slice": [
                    606
                ],
                "use_lhs": [
                    606
                ],
                "use_rhs": [
                    606
                ],
                "item": [
                    611,
                    612,
                    615
                ],
                "item.freq": [
                    611
                ],
                "insert": [
                    612
                ],
                "i8result": [
                    617,
                    667,
                    669,
                    614
                ],
                "np.concatenate": [
                    614
                ],
                "asi8": [
                    615
                ],
                "np.array": [
                    615
                ],
                "item.ordinal": [
                    615
                ],
                "arr": [
                    617,
                    618
                ],
                "_simple_new": [
                    696,
                    617,
                    618,
                    670
                ],
                "self.dtype": [
                    701,
                    617,
                    681,
                    713,
                    699,
                    669
                ],
                "self._assert_can_do_setop": [
                    624,
                    691,
                    675,
                    661
                ],
                "join": [
                    627
                ],
                "level": [
                    635,
                    628
                ],
                "return_indexers": [
                    636,
                    628,
                    640
                ],
                "sort": [
                    704,
                    674,
                    708,
                    716,
                    685,
                    718,
                    687,
                    690,
                    660,
                    628,
                    667,
                    637
                ],
                "Int64Index.join": [
                    631
                ],
                "lidx": [
                    641,
                    642
                ],
                "ridx": [
                    641,
                    642
                ],
                "self._apply_meta": [
                    642,
                    643
                ],
                "_assert_can_do_setop": [
                    649
                ],
                "other.freq": [
                    653
                ],
                "self._validate_sort_keyword": [
                    690,
                    674,
                    660
                ],
                "res_name": [
                    670,
                    662
                ],
                "get_op_result_name": [
                    662
                ],
                "i8self": [
                    665,
                    667
                ],
                "i8other": [
                    666,
                    667
                ],
                "other.asi8": [
                    666
                ],
                "opname": [
                    667
                ],
                "parr": [
                    669,
                    670
                ],
                "self.equals": [
                    707,
                    694,
                    678
                ],
                "self._get_reconciled_name_object": [
                    679
                ],
                "is_dtype_equal": [
                    681,
                    713,
                    701
                ],
                "other.dtype": [
                    681,
                    713,
                    701
                ],
                "this": [
                    714,
                    683,
                    716,
                    685
                ],
                "other.astype": [
                    715,
                    684
                ],
                "this.intersection": [
                    685
                ],
                "self._setop": [
                    704,
                    718,
                    687
                ],
                "is_object_dtype": [
                    698
                ],
                "difference": [
                    699
                ],
                "_union": [
                    708
                ],
                "this._union": [
                    716
                ],
                "rawarr": [
                    723,
                    724,
                    725,
                    726,
                    727
                ],
                "PeriodIndex._simple_new": [
                    726
                ],
                "memory_usage": [
                    730
                ],
                "deep": [
                    730,
                    732
                ],
                "hasattr": [
                    731
                ],
                "self._int64index.memory_usage": [
                    732
                ],
                "inherit_names": [
                    75,
                    69
                ],
                "PeriodArray._field_ops": [
                    71
                ],
                "PeriodIndex._add_numeric_methods_disabled": [
                    736
                ],
                "PeriodIndex._add_logical_methods_disabled": [
                    737
                ],
                "com.count_not_none": [
                    792
                ],
                "com": [
                    792
                ],
                "start": [
                    792,
                    800,
                    797
                ],
                "end": [
                    792,
                    800,
                    797
                ],
                "periods": [
                    792,
                    800
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/tests/indexes/multi/test_get_level_values.py",
                "test_function": "test_get_level_values_when_periods",
                "test_function_code": "def test_get_level_values_when_periods():\n    # GH33131. See also discussion in GH32669.\n    # This test can probably be removed when PeriodIndex._engine is removed.\n    from pandas import Period, PeriodIndex\n\n    idx = MultiIndex.from_arrays(\n        [PeriodIndex([Period(\"2019Q1\"), Period(\"2019Q2\")], name=\"b\")]\n    )\n    idx2 = MultiIndex.from_arrays(\n        [idx._get_level_values(level) for level in range(idx.nlevels)]\n    )\n    assert all(x.is_monotonic for x in idx2.levels)",
                "test_error": "AttributeError: 'NoneType' object has no attribute 'view'",
                "full_test_error": "def test_get_level_values_when_periods():\n        # GH33131. See also discussion in GH32669.\n        # This test can probably be removed when PeriodIndex._engine is removed.\n        from pandas import Period, PeriodIndex\n    \n        idx = MultiIndex.from_arrays(\n            [PeriodIndex([Period(\"2019Q1\"), Period(\"2019Q2\")], name=\"b\")]\n        )\n        idx2 = MultiIndex.from_arrays(\n            [idx._get_level_values(level) for level in range(idx.nlevels)]\n        )\n>       assert all(x.is_monotonic for x in idx2.levels)\n\npandas/tests/indexes/multi/test_get_level_values.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/tests/indexes/multi/test_get_level_values.py:105: in <genexpr>\n    assert all(x.is_monotonic for x in idx2.levels)\npandas/core/indexes/base.py:1548: in is_monotonic\n    return self.is_monotonic_increasing\npandas/core/indexes/base.py:1565: in is_monotonic_increasing\n    return self._engine.is_monotonic_increasing\npandas/_libs/index.pyx:172: in pandas._libs.index.IndexEngine.is_monotonic_increasing.__get__\n    self._do_monotonic_check()\npandas/_libs/index.pyx:187: in pandas._libs.index.IndexEngine._do_monotonic_check\n    values = self._get_index_values()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   return super(PeriodEngine, self).vgetter().view(\"i8\")\nE   AttributeError: 'NoneType' object has no attribute 'view'\n\npandas/_libs/index.pyx:499: AttributeError",
                "traceback": "pandas/tests/indexes/multi/test_get_level_values.py:105: in <genexpr>\n    assert all(x.is_monotonic for x in idx2.levels)\npandas/core/indexes/base.py:1548: in is_monotonic\n    return self.is_monotonic_increasing\npandas/core/indexes/base.py:1565: in is_monotonic_increasing\n    return self._engine.is_monotonic_increasing\npandas/_libs/index.pyx:172: in pandas._libs.index.IndexEngine.is_monotonic_increasing.__get__\n    self._do_monotonic_check()\npandas/_libs/index.pyx:187: in pandas._libs.index.IndexEngine._do_monotonic_check\n    values = self._get_index_values()",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   return super(PeriodEngine, self).vgetter().view(\"i8\")\nE   AttributeError: 'NoneType' object has no attribute 'view'\n\npandas/_libs/index.pyx:499: AttributeError",
                "test_function_decorators": []
            }
        ]
    }
}