{
    "youtube-dl": [
        {
            "bugID": 28,
            "bitvector": {
                "1.3.1": 0,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.1.2": 1,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 385,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def _htmlentity_transform(entity):\n    import html.entities as compat_html_entities\n    import re\n    \"\"\"\n    Transforms an HTML entity to a character.\n    \"\"\"\n    \n    # Known named HTML entity\n    if entity in compat_html_entities.name2codepoint:\n        return chr(compat_html_entities.name2codepoint[entity])\n    \n    mobj = re.match(r'&#(x[0-9a-fA-F]+|[0-9]+);', entity)\n    if mobj is not None:\n        numstr = mobj.group(1)\n        base = 16 if numstr.startswith('x') else 10\n        try:\n            codepoint = int(numstr, base)\n            if codepoint < 0x110000:  # Check if codepoint is within valid Unicode range\n                return chr(codepoint)\n            else:\n                return ('&%s;' % numstr)  # Return the entity if codepoint is out of range\n        except (ValueError, OverflowError):\n            return ('&%s;' % numstr)  # Return the entity if conversion fails\n    \n    # Unknown entity in name, return its literal representation\n    return ('&%s;' % entity)"
        }
    ]
}