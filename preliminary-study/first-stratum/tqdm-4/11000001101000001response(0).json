{
    "tqdm": [
        {
            "bugID": 4,
            "bitvector": {
                "1.3.1": 1,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.1.2": 0,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 0,
                "2.1.1": 1,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 252,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(self, n, total, elapsed, ncols=None, prefix='', ascii=False,\n                     unit='it', unit_scale=False, rate=None, bar_format=None,\n                     postfix=None, unit_divisor=1000, **extra_kwargs):\n        \n\n    if total and n > total:\n        total = None\n    \n    if unit_scale and unit_scale not in (True, 1):\n        total *= unit_scale\n        n *= unit_scale\n        if rate:\n            rate *= unit_scale\n        unit_scale = False\n    \n    elapsed_str = self.format_interval(elapsed)\n    \n    if rate is None and elapsed:\n        rate = n / elapsed\n    inv_rate = 1 / rate if rate else None\n    \n    rate_noinv_fmt = ((self.format_sizeof(rate) if unit_scale else '{0:5.2f}'.format(rate))\n                      if rate else '?') + unit + '/s'\n    rate_inv_fmt = ((self.format_sizeof(inv_rate) if unit_scale else '{0:5.2f}'.format(inv_rate))\n                    if inv_rate else '?') + 's/' + unit\n    rate_fmt = rate_inv_fmt if inv_rate and inv_rate > 1 else rate_noinv_fmt\n    \n    if unit_scale:\n        n_fmt = self.format_sizeof(n, divisor=unit_divisor)\n        total_fmt = self.format_sizeof(total, divisor=unit_divisor) if total else None\n    else:\n        n_fmt = str(n)\n        total_fmt = str(total)\n    \n    try:\n        postfix = ', ' + postfix if postfix else ''\n    except TypeError:\n        pass\n    \n    if total:\n        frac = n / total\n        percentage = frac * 100\n        \n        remaining = (total - n) / rate if rate else 0\n        remaining_str = self.format_interval(remaining) if rate else '?'\n        \n        if prefix:\n            bool_prefix_colon_already = (prefix[-2:] == \": \")\n            l_bar = prefix if bool_prefix_colon_already else prefix + \": \"\n        else:\n            l_bar = ''\n        l_bar += '{0:3.0f}%|'.format(percentage)\n        r_bar = '| {0}/{1} [{2}<{3}, {4}{5}]'.format(\n            n_fmt, total_fmt, elapsed_str, remaining_str, rate_fmt, postfix)\n        \n        if ncols == 0:\n            return l_bar[:-1] + r_bar[1:]\n        \n        if bar_format:\n            format_dict = {\n                \"n\": n, \"n_fmt\": n_fmt, \"total\": total, \"total_fmt\": total_fmt,\n                \"percentage\": percentage, \"rate\": inv_rate if inv_rate and inv_rate > 1 else rate,\n                \"rate_fmt\": rate_fmt, \"rate_noinv\": rate, \"rate_noinv_fmt\": rate_noinv_fmt,\n                \"rate_inv\": inv_rate, \"rate_inv_fmt\": rate_inv_fmt, \"elapsed\": elapsed_str, \"elapsed_s\": elapsed,\n                \"remaining\": remaining_str, \"remaining_s\": remaining, \"l_bar\": l_bar, \"r_bar\": r_bar,\n                \"desc\": prefix or '', \"postfix\": postfix, \"unit\": unit, **extra_kwargs\n            }\n            \n            if not prefix:\n                bar_format = bar_format.replace(\"{desc}: \", '')\n            \n            if '{bar}' in bar_format:\n                l_bar_user, r_bar_user = bar_format.split('{bar}')\n                l_bar = l_bar_user.format(**format_dict)\n                r_bar = r_bar_user.format(**format_dict)\n            else:\n                return bar_format.format(**format_dict)\n    \n    else:\n        return ((prefix + \": \") if prefix else '') + '{0}{1} [{2}, {3}{4}]'.format(\n            n_fmt, unit, elapsed_str, rate_fmt, postfix)"
        }
    ]
}