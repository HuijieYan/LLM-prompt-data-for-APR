{
    "pandas": [
        {
            "bugID": 122,
            "bitvector": {
                "1.3.2": 1,
                "1.2.4": 1,
                "1.2.1": 0,
                "1.3.4": 0,
                "2.1.1": 1,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "start_line": 1386,
            "file_name": "pandas/core/internals/managers.py",
            "replace_code": "def equals(self, other):\n        # consolidating inplace to get blocks before comparing\n        self.consolidate_inplace()\n        other.consolidate_inplace()\n\n        if len(self.axes) != len(other.axes):\n            return False\n\n        axes = zip(self.axes, other.axes)\n        if not all(ax1.equals(ax2) for ax1, ax2 in axes):\n            return False\n\n        if len(self.blocks) != len(other.blocks):\n            return False\n\n        # canonicalize block order, using a tuple combining the type\n        # name and then mgr_locs because there might be unconsolidated\n        # blocks (say, Categorical) which can only be distinguished by\n        # the iteration order\n        def canonicalize(block):\n            return (block.dtype.name, block.mgr_locs.as_array().tolist())\n\n        self_blocks = sorted(self.blocks, key=canonicalize)\n        other_blocks = sorted(other.blocks, key=canonicalize)\n\n        return all(block.equals(oblock) for block, oblock in zip(self_blocks, other_blocks))"
        }
    ]
}