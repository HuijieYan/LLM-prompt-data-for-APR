{
    "pandas": [
        {
            "bugID": 129,
            "bitvector": {
                "1.3.1": 1,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.1.2": 0,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 0,
                "2.1.1": 1,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 1302,
            "file_name": "pandas/core/arrays/datetimelike.py",
            "replace_code": "def __rsub__(self, other):\n    from pandas.core.arrays import DatetimeArray\n    self_datetime = is_datetime64_any_dtype(self.dtype)\n    other_datetime = is_datetime64_any_dtype(other)\n    \n    if self_datetime and is_timedelta64_dtype(self.dtype):\n        if not isinstance(other, DatetimeLikeArrayMixin):\n            from pandas.core.arrays import DatetimeArray\n            other = DatetimeArray(other)\n        return other - self\n    elif (self_datetime and hasattr(other, \"dtype\") and not is_datetime64_any_dtype(other.dtype)):\n        raise TypeError(\"cannot subtract {cls} from {typ}\".format(cls=type(self).__name__, typ=type(other).__name__))\n    elif is_period_dtype(self.dtype) and is_timedelta64_dtype(other):\n        raise TypeError(\"cannot subtract {cls} from {dtype}\".format(cls=type(self).__name__, dtype=other.dtype))\n    elif is_timedelta64_dtype(self.dtype):\n        if lib.is_integer(other) or is_integer_dtype(other):\n            return -(self - other)\n        return (-self) + other\n    \n    return -(self - other)"
        }
    ]
}