{
    "pandas": [
        {
            "bugID": 129,
            "bitvector": {
                "1.3.2": 0,
                "1.2.4": 0,
                "1.2.1": 0,
                "1.3.4": 1,
                "2.1.1": 1,
                "2.1.2": 0,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 0,
                "3.1.2": 1,
                "cot": 0
            },
            "start_line": 1302,
            "file_name": "pandas/core/arrays/datetimelike.py",
            "replace_code": "def __rsub__(self, other):\n    from pandas import DatetimeIndex\n    if is_datetime64_any_dtype(other) and is_timedelta64_dtype(self.dtype):\n        # ndarray[datetime64] cannot be subtracted from self, so\n        # we need to wrap in DatetimeArray/Index and flip the operation\n        from pandas import DatetimeIndex\n        if not isinstance(other, DatetimeIndex):\n            other = DatetimeIndex(other)\n        return other - self\n    elif is_period_dtype(self.dtype) and is_integer_dtype(other):\n        # TODO: Can we simplify/generalize these cases at all?\n        raise TypeError(\"Cannot operate with different types.\")\n    elif is_timedelta64_dtype(self.dtype):\n        if lib.is_integer(other) or is_integer_dtype(other):\n            # need to subtract before negating, since that flips freq\n            # -self flips self.freq, messing up results\n            return -(self - other)\n        return (-self) + other\n    return -(self - other)"
        }
    ]
}