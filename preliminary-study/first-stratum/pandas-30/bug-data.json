{
    "pandas:30": {
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/io/json/_json.py": {
            "buggy_functions": [
                {
                    "function_name": "_try_convert_to_date",
                    "function_code": "def _try_convert_to_date(self, data):\n    \"\"\"\n    Try to parse a ndarray like into a date column.\n\n    Try to coerce object in epoch/iso formats and integer/float in epoch\n    formats. Return a boolean if parsing was successful.\n    \"\"\"\n    # no conversion on empty\n    if not len(data):\n        return data, False\n\n    new_data = data\n    if new_data.dtype == \"object\":\n        try:\n            new_data = data.astype(\"int64\")\n        except (TypeError, ValueError, OverflowError):\n            pass\n\n    # ignore numbers that are out of range\n    if issubclass(new_data.dtype.type, np.number):\n        in_range = (\n            isna(new_data._values)\n            | (new_data > self.min_stamp)\n            | (new_data._values == iNaT)\n        )\n        if not in_range.all():\n            return data, False\n\n    date_units = (self.date_unit,) if self.date_unit else self._STAMP_UNITS\n    for date_unit in date_units:\n        try:\n            new_data = to_datetime(new_data, errors=\"raise\", unit=date_unit)\n        except (ValueError, OverflowError):\n            continue\n        return new_data, True\n    return data, False\n",
                    "decorators": [],
                    "docstring": "Try to parse a ndarray like into a date column.\n\nTry to coerce object in epoch/iso formats and integer/float in epoch\nformats. Return a boolean if parsing was successful.",
                    "start_line": 953,
                    "variables": {
                        "len": [
                            961
                        ],
                        "data": [
                            961,
                            962,
                            964,
                            967,
                            979,
                            988
                        ],
                        "new_data": [
                            964,
                            965,
                            967,
                            972,
                            974,
                            975,
                            976,
                            984,
                            987
                        ],
                        "new_data.dtype": [
                            972,
                            965
                        ],
                        "data.astype": [
                            967
                        ],
                        "TypeError": [
                            968
                        ],
                        "ValueError": [
                            968,
                            985
                        ],
                        "OverflowError": [
                            968,
                            985
                        ],
                        "issubclass": [
                            972
                        ],
                        "new_data.dtype.type": [
                            972
                        ],
                        "np.number": [
                            972
                        ],
                        "np": [
                            972
                        ],
                        "in_range": [
                            978,
                            973
                        ],
                        "isna": [
                            974
                        ],
                        "new_data._values": [
                            976,
                            974
                        ],
                        "self.min_stamp": [
                            975
                        ],
                        "self": [
                            981,
                            975
                        ],
                        "iNaT": [
                            976
                        ],
                        "in_range.all": [
                            978
                        ],
                        "date_units": [
                            981,
                            982
                        ],
                        "self.date_unit": [
                            981
                        ],
                        "self._STAMP_UNITS": [
                            981
                        ],
                        "date_unit": [
                            984,
                            982
                        ],
                        "to_datetime": [
                            984
                        ]
                    },
                    "filtered_variables": {
                        "data": [
                            961,
                            962,
                            964,
                            967,
                            979,
                            988
                        ],
                        "new_data": [
                            964,
                            965,
                            967,
                            972,
                            974,
                            975,
                            976,
                            984,
                            987
                        ],
                        "new_data.dtype": [
                            972,
                            965
                        ],
                        "data.astype": [
                            967
                        ],
                        "new_data.dtype.type": [
                            972
                        ],
                        "np.number": [
                            972
                        ],
                        "np": [
                            972
                        ],
                        "in_range": [
                            978,
                            973
                        ],
                        "isna": [
                            974
                        ],
                        "new_data._values": [
                            976,
                            974
                        ],
                        "self.min_stamp": [
                            975
                        ],
                        "self": [
                            981,
                            975
                        ],
                        "iNaT": [
                            976
                        ],
                        "in_range.all": [
                            978
                        ],
                        "date_units": [
                            981,
                            982
                        ],
                        "self.date_unit": [
                            981
                        ],
                        "self._STAMP_UNITS": [
                            981
                        ],
                        "date_unit": [
                            984,
                            982
                        ],
                        "to_datetime": [
                            984
                        ]
                    },
                    "diff_line_number": 985,
                    "class_data": {
                        "signature": "class Parser()",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "__init__(self, json, orient, dtype=None, convert_axes=True, convert_dates=True, keep_default_dates=False, numpy=False, precise_float=False, date_unit=None)",
                            "check_keys_split(self, decoded)",
                            "parse(self)",
                            "_convert_axes(self)",
                            "_try_convert_types(self)",
                            "_try_convert_data(self, name, data, use_dtypes=True, convert_dates=True)",
                            "_try_convert_to_date(self, data)",
                            "_try_convert_dates(self)"
                        ],
                        "constructor_variables": [
                            "dtype",
                            "obj",
                            "convert_dates",
                            "numpy",
                            "convert_axes",
                            "keep_default_dates",
                            "json",
                            "min_stamp",
                            "orient",
                            "precise_float",
                            "date_unit"
                        ],
                        "class_level_variables": [
                            "_STAMP_UNITS",
                            "_MIN_STAMPS"
                        ],
                        "class_decorators": []
                    }
                }
            ],
            "inscope_functions": [
                "to_json(path_or_buf, obj, orient: Optional[str]=None, date_format: str='epoch', double_precision: int=10, force_ascii: bool=True, date_unit: str='ms', default_handler: Optional[Callable[[Any], JSONSerializable]]=None, lines: bool=False, compression: Optional[str]='infer', index: bool=True, indent: int=0)",
                "read_json(path_or_buf=None, orient=None, typ='frame', dtype=None, convert_axes=None, convert_dates=True, keep_default_dates=True, numpy=False, precise_float=False, date_unit=None, encoding=None, lines=False, chunksize=None, compression='infer')",
                "__init__(self, obj, orient: Optional[str], date_format: str, double_precision: int, ensure_ascii: bool, date_unit: str, index: bool, default_handler: Optional[Callable[[Any], JSONSerializable]]=None, indent: int=0)",
                "_format_axes(self)",
                "write(self)",
                "_write(self, obj, orient: Optional[str], double_precision: int, ensure_ascii: bool, date_unit: str, iso_dates: bool, default_handler: Optional[Callable[[Any], JSONSerializable]], indent: int)",
                "_format_axes(self)",
                "_write(self, obj, orient: Optional[str], double_precision: int, ensure_ascii: bool, date_unit: str, iso_dates: bool, default_handler: Optional[Callable[[Any], JSONSerializable]], indent: int)",
                "_format_axes(self)",
                "_write(self, obj, orient: Optional[str], double_precision: int, ensure_ascii: bool, date_unit: str, iso_dates: bool, default_handler: Optional[Callable[[Any], JSONSerializable]], indent: int)",
                "__init__(self, obj, orient: Optional[str], date_format: str, double_precision: int, ensure_ascii: bool, date_unit: str, index: bool, default_handler: Optional[Callable[[Any], JSONSerializable]]=None, indent: int=0)",
                "_write(self, obj, orient, double_precision, ensure_ascii, date_unit, iso_dates, default_handler, indent)",
                "__init__(self, filepath_or_buffer, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, numpy, precise_float, date_unit, encoding, lines, chunksize, compression)",
                "_preprocess_data(self, data)",
                "_get_data_from_filepath(self, filepath_or_buffer)",
                "_combine_lines(self, lines) -> str",
                "read(self)",
                "_get_object_parser(self, json)",
                "close(self)",
                "__next__(self)",
                "__init__(self, json, orient, dtype=None, convert_axes=True, convert_dates=True, keep_default_dates=False, numpy=False, precise_float=False, date_unit=None)",
                "check_keys_split(self, decoded)",
                "parse(self)",
                "_convert_axes(self)",
                "_try_convert_types(self)",
                "_try_convert_data(self, name, data, use_dtypes=True, convert_dates=True)",
                "_try_convert_to_date(self, data)",
                "_try_convert_dates(self)",
                "_parse_no_numpy(self)",
                "_parse_numpy(self)",
                "_try_convert_types(self)",
                "_parse_numpy(self)",
                "_parse_no_numpy(self)",
                "_process_converter(self, f, filt=None)",
                "_try_convert_types(self)",
                "_try_convert_dates(self)",
                "is_ok(col) -> bool"
            ],
            "variables_in_file": {
                "loads": [
                    1059,
                    1092,
                    999,
                    1098,
                    1067,
                    1071,
                    1106,
                    1016,
                    1048,
                    27,
                    1087
                ],
                "json.loads": [
                    27
                ],
                "json": [
                    1060,
                    1092,
                    1098,
                    1067,
                    813,
                    1103,
                    1072,
                    753,
                    1106,
                    1044,
                    758,
                    1049,
                    1082,
                    27,
                    28,
                    1087
                ],
                "dumps": [
                    28,
                    158
                ],
                "json.dumps": [
                    28
                ],
                "TABLE_SCHEMA_VERSION": [
                    30
                ],
                "Optional": [
                    225,
                    260,
                    37,
                    230,
                    42,
                    106,
                    44,
                    112,
                    180,
                    150,
                    185,
                    155,
                    254
                ],
                "str": [
                    258,
                    1157,
                    150,
                    153,
                    37,
                    38,
                    1062,
                    41,
                    44,
                    180,
                    695,
                    183,
                    1091,
                    714,
                    90,
                    225,
                    228,
                    106,
                    107,
                    1002,
                    110,
                    1020,
                    254,
                    255
                ],
                "int": [
                    256,
                    226,
                    261,
                    39,
                    231,
                    108,
                    46,
                    113,
                    181,
                    151,
                    186,
                    156
                ],
                "bool": [
                    257,
                    1153,
                    227,
                    259,
                    229,
                    40,
                    43,
                    109,
                    45,
                    111,
                    756,
                    182,
                    152,
                    154,
                    184
                ],
                "Callable": [
                    260,
                    230,
                    42,
                    112,
                    185,
                    155
                ],
                "Any": [
                    260,
                    230,
                    42,
                    112,
                    185,
                    155
                ],
                "JSONSerializable": [
                    260,
                    230,
                    42,
                    112,
                    185,
                    155
                ],
                "index": [
                    49,
                    83,
                    276,
                    126,
                    319
                ],
                "orient": [
                    643,
                    271,
                    1045,
                    1047,
                    160,
                    1058,
                    1065,
                    815,
                    816,
                    49,
                    817,
                    821,
                    571,
                    59,
                    188,
                    573,
                    62,
                    192,
                    576,
                    66,
                    578,
                    1083,
                    1085,
                    1089,
                    1096,
                    77,
                    590,
                    335,
                    1102,
                    233,
                    238,
                    117,
                    118,
                    120
                ],
                "ValueError": [
                    899,
                    915,
                    662,
                    926,
                    287,
                    938,
                    302,
                    175,
                    50,
                    948,
                    827,
                    699,
                    60,
                    574,
                    572,
                    968,
                    847,
                    210,
                    985,
                    218
                ],
                "path_or_buf": [
                    96,
                    99,
                    583,
                    585,
                    54,
                    55,
                    56,
                    90,
                    91
                ],
                "_": [
                    584,
                    703,
                    55
                ],
                "get_filepath_or_buffer": [
                    584,
                    55
                ],
                "compression": [
                    583,
                    584,
                    585,
                    653,
                    56,
                    602,
                    91
                ],
                "lines": [
                    776,
                    777,
                    778,
                    718,
                    654,
                    719,
                    87,
                    600,
                    59
                ],
                "isinstance": [
                    66,
                    68,
                    292,
                    70,
                    1157,
                    756,
                    695,
                    90,
                    893,
                    62
                ],
                "obj": [
                    1031,
                    779,
                    1035,
                    270,
                    782,
                    783,
                    785,
                    159,
                    289,
                    292,
                    297,
                    298,
                    299,
                    304,
                    305,
                    307,
                    309,
                    310,
                    314,
                    316,
                    189,
                    62,
                    191,
                    63,
                    66,
                    68,
                    70,
                    76,
                    332,
                    726,
                    729,
                    731,
                    733,
                    234,
                    235,
                    237,
                    751,
                    753,
                    115,
                    755,
                    758,
                    760
                ],
                "Series": [
                    68,
                    62
                ],
                "obj.to_frame": [
                    63
                ],
                "obj.name": [
                    298,
                    189,
                    63
                ],
                "writer": [
                    65,
                    67,
                    69,
                    71,
                    75
                ],
                "Type": [
                    65
                ],
                "DataFrame": [
                    1057,
                    66,
                    70,
                    1095,
                    1064,
                    1097,
                    1066,
                    1129,
                    1070,
                    1105,
                    1086
                ],
                "JSONTableWriter": [
                    67
                ],
                "SeriesWriter": [
                    69
                ],
                "FrameWriter": [
                    248,
                    71
                ],
                "NotImplementedError": [
                    73,
                    293
                ],
                "s": [
                    97,
                    99,
                    75,
                    88,
                    93
                ],
                "write": [
                    75
                ],
                "date_format": [
                    281,
                    78,
                    272,
                    121,
                    284
                ],
                "double_precision": [
                    161,
                    193,
                    239,
                    79,
                    273,
                    336,
                    122
                ],
                "force_ascii": [
                    80
                ],
                "date_unit": [
                    163,
                    195,
                    836,
                    828,
                    651,
                    81,
                    241,
                    275,
                    338,
                    984,
                    598,
                    982,
                    824,
                    825,
                    826,
                    124
                ],
                "default_handler": [
                    197,
                    165,
                    82,
                    243,
                    340,
                    277,
                    125
                ],
                "indent": [
                    198,
                    166,
                    244,
                    84,
                    278,
                    341,
                    127
                ],
                "convert_to_line_delimits": [
                    88
                ],
                "fh": [
                    91,
                    93,
                    95
                ],
                "handles": [
                    91
                ],
                "get_handle": [
                    91,
                    703
                ],
                "fh.write": [
                    93
                ],
                "fh.close": [
                    95
                ],
                "path_or_buf.write": [
                    99
                ],
                "self.obj": [
                    1024,
                    1026,
                    1029,
                    1032,
                    137,
                    1035,
                    1057,
                    1064,
                    1066,
                    174,
                    1070,
                    314,
                    316,
                    1086,
                    838,
                    1095,
                    1097,
                    1103,
                    209,
                    1105,
                    213,
                    859,
                    1118,
                    864,
                    870,
                    872,
                    1129,
                    1130,
                    875,
                    1004,
                    1131,
                    1006,
                    1134,
                    115,
                    1144,
                    1022
                ],
                "self": [
                    1024,
                    1026,
                    1029,
                    1031,
                    1032,
                    1035,
                    1044,
                    1045,
                    1053,
                    1057,
                    1060,
                    1063,
                    1064,
                    1066,
                    1067,
                    1070,
                    1076,
                    1082,
                    1083,
                    1086,
                    1087,
                    1092,
                    1094,
                    1095,
                    1097,
                    1098,
                    1103,
                    1105,
                    1106,
                    1118,
                    1129,
                    1130,
                    1131,
                    1134,
                    1136,
                    1137,
                    115,
                    1139,
                    1140,
                    118,
                    120,
                    121,
                    122,
                    123,
                    124,
                    125,
                    126,
                    127,
                    1144,
                    129,
                    130,
                    642,
                    643,
                    133,
                    644,
                    645,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657,
                    659,
                    660,
                    661,
                    664,
                    665,
                    1175,
                    675,
                    677,
                    174,
                    175,
                    646,
                    647,
                    188,
                    702,
                    706,
                    707,
                    709,
                    710,
                    209,
                    1148,
                    211,
                    213,
                    725,
                    726,
                    727,
                    728,
                    729,
                    219,
                    731,
                    732,
                    739,
                    740,
                    742,
                    743,
                    744,
                    233,
                    745,
                    746,
                    747,
                    748,
                    749,
                    769,
                    771,
                    776,
                    1172,
                    778,
                    779,
                    782,
                    783,
                    1173,
                    787,
                    289,
                    813,
                    816,
                    817,
                    819,
                    313,
                    314,
                    826,
                    316,
                    317,
                    318,
                    319,
                    827,
                    828,
                    830,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    332,
                    844,
                    852,
                    854,
                    857,
                    859,
                    861,
                    862,
                    863,
                    864,
                    870,
                    871,
                    872,
                    875,
                    878,
                    886,
                    888,
                    893,
                    903,
                    975,
                    981,
                    991,
                    999,
                    1001,
                    1003,
                    1004,
                    1006,
                    1012,
                    1014,
                    1017,
                    1019,
                    1021,
                    1022,
                    1023
                ],
                "self._default_orient": [
                    816,
                    118
                ],
                "self.orient": [
                    643,
                    742,
                    1019,
                    1001,
                    138,
                    1083,
                    174,
                    175,
                    209,
                    817,
                    211,
                    213,
                    1014,
                    1045,
                    120,
                    219,
                    318,
                    1023
                ],
                "self.date_format": [
                    121,
                    317,
                    142
                ],
                "self.double_precision": [
                    122,
                    139
                ],
                "self.ensure_ascii": [
                    123,
                    140
                ],
                "ensure_ascii": [
                    194,
                    162,
                    240,
                    337,
                    274,
                    123
                ],
                "self.date_unit": [
                    836,
                    651,
                    749,
                    141,
                    981,
                    124
                ],
                "self.default_handler": [
                    125,
                    143
                ],
                "self.index": [
                    289,
                    233,
                    313,
                    188,
                    126,
                    319
                ],
                "self.indent": [
                    144,
                    127
                ],
                "self.is_copy": [
                    129
                ],
                "self._format_axes": [
                    130
                ],
                "AbstractMethodError": [
                    133,
                    878,
                    991
                ],
                "self._write": [
                    136
                ],
                "iso_dates": [
                    339,
                    242,
                    196,
                    164
                ],
                "Writer": [
                    202,
                    170
                ],
                "_default_orient": [
                    995,
                    171,
                    203,
                    1039,
                    249
                ],
                "self.obj.index.is_unique": [
                    209,
                    174
                ],
                "self.obj.index": [
                    209,
                    174,
                    1129
                ],
                "obj.values": [
                    189
                ],
                "_write": [
                    236,
                    333,
                    190
                ],
                "super": [
                    333,
                    236,
                    269,
                    190
                ],
                "self.obj.columns.is_unique": [
                    213
                ],
                "self.obj.columns": [
                    1130,
                    213
                ],
                "obj.to_dict": [
                    234
                ],
                "__init__": [
                    269
                ],
                "msg": [
                    282,
                    301,
                    302,
                    287
                ],
                "self.schema": [
                    289,
                    332
                ],
                "build_table_schema": [
                    289
                ],
                "obj.ndim": [
                    297,
                    292
                ],
                "obj.columns": [
                    299,
                    292
                ],
                "MultiIndex": [
                    292
                ],
                "set": [
                    298,
                    844,
                    1151
                ],
                "obj.index.names": [
                    298,
                    299
                ],
                "obj.index": [
                    298,
                    299,
                    782,
                    309,
                    310
                ],
                "len": [
                    961,
                    930,
                    299,
                    782,
                    783,
                    306,
                    1055
                ],
                "obj.copy": [
                    304
                ],
                "timedeltas": [
                    305,
                    306,
                    307
                ],
                "columns": [
                    305
                ],
                "obj.select_dtypes": [
                    305
                ],
                "applymap": [
                    307
                ],
                "x.isoformat": [
                    307
                ],
                "x": [
                    307,
                    718
                ],
                "is_period_dtype": [
                    309
                ],
                "obj.index.to_timestamp": [
                    310
                ],
                "obj.reset_index": [
                    314,
                    316
                ],
                "table_obj": [
                    332,
                    334
                ],
                "serialized": [
                    344,
                    333
                ],
                "dtype": [
                    576,
                    577,
                    897,
                    898,
                    740,
                    645,
                    592,
                    819,
                    756,
                    757,
                    571,
                    892,
                    895
                ],
                "convert_axes": [
                    578,
                    579,
                    834,
                    646,
                    593,
                    573
                ],
                "encoding": [
                    580,
                    581,
                    585,
                    652,
                    599
                ],
                "infer_compression": [
                    583
                ],
                "filepath_or_buffer": [
                    704,
                    610,
                    642,
                    584,
                    589,
                    692,
                    664,
                    697
                ],
                "should_close": [
                    584,
                    609
                ],
                "json_reader": [
                    608,
                    588,
                    606
                ],
                "JsonReader": [
                    588
                ],
                "typ": [
                    739,
                    644,
                    591,
                    752,
                    755
                ],
                "convert_dates": [
                    835,
                    902,
                    647,
                    594,
                    1175,
                    1148,
                    1149,
                    1150,
                    1151
                ],
                "keep_default_dates": [
                    648,
                    595,
                    837
                ],
                "numpy": [
                    832,
                    649,
                    596,
                    852,
                    822,
                    853
                ],
                "precise_float": [
                    833,
                    650,
                    597
                ],
                "chunksize": [
                    601,
                    605,
                    655
                ],
                "result": [
                    608,
                    1120,
                    1121,
                    612,
                    903,
                    871,
                    904,
                    874,
                    907,
                    937,
                    1031,
                    1034,
                    914,
                    947,
                    951,
                    925
                ],
                "json_reader.read": [
                    608
                ],
                "filepath_or_buffer.close": [
                    610
                ],
                "deprecate_kwarg": [
                    347
                ],
                "deprecate_nonkeyword_arguments": [
                    348
                ],
                "abc.Iterator": [
                    615
                ],
                "abc": [
                    615
                ],
                "self.path_or_buf": [
                    642
                ],
                "self.typ": [
                    739,
                    644
                ],
                "self.dtype": [
                    740,
                    645,
                    743,
                    819,
                    886,
                    888,
                    893
                ],
                "self.convert_axes": [
                    744,
                    834,
                    861,
                    646
                ],
                "self.convert_dates": [
                    835,
                    647,
                    1032,
                    745,
                    1136,
                    1148
                ],
                "self.keep_default_dates": [
                    648,
                    746,
                    837,
                    1175
                ],
                "self.numpy": [
                    832,
                    649,
                    747,
                    852
                ],
                "self.precise_float": [
                    833,
                    1060,
                    1092,
                    999,
                    650,
                    1067,
                    748,
                    1098,
                    1103,
                    1106,
                    1012,
                    1076,
                    1053,
                    1087
                ],
                "self.encoding": [
                    706,
                    652
                ],
                "self.compression": [
                    707,
                    653,
                    702
                ],
                "self.lines": [
                    725,
                    661,
                    654,
                    727
                ],
                "self.chunksize": [
                    675,
                    677,
                    776,
                    655,
                    659,
                    660,
                    725
                ],
                "self.nrows_seen": [
                    656,
                    782,
                    783
                ],
                "self.should_close": [
                    657,
                    709,
                    769
                ],
                "_validate_integer": [
                    660
                ],
                "data": [
                    1024,
                    898,
                    1026,
                    900,
                    903,
                    909,
                    913,
                    918,
                    664,
                    665,
                    920,
                    924,
                    930,
                    675,
                    676,
                    677,
                    678,
                    934,
                    680,
                    935,
                    936,
                    942,
                    946,
                    692,
                    695,
                    951,
                    703,
                    961,
                    962,
                    964,
                    710,
                    967,
                    712,
                    979,
                    728,
                    729,
                    988,
                    999,
                    1002,
                    1006,
                    887,
                    1017,
                    1020
                ],
                "self._get_data_from_filepath": [
                    664
                ],
                "self.data": [
                    728,
                    665,
                    731,
                    776
                ],
                "self._preprocess_data": [
                    665
                ],
                "hasattr": [
                    675,
                    677
                ],
                "data.read": [
                    676
                ],
                "StringIO": [
                    678
                ],
                "exists": [
                    697,
                    702,
                    694
                ],
                "os.path.exists": [
                    697
                ],
                "os.path": [
                    697
                ],
                "os": [
                    697
                ],
                "TypeError": [
                    899,
                    968,
                    938,
                    915,
                    948,
                    699,
                    926
                ],
                "self.open_stream": [
                    771,
                    710
                ],
                "filter": [
                    718
                ],
                "map": [
                    718
                ],
                "x.strip": [
                    718
                ],
                "join": [
                    846,
                    719
                ],
                "concat": [
                    726
                ],
                "ensure_str": [
                    728
                ],
                "self._get_object_parser": [
                    779,
                    729,
                    731
                ],
                "self._combine_lines": [
                    729,
                    778
                ],
                "data.split": [
                    729
                ],
                "self.close": [
                    787,
                    732
                ],
                "kwargs": [
                    753,
                    741,
                    757,
                    758
                ],
                "parse": [
                    753,
                    758
                ],
                "FrameParser": [
                    753
                ],
                "SeriesParser": [
                    758
                ],
                "self.open_stream.close": [
                    771
                ],
                "IOError": [
                    772
                ],
                "AttributeError": [
                    772
                ],
                "list": [
                    776
                ],
                "islice": [
                    776
                ],
                "lines_json": [
                    778,
                    779
                ],
                "range": [
                    782
                ],
                "StopIteration": [
                    788
                ],
                "_STAMP_UNITS": [
                    793
                ],
                "_MIN_STAMPS": [
                    794
                ],
                "self.json": [
                    999,
                    813,
                    1044,
                    1017,
                    1082
                ],
                "date_unit.lower": [
                    825
                ],
                "self._STAMP_UNITS": [
                    826,
                    827,
                    981
                ],
                "self.min_stamp": [
                    828,
                    830,
                    975
                ],
                "self._MIN_STAMPS": [
                    828,
                    830
                ],
                "bad_keys": [
                    844,
                    845,
                    846,
                    847
                ],
                "difference": [
                    844
                ],
                "decoded.keys": [
                    844
                ],
                "decoded": [
                    1090,
                    1059,
                    1062,
                    1063,
                    1064,
                    1094,
                    1002,
                    1003,
                    844,
                    1004,
                    1095,
                    1020,
                    1021,
                    1022
                ],
                "self._split_keys": [
                    844
                ],
                "self._parse_numpy": [
                    854
                ],
                "self._parse_no_numpy": [
                    857
                ],
                "self._convert_axes": [
                    862
                ],
                "self._try_convert_types": [
                    863
                ],
                "axis": [
                    872,
                    875,
                    870
                ],
                "self.obj._AXIS_NUMBERS.keys": [
                    870
                ],
                "self.obj._AXIS_NUMBERS": [
                    870
                ],
                "new_axis": [
                    875,
                    871
                ],
                "self._try_convert_data": [
                    1140,
                    1031,
                    871
                ],
                "self.obj._get_axis": [
                    872
                ],
                "setattr": [
                    875
                ],
                "use_dtypes": [
                    885
                ],
                "dict": [
                    1117,
                    893
                ],
                "self.dtype.get": [
                    893
                ],
                "name": [
                    893
                ],
                "np.dtype": [
                    897
                ],
                "np": [
                    897,
                    972
                ],
                "data.astype": [
                    898,
                    934,
                    967,
                    913,
                    946,
                    924
                ],
                "new_data": [
                    1120,
                    1122,
                    964,
                    965,
                    934,
                    935,
                    936,
                    905,
                    903,
                    967,
                    972,
                    974,
                    975,
                    976,
                    984,
                    987
                ],
                "self._try_convert_to_date": [
                    1173,
                    903
                ],
                "data.dtype": [
                    930,
                    909,
                    942,
                    918,
                    920
                ],
                "data.dtype.kind": [
                    918
                ],
                "all": [
                    935
                ],
                "OverflowError": [
                    968,
                    985,
                    938
                ],
                "new_data.dtype": [
                    972,
                    965
                ],
                "issubclass": [
                    972
                ],
                "new_data.dtype.type": [
                    972
                ],
                "np.number": [
                    972
                ],
                "in_range": [
                    978,
                    973
                ],
                "isna": [
                    974
                ],
                "new_data._values": [
                    976,
                    974
                ],
                "iNaT": [
                    976
                ],
                "in_range.all": [
                    978
                ],
                "date_units": [
                    981,
                    982
                ],
                "to_datetime": [
                    984
                ],
                "Parser": [
                    994,
                    1038
                ],
                "_split_keys": [
                    1040,
                    996
                ],
                "k": [
                    1091,
                    1092,
                    1062,
                    1002,
                    1020
                ],
                "v": [
                    1091,
                    1092,
                    1062,
                    1002,
                    1020
                ],
                "data.items": [
                    1002,
                    1020
                ],
                "self.check_keys_split": [
                    1003,
                    1021,
                    1094,
                    1063
                ],
                "create_series_with_explicit_dtype": [
                    1024,
                    1026,
                    1004,
                    1006,
                    1022
                ],
                "object": [
                    1024,
                    1026,
                    1006
                ],
                "load_kwargs": [
                    1016,
                    1009,
                    1015
                ],
                "loads_": [
                    1016,
                    1017
                ],
                "functools.partial": [
                    1016
                ],
                "functools": [
                    1016
                ],
                "args": [
                    1048,
                    1057,
                    1056,
                    1055
                ],
                "T": [
                    1056
                ],
                "decoded.items": [
                    1062
                ],
                "items": [
                    1092
                ],
                "DataFrame.from_dict": [
                    1097
                ],
                "parse_table_schema": [
                    1103
                ],
                "filt": [
                    1113,
                    1114,
                    1119
                ],
                "needs_new_obj": [
                    1123,
                    1116,
                    1126
                ],
                "new_obj": [
                    1124,
                    1129,
                    1130,
                    1131,
                    1117
                ],
                "i": [
                    1124,
                    1118
                ],
                "col": [
                    1120,
                    1157,
                    1160,
                    1140,
                    1175,
                    1118,
                    1119
                ],
                "c": [
                    1120,
                    1122,
                    1124,
                    1140,
                    1173,
                    1118,
                    1119
                ],
                "enumerate": [
                    1118
                ],
                "self.obj.items": [
                    1118
                ],
                "f": [
                    1120
                ],
                "new_obj.columns": [
                    1130
                ],
                "self._try_convert_dates": [
                    1137
                ],
                "self._process_converter": [
                    1139,
                    1172
                ],
                "col_lower": [
                    1160,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                ],
                "col.lower": [
                    1160
                ],
                "col_lower.endswith": [
                    1162,
                    1163
                ],
                "col_lower.startswith": [
                    1167
                ],
                "is_ok": [
                    1175
                ]
            },
            "filtered_variables_in_file": {
                "loads": [
                    1059,
                    1092,
                    999,
                    1098,
                    1067,
                    1071,
                    1106,
                    1016,
                    1048,
                    27,
                    1087
                ],
                "json.loads": [
                    27
                ],
                "json": [
                    1060,
                    1092,
                    1098,
                    1067,
                    813,
                    1103,
                    1072,
                    753,
                    1106,
                    1044,
                    758,
                    1049,
                    1082,
                    27,
                    28,
                    1087
                ],
                "dumps": [
                    28,
                    158
                ],
                "json.dumps": [
                    28
                ],
                "TABLE_SCHEMA_VERSION": [
                    30
                ],
                "Optional": [
                    225,
                    260,
                    37,
                    230,
                    42,
                    106,
                    44,
                    112,
                    180,
                    150,
                    185,
                    155,
                    254
                ],
                "Callable": [
                    260,
                    230,
                    42,
                    112,
                    185,
                    155
                ],
                "Any": [
                    260,
                    230,
                    42,
                    112,
                    185,
                    155
                ],
                "JSONSerializable": [
                    260,
                    230,
                    42,
                    112,
                    185,
                    155
                ],
                "index": [
                    49,
                    83,
                    276,
                    126,
                    319
                ],
                "orient": [
                    643,
                    271,
                    1045,
                    1047,
                    160,
                    1058,
                    1065,
                    815,
                    816,
                    49,
                    817,
                    821,
                    571,
                    59,
                    188,
                    573,
                    62,
                    192,
                    576,
                    66,
                    578,
                    1083,
                    1085,
                    1089,
                    1096,
                    77,
                    590,
                    335,
                    1102,
                    233,
                    238,
                    117,
                    118,
                    120
                ],
                "path_or_buf": [
                    96,
                    99,
                    583,
                    585,
                    54,
                    55,
                    56,
                    90,
                    91
                ],
                "_": [
                    584,
                    703,
                    55
                ],
                "get_filepath_or_buffer": [
                    584,
                    55
                ],
                "compression": [
                    583,
                    584,
                    585,
                    653,
                    56,
                    602,
                    91
                ],
                "lines": [
                    776,
                    777,
                    778,
                    718,
                    654,
                    719,
                    87,
                    600,
                    59
                ],
                "obj": [
                    1031,
                    779,
                    1035,
                    270,
                    782,
                    783,
                    785,
                    159,
                    289,
                    292,
                    297,
                    298,
                    299,
                    304,
                    305,
                    307,
                    309,
                    310,
                    314,
                    316,
                    189,
                    62,
                    191,
                    63,
                    66,
                    68,
                    70,
                    76,
                    332,
                    726,
                    729,
                    731,
                    733,
                    234,
                    235,
                    237,
                    751,
                    753,
                    115,
                    755,
                    758,
                    760
                ],
                "Series": [
                    68,
                    62
                ],
                "obj.to_frame": [
                    63
                ],
                "obj.name": [
                    298,
                    189,
                    63
                ],
                "writer": [
                    65,
                    67,
                    69,
                    71,
                    75
                ],
                "Type": [
                    65
                ],
                "DataFrame": [
                    1057,
                    66,
                    70,
                    1095,
                    1064,
                    1097,
                    1066,
                    1129,
                    1070,
                    1105,
                    1086
                ],
                "JSONTableWriter": [
                    67
                ],
                "SeriesWriter": [
                    69
                ],
                "FrameWriter": [
                    248,
                    71
                ],
                "s": [
                    97,
                    99,
                    75,
                    88,
                    93
                ],
                "write": [
                    75
                ],
                "date_format": [
                    281,
                    78,
                    272,
                    121,
                    284
                ],
                "double_precision": [
                    161,
                    193,
                    239,
                    79,
                    273,
                    336,
                    122
                ],
                "force_ascii": [
                    80
                ],
                "date_unit": [
                    163,
                    195,
                    836,
                    828,
                    651,
                    81,
                    241,
                    275,
                    338,
                    984,
                    598,
                    982,
                    824,
                    825,
                    826,
                    124
                ],
                "default_handler": [
                    197,
                    165,
                    82,
                    243,
                    340,
                    277,
                    125
                ],
                "indent": [
                    198,
                    166,
                    244,
                    84,
                    278,
                    341,
                    127
                ],
                "convert_to_line_delimits": [
                    88
                ],
                "fh": [
                    91,
                    93,
                    95
                ],
                "handles": [
                    91
                ],
                "get_handle": [
                    91,
                    703
                ],
                "fh.write": [
                    93
                ],
                "fh.close": [
                    95
                ],
                "path_or_buf.write": [
                    99
                ],
                "self.obj": [
                    1024,
                    1026,
                    1029,
                    1032,
                    137,
                    1035,
                    1057,
                    1064,
                    1066,
                    174,
                    1070,
                    314,
                    316,
                    1086,
                    838,
                    1095,
                    1097,
                    1103,
                    209,
                    1105,
                    213,
                    859,
                    1118,
                    864,
                    870,
                    872,
                    1129,
                    1130,
                    875,
                    1004,
                    1131,
                    1006,
                    1134,
                    115,
                    1144,
                    1022
                ],
                "self": [
                    1024,
                    1026,
                    1029,
                    1031,
                    1032,
                    1035,
                    1044,
                    1045,
                    1053,
                    1057,
                    1060,
                    1063,
                    1064,
                    1066,
                    1067,
                    1070,
                    1076,
                    1082,
                    1083,
                    1086,
                    1087,
                    1092,
                    1094,
                    1095,
                    1097,
                    1098,
                    1103,
                    1105,
                    1106,
                    1118,
                    1129,
                    1130,
                    1131,
                    1134,
                    1136,
                    1137,
                    115,
                    1139,
                    1140,
                    118,
                    120,
                    121,
                    122,
                    123,
                    124,
                    125,
                    126,
                    127,
                    1144,
                    129,
                    130,
                    642,
                    643,
                    133,
                    644,
                    645,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657,
                    659,
                    660,
                    661,
                    664,
                    665,
                    1175,
                    675,
                    677,
                    174,
                    175,
                    646,
                    647,
                    188,
                    702,
                    706,
                    707,
                    709,
                    710,
                    209,
                    1148,
                    211,
                    213,
                    725,
                    726,
                    727,
                    728,
                    729,
                    219,
                    731,
                    732,
                    739,
                    740,
                    742,
                    743,
                    744,
                    233,
                    745,
                    746,
                    747,
                    748,
                    749,
                    769,
                    771,
                    776,
                    1172,
                    778,
                    779,
                    782,
                    783,
                    1173,
                    787,
                    289,
                    813,
                    816,
                    817,
                    819,
                    313,
                    314,
                    826,
                    316,
                    317,
                    318,
                    319,
                    827,
                    828,
                    830,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    332,
                    844,
                    852,
                    854,
                    857,
                    859,
                    861,
                    862,
                    863,
                    864,
                    870,
                    871,
                    872,
                    875,
                    878,
                    886,
                    888,
                    893,
                    903,
                    975,
                    981,
                    991,
                    999,
                    1001,
                    1003,
                    1004,
                    1006,
                    1012,
                    1014,
                    1017,
                    1019,
                    1021,
                    1022,
                    1023
                ],
                "self._default_orient": [
                    816,
                    118
                ],
                "self.orient": [
                    643,
                    742,
                    1019,
                    1001,
                    138,
                    1083,
                    174,
                    175,
                    209,
                    817,
                    211,
                    213,
                    1014,
                    1045,
                    120,
                    219,
                    318,
                    1023
                ],
                "self.date_format": [
                    121,
                    317,
                    142
                ],
                "self.double_precision": [
                    122,
                    139
                ],
                "self.ensure_ascii": [
                    123,
                    140
                ],
                "ensure_ascii": [
                    194,
                    162,
                    240,
                    337,
                    274,
                    123
                ],
                "self.date_unit": [
                    836,
                    651,
                    749,
                    141,
                    981,
                    124
                ],
                "self.default_handler": [
                    125,
                    143
                ],
                "self.index": [
                    289,
                    233,
                    313,
                    188,
                    126,
                    319
                ],
                "self.indent": [
                    144,
                    127
                ],
                "self.is_copy": [
                    129
                ],
                "self._format_axes": [
                    130
                ],
                "AbstractMethodError": [
                    133,
                    878,
                    991
                ],
                "self._write": [
                    136
                ],
                "iso_dates": [
                    339,
                    242,
                    196,
                    164
                ],
                "Writer": [
                    202,
                    170
                ],
                "_default_orient": [
                    995,
                    171,
                    203,
                    1039,
                    249
                ],
                "self.obj.index.is_unique": [
                    209,
                    174
                ],
                "self.obj.index": [
                    209,
                    174,
                    1129
                ],
                "obj.values": [
                    189
                ],
                "_write": [
                    236,
                    333,
                    190
                ],
                "self.obj.columns.is_unique": [
                    213
                ],
                "self.obj.columns": [
                    1130,
                    213
                ],
                "obj.to_dict": [
                    234
                ],
                "__init__": [
                    269
                ],
                "msg": [
                    282,
                    301,
                    302,
                    287
                ],
                "self.schema": [
                    289,
                    332
                ],
                "build_table_schema": [
                    289
                ],
                "obj.ndim": [
                    297,
                    292
                ],
                "obj.columns": [
                    299,
                    292
                ],
                "MultiIndex": [
                    292
                ],
                "obj.index.names": [
                    298,
                    299
                ],
                "obj.index": [
                    298,
                    299,
                    782,
                    309,
                    310
                ],
                "obj.copy": [
                    304
                ],
                "timedeltas": [
                    305,
                    306,
                    307
                ],
                "columns": [
                    305
                ],
                "obj.select_dtypes": [
                    305
                ],
                "applymap": [
                    307
                ],
                "x.isoformat": [
                    307
                ],
                "x": [
                    307,
                    718
                ],
                "is_period_dtype": [
                    309
                ],
                "obj.index.to_timestamp": [
                    310
                ],
                "obj.reset_index": [
                    314,
                    316
                ],
                "table_obj": [
                    332,
                    334
                ],
                "serialized": [
                    344,
                    333
                ],
                "dtype": [
                    576,
                    577,
                    897,
                    898,
                    740,
                    645,
                    592,
                    819,
                    756,
                    757,
                    571,
                    892,
                    895
                ],
                "convert_axes": [
                    578,
                    579,
                    834,
                    646,
                    593,
                    573
                ],
                "encoding": [
                    580,
                    581,
                    585,
                    652,
                    599
                ],
                "infer_compression": [
                    583
                ],
                "filepath_or_buffer": [
                    704,
                    610,
                    642,
                    584,
                    589,
                    692,
                    664,
                    697
                ],
                "should_close": [
                    584,
                    609
                ],
                "json_reader": [
                    608,
                    588,
                    606
                ],
                "JsonReader": [
                    588
                ],
                "typ": [
                    739,
                    644,
                    591,
                    752,
                    755
                ],
                "convert_dates": [
                    835,
                    902,
                    647,
                    594,
                    1175,
                    1148,
                    1149,
                    1150,
                    1151
                ],
                "keep_default_dates": [
                    648,
                    595,
                    837
                ],
                "numpy": [
                    832,
                    649,
                    596,
                    852,
                    822,
                    853
                ],
                "precise_float": [
                    833,
                    650,
                    597
                ],
                "chunksize": [
                    601,
                    605,
                    655
                ],
                "result": [
                    608,
                    1120,
                    1121,
                    612,
                    903,
                    871,
                    904,
                    874,
                    907,
                    937,
                    1031,
                    1034,
                    914,
                    947,
                    951,
                    925
                ],
                "json_reader.read": [
                    608
                ],
                "filepath_or_buffer.close": [
                    610
                ],
                "deprecate_kwarg": [
                    347
                ],
                "deprecate_nonkeyword_arguments": [
                    348
                ],
                "abc.Iterator": [
                    615
                ],
                "abc": [
                    615
                ],
                "self.path_or_buf": [
                    642
                ],
                "self.typ": [
                    739,
                    644
                ],
                "self.dtype": [
                    740,
                    645,
                    743,
                    819,
                    886,
                    888,
                    893
                ],
                "self.convert_axes": [
                    744,
                    834,
                    861,
                    646
                ],
                "self.convert_dates": [
                    835,
                    647,
                    1032,
                    745,
                    1136,
                    1148
                ],
                "self.keep_default_dates": [
                    648,
                    746,
                    837,
                    1175
                ],
                "self.numpy": [
                    832,
                    649,
                    747,
                    852
                ],
                "self.precise_float": [
                    833,
                    1060,
                    1092,
                    999,
                    650,
                    1067,
                    748,
                    1098,
                    1103,
                    1106,
                    1012,
                    1076,
                    1053,
                    1087
                ],
                "self.encoding": [
                    706,
                    652
                ],
                "self.compression": [
                    707,
                    653,
                    702
                ],
                "self.lines": [
                    725,
                    661,
                    654,
                    727
                ],
                "self.chunksize": [
                    675,
                    677,
                    776,
                    655,
                    659,
                    660,
                    725
                ],
                "self.nrows_seen": [
                    656,
                    782,
                    783
                ],
                "self.should_close": [
                    657,
                    709,
                    769
                ],
                "_validate_integer": [
                    660
                ],
                "data": [
                    1024,
                    898,
                    1026,
                    900,
                    903,
                    909,
                    913,
                    918,
                    664,
                    665,
                    920,
                    924,
                    930,
                    675,
                    676,
                    677,
                    678,
                    934,
                    680,
                    935,
                    936,
                    942,
                    946,
                    692,
                    695,
                    951,
                    703,
                    961,
                    962,
                    964,
                    710,
                    967,
                    712,
                    979,
                    728,
                    729,
                    988,
                    999,
                    1002,
                    1006,
                    887,
                    1017,
                    1020
                ],
                "self._get_data_from_filepath": [
                    664
                ],
                "self.data": [
                    728,
                    665,
                    731,
                    776
                ],
                "self._preprocess_data": [
                    665
                ],
                "data.read": [
                    676
                ],
                "StringIO": [
                    678
                ],
                "exists": [
                    697,
                    702,
                    694
                ],
                "os.path.exists": [
                    697
                ],
                "os.path": [
                    697
                ],
                "os": [
                    697
                ],
                "self.open_stream": [
                    771,
                    710
                ],
                "x.strip": [
                    718
                ],
                "join": [
                    846,
                    719
                ],
                "concat": [
                    726
                ],
                "ensure_str": [
                    728
                ],
                "self._get_object_parser": [
                    779,
                    729,
                    731
                ],
                "self._combine_lines": [
                    729,
                    778
                ],
                "data.split": [
                    729
                ],
                "self.close": [
                    787,
                    732
                ],
                "kwargs": [
                    753,
                    741,
                    757,
                    758
                ],
                "parse": [
                    753,
                    758
                ],
                "FrameParser": [
                    753
                ],
                "SeriesParser": [
                    758
                ],
                "self.open_stream.close": [
                    771
                ],
                "islice": [
                    776
                ],
                "lines_json": [
                    778,
                    779
                ],
                "_STAMP_UNITS": [
                    793
                ],
                "_MIN_STAMPS": [
                    794
                ],
                "self.json": [
                    999,
                    813,
                    1044,
                    1017,
                    1082
                ],
                "date_unit.lower": [
                    825
                ],
                "self._STAMP_UNITS": [
                    826,
                    827,
                    981
                ],
                "self.min_stamp": [
                    828,
                    830,
                    975
                ],
                "self._MIN_STAMPS": [
                    828,
                    830
                ],
                "bad_keys": [
                    844,
                    845,
                    846,
                    847
                ],
                "difference": [
                    844
                ],
                "decoded.keys": [
                    844
                ],
                "decoded": [
                    1090,
                    1059,
                    1062,
                    1063,
                    1064,
                    1094,
                    1002,
                    1003,
                    844,
                    1004,
                    1095,
                    1020,
                    1021,
                    1022
                ],
                "self._split_keys": [
                    844
                ],
                "self._parse_numpy": [
                    854
                ],
                "self._parse_no_numpy": [
                    857
                ],
                "self._convert_axes": [
                    862
                ],
                "self._try_convert_types": [
                    863
                ],
                "axis": [
                    872,
                    875,
                    870
                ],
                "self.obj._AXIS_NUMBERS.keys": [
                    870
                ],
                "self.obj._AXIS_NUMBERS": [
                    870
                ],
                "new_axis": [
                    875,
                    871
                ],
                "self._try_convert_data": [
                    1140,
                    1031,
                    871
                ],
                "self.obj._get_axis": [
                    872
                ],
                "use_dtypes": [
                    885
                ],
                "self.dtype.get": [
                    893
                ],
                "name": [
                    893
                ],
                "np.dtype": [
                    897
                ],
                "np": [
                    897,
                    972
                ],
                "data.astype": [
                    898,
                    934,
                    967,
                    913,
                    946,
                    924
                ],
                "new_data": [
                    1120,
                    1122,
                    964,
                    965,
                    934,
                    935,
                    936,
                    905,
                    903,
                    967,
                    972,
                    974,
                    975,
                    976,
                    984,
                    987
                ],
                "self._try_convert_to_date": [
                    1173,
                    903
                ],
                "data.dtype": [
                    930,
                    909,
                    942,
                    918,
                    920
                ],
                "data.dtype.kind": [
                    918
                ],
                "new_data.dtype": [
                    972,
                    965
                ],
                "new_data.dtype.type": [
                    972
                ],
                "np.number": [
                    972
                ],
                "in_range": [
                    978,
                    973
                ],
                "isna": [
                    974
                ],
                "new_data._values": [
                    976,
                    974
                ],
                "iNaT": [
                    976
                ],
                "in_range.all": [
                    978
                ],
                "date_units": [
                    981,
                    982
                ],
                "to_datetime": [
                    984
                ],
                "Parser": [
                    994,
                    1038
                ],
                "_split_keys": [
                    1040,
                    996
                ],
                "k": [
                    1091,
                    1092,
                    1062,
                    1002,
                    1020
                ],
                "v": [
                    1091,
                    1092,
                    1062,
                    1002,
                    1020
                ],
                "data.items": [
                    1002,
                    1020
                ],
                "self.check_keys_split": [
                    1003,
                    1021,
                    1094,
                    1063
                ],
                "create_series_with_explicit_dtype": [
                    1024,
                    1026,
                    1004,
                    1006,
                    1022
                ],
                "load_kwargs": [
                    1016,
                    1009,
                    1015
                ],
                "loads_": [
                    1016,
                    1017
                ],
                "functools.partial": [
                    1016
                ],
                "functools": [
                    1016
                ],
                "args": [
                    1048,
                    1057,
                    1056,
                    1055
                ],
                "T": [
                    1056
                ],
                "decoded.items": [
                    1062
                ],
                "items": [
                    1092
                ],
                "DataFrame.from_dict": [
                    1097
                ],
                "parse_table_schema": [
                    1103
                ],
                "filt": [
                    1113,
                    1114,
                    1119
                ],
                "needs_new_obj": [
                    1123,
                    1116,
                    1126
                ],
                "new_obj": [
                    1124,
                    1129,
                    1130,
                    1131,
                    1117
                ],
                "i": [
                    1124,
                    1118
                ],
                "col": [
                    1120,
                    1157,
                    1160,
                    1140,
                    1175,
                    1118,
                    1119
                ],
                "c": [
                    1120,
                    1122,
                    1124,
                    1140,
                    1173,
                    1118,
                    1119
                ],
                "self.obj.items": [
                    1118
                ],
                "f": [
                    1120
                ],
                "new_obj.columns": [
                    1130
                ],
                "self._try_convert_dates": [
                    1137
                ],
                "self._process_converter": [
                    1139,
                    1172
                ],
                "col_lower": [
                    1160,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                ],
                "col.lower": [
                    1160
                ],
                "col_lower.endswith": [
                    1162,
                    1163
                ],
                "col_lower.startswith": [
                    1167
                ],
                "is_ok": [
                    1175
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/tests/io/json/test_pandas.py",
                "test_function": "test_readjson_bool_series",
                "test_function_code": "    def test_readjson_bool_series(self):\n        # GH31464\n        result = read_json(\"[true, true, false]\", typ=\"series\")\n        expected = pd.Series([True, True, False])\n        tm.assert_series_equal(result, expected)",
                "test_error": "TypeError: <class 'bool'> is not convertible to datetime",
                "full_test_error": "self = <pandas.tests.io.json.test_pandas.TestPandasContainer object at 0x11b00dbe0>\n\n    def test_readjson_bool_series(self):\n        # GH31464\n>       result = read_json(\"[true, true, false]\", typ=\"series\")\n\npandas/tests/io/json/test_pandas.py:1665: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/util/_decorators.py:212: in wrapper\n    return func(*args, **kwargs)\npandas/util/_decorators.py:311: in wrapper\n    return func(*args, **kwargs)\npandas/io/json/_json.py:608: in read_json\n    result = json_reader.read()\npandas/io/json/_json.py:731: in read\n    obj = self._get_object_parser(self.data)\npandas/io/json/_json.py:758: in _get_object_parser\n    obj = SeriesParser(json, **kwargs).parse()\npandas/io/json/_json.py:863: in parse\n    self._try_convert_types()\npandas/io/json/_json.py:1031: in _try_convert_types\n    obj, result = self._try_convert_data(\npandas/io/json/_json.py:903: in _try_convert_data\n    new_data, result = self._try_convert_to_date(data)\npandas/io/json/_json.py:984: in _try_convert_to_date\n    new_data = to_datetime(new_data, errors=\"raise\", unit=date_unit)\npandas/core/tools/datetimes.py:747: in to_datetime\n    values = convert_listlike(arg._values, format)\npandas/core/tools/datetimes.py:329: in _convert_listlike_datetimes\n    result, tz_parsed = tslib.array_with_unit_to_datetime(\npandas/_libs/tslib.pyx:405: in pandas._libs.tslib.array_with_unit_to_datetime\n    result, tz = array_to_datetime(values.astype(object), errors=errors)\npandas/_libs/tslib.pyx:760: in pandas._libs.tslib.array_to_datetime\n    return array_to_datetime_object(values, errors, dayfirst, yearfirst)\npandas/_libs/tslib.pyx:899: in pandas._libs.tslib.array_to_datetime_object\n    raise\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(f\"{type(val)} is not convertible to datetime\")\nE   TypeError: <class 'bool'> is not convertible to datetime\n\npandas/_libs/tslib.pyx:733: TypeError",
                "traceback": "pandas/util/_decorators.py:212: in wrapper\n    return func(*args, **kwargs)\npandas/util/_decorators.py:311: in wrapper\n    return func(*args, **kwargs)\npandas/io/json/_json.py:608: in read_json\n    result = json_reader.read()\npandas/io/json/_json.py:731: in read\n    obj = self._get_object_parser(self.data)\npandas/io/json/_json.py:758: in _get_object_parser\n    obj = SeriesParser(json, **kwargs).parse()\npandas/io/json/_json.py:863: in parse\n    self._try_convert_types()\npandas/io/json/_json.py:1031: in _try_convert_types\n    obj, result = self._try_convert_data(\npandas/io/json/_json.py:903: in _try_convert_data\n    new_data, result = self._try_convert_to_date(data)\npandas/io/json/_json.py:984: in _try_convert_to_date\n    new_data = to_datetime(new_data, errors=\"raise\", unit=date_unit)\npandas/core/tools/datetimes.py:747: in to_datetime\n    values = convert_listlike(arg._values, format)\npandas/core/tools/datetimes.py:329: in _convert_listlike_datetimes\n    result, tz_parsed = tslib.array_with_unit_to_datetime(\npandas/_libs/tslib.pyx:405: in pandas._libs.tslib.array_with_unit_to_datetime\n    result, tz = array_to_datetime(values.astype(object), errors=errors)\npandas/_libs/tslib.pyx:760: in pandas._libs.tslib.array_to_datetime\n    return array_to_datetime_object(values, errors, dayfirst, yearfirst)\npandas/_libs/tslib.pyx:899: in pandas._libs.tslib.array_to_datetime_object\n    raise",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(f\"{type(val)} is not convertible to datetime\")\nE   TypeError: <class 'bool'> is not convertible to datetime\n\npandas/_libs/tslib.pyx:733: TypeError",
                "test_function_decorators": []
            }
        ]
    }
}