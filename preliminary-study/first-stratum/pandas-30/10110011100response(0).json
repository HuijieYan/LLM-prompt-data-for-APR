{
    "pandas": [
        {
            "bugID": 30,
            "bitvector": {
                "1.3.2": 1,
                "1.2.4": 0,
                "1.2.1": 1,
                "1.3.4": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 1,
                "3.1.2": 0,
                "cot": 0
            },
            "start_line": 953,
            "file_name": "pandas/io/json/_json.py",
            "replace_code": "def _try_convert_to_date(self, data):\n        \n        # no conversion on empty\n\n    if not len(data):\n        return data, False\n    \n    new_data = data\n    if new_data.dtype == \"object\":\n        try:\n            new_data = data.astype(\"int64\")\n        except (TypeError, ValueError, OverflowError):\n            pass\n    \n    # ignore non-dates that are out of range\n    if issubclass(new_data.dtype.type, np.datetime_data):\n        if isna(new_data).any():\n            return data, False\n    \n    uints = ['ns', '[Hus', 'mD', 'us', 'ns', 's']\n    for uint in uints:\n        try:\n            new_data = to_datetime(new_data, errors=\"raise\", unit=uint)\n        except (TypeError, ValueError, OverflowError):\n            continue\n        return new_data, True\n    return data, False"
        }
    ]
}