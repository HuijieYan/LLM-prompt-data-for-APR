{
    "pandas": [
        {
            "bugID": 34,
            "bitvector": {
                "1.3.1": 0,
                "1.3.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.1.2": 1,
                "2.2.3": 0,
                "2.2.4": 1,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "start_line": 1406,
            "file_name": "pandas/core/resample.py",
            "replace_code": "def _get_time_bins(self, ax):\n    from pandas import Timestamp, date_range, DataFrame\n    import pandas as pd\n    import numpy as np\n    if not isinstance(ax, pd.DatetimeIndex):\n        raise TypeError(\n            \"axis must be a DatetimeIndex, but got \"\n            f\"an instance of {type(ax).__name__}\"\n        )\n    \n    if len(ax) == 0:\n        binner = labels = pd.DatetimeIndex(data=[], freq=self.freq, name=ax.name)\n        return binner, [], labels\n    \n    first, last = _get_timestamp_range_edges(\n        ax.min(), ax.max(), self.freq, closed=self.closed, base=self.base\n    )\n    \n    # Use resample to correctly handle ambiguous times\n    result = ax.tz_localize(None).resample(self.freq, closed=self.closed, label=self.label).mean()\n    \n    binner = result.index\n    bin_edges = np.concatenate((result.index, [result.index[-1] + self.freq]))\n    binner, bin_edges = self._adjust_bin_edges(binner, ax)\n    \n    bins = np.digitize(ax, bin_edges, right=self.closed == 'right')\n    labels = binner[bins - 1]\n    \n    return binner, bins, labels"
        }
    ]
}