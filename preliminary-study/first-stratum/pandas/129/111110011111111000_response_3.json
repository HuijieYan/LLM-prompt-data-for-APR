{
    "pandas": [
        {
            "bugID": 129,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 1302,
            "file_name": "pandas/core/arrays/datetimelike.py",
            "replace_code": "def __rsub__(self, other):\n        if isinstance(other, Timestamp):\n            if is_timedelta64_dtype(self.dtype):\n                if not isinstance(self, DatetimeLikeArrayMixin):\n                    from pandas.core.arrays import DatetimeArray\n                    self = DatetimeArray(self)\n                return self - other\n            else:\n                raise TypeError(\"cannot subtract {} from {}\".format(type(other).__name__, type(self).__name__))\n        elif isinstance(other, datetime):\n            if is_timedelta64_dtype(self.dtype):\n                if not isinstance(self, DatetimeLikeArrayMixin):\n                    from pandas.core.arrays import DatetimeArray\n                    self = DatetimeArray(self)\n                return self - other\n            else:\n                raise TypeError(\"cannot subtract {} from {}\".format(type(other).__name__, type(self).__name__))\n        elif isinstance(other, np.datetime64):\n            if is_timedelta64_dtype(self.dtype):\n                if not isinstance(self, DatetimeLikeArrayMixin):\n                    from pandas.core.arrays import DatetimeArray\n                    self = DatetimeArray(self)\n                return self - other\n            else:\n                raise TypeError(\"cannot subtract {} from {}\".format(type(other).__name__, type(self).__name__))\n        elif is_timedelta64_dtype(self.dtype):\n            if lib.is_integer(other) or is_integer_dtype(other):\n                return -self + other\n            else:\n                return (-self) + other\n        return -(self - other)",
            "imports": [
                "from pandas.core.arrays import DatetimeArray",
                "from pandas.core.arrays import DatetimeArray",
                "from pandas.core.arrays import DatetimeArray"
            ]
        }
    ]
}