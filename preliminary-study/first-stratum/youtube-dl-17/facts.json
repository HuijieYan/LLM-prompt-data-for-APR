{
    "1.3.2": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/youtube-dl/youtube_dl/utils.py",
    "1.1.1": "def cli_bool_option(params, command_option, param, true_value='true', false_value='false', separator=None):\n    param = params.get(param)\n    assert isinstance(param, bool)\n    if separator:\n        return [command_option + separator + (true_value if param else false_value)]\n    return [command_option, true_value if param else false_value]\n",
    "2.1.1": [
        "    def test_cli_bool_option(self):\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--no-check-certificate', 'nocheckcertificate'),\n            ['--no-check-certificate', 'true'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--no-check-certificate', 'nocheckcertificate', separator='='),\n            ['--no-check-certificate=true'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--check-certificate', 'nocheckcertificate', 'false', 'true'),\n            ['--check-certificate', 'false'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='),\n            ['--check-certificate=false'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': False}, '--check-certificate', 'nocheckcertificate', 'false', 'true'),\n            ['--check-certificate', 'true'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': False}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='),\n            ['--check-certificate=true'])\n        self.assertEqual(\n            cli_bool_option(\n                {}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='),\n            [])"
    ],
    "2.1.2": [
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/youtube-dl/test/test_utils.py"
    ],
    "2.2.1": [
        [
            "E       AssertionError"
        ]
    ],
    "2.2.2": [
        [
            "self = <test.test_utils.TestUtil testMethod=test_cli_bool_option>\n\n    def test_cli_bool_option(self):\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--no-check-certificate', 'nocheckcertificate'),\n            ['--no-check-certificate', 'true'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--no-check-certificate', 'nocheckcertificate', separator='='),\n            ['--no-check-certificate=true'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--check-certificate', 'nocheckcertificate', 'false', 'true'),\n            ['--check-certificate', 'false'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': True}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='),\n            ['--check-certificate=false'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': False}, '--check-certificate', 'nocheckcertificate', 'false', 'true'),\n            ['--check-certificate', 'true'])\n        self.assertEqual(\n            cli_bool_option(\n                {'nocheckcertificate': False}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='),\n            ['--check-certificate=true'])\n        self.assertEqual(\n            cli_bool_option(\n>               {}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='),\n            [])\n\ntest/test_utils.py:1187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nparams = {}, command_option = '--check-certificate', param = None\ntrue_value = 'false', false_value = 'true', separator = '='\n\n    def cli_bool_option(params, command_option, param, true_value='true', false_value='false', separator=None):\n        param = params.get(param)\n>       assert isinstance(param, bool)",
            "\nyoutube_dl/utils.py:2736: AssertionError"
        ]
    ],
    "3.1.1": [
        "Error when using external_downloader = curl without explicitly specifying continuedl\n"
    ],
    "3.1.2": [
        "In CurlFD, this line\n\ncmd += self._bool_option('--continue-at', 'continuedl', '-', '0')\nwill fail since continuedl value is None, unless it is explicitly specified in the options.\n"
    ]
}