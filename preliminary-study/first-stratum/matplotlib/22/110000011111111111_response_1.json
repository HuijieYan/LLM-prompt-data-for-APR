{
    "matplotlib": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 6338,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def hist(self, x, bins=None, range=None, density=False, weights=None,\n         cumulative=False, bottom=None, histtype='bar', align='mid',\n         orientation='vertical', rwidth=None, log=False,\n         color=None, label=None, stacked=False, **kwargs):\n    \"\"\"\n    Plot a histogram.\n    \n    ... (the rest of the function remains unchanged)\n\n    Parameters\n    ----------\n    x : (n,) array or sequence of (n,) arrays\n        Input values, this takes either a single array or a sequence of\n        arrays which are not required to be of the same length.\n\n    bins : int or sequence or str, optional\n        If *bins* is an integer, it defines the number of equal-width bins\n        in the range.\n\n        ...\n\n        The default is :rc:`hist.bins`.\n    \n    ... (the rest of the function remains unchanged)\n\n    Returns\n    -------\n    n : array or list of arrays\n        The values of the histogram bins. See *density* and *weights* for a\n        description of the possible semantics.\n\n    bins : array\n        The edges of the bins. Length nbins + 1 (nbins left edges and right\n        edge of last bin).  Always a single array even when multiple data\n        sets are passed in.\n\n    patches : list or list of lists\n        Silent list of individual patches used to create the histogram\n        or list of such list if multiple input datasets.\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.patches.Patch` properties\n\n    See also\n    --------\n    hist2d : 2D histograms\n    \"\"\"\n    # Avoid shadowing the builtin.\n    bins_new = bins\n    from builtins import range\n\n    if np.iterable(bins) and all(isinstance(b, datetime.datetime) for b in bins):\n        bins_new = mpl.dates.date2num(bins)\n\n    m, bins = np.histogram(x, bins_new, weights=weights, **kwargs)\n\n    # The rest of the function remains unchanged\n    ...",
            "imports": [
                "from builtins import range"
            ]
        }
    ]
}