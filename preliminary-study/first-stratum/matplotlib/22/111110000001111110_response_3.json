{
    "matplotlib": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 6338,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def hist(self, x, bins=None, range=None, density=False, weights=None,\n             cumulative=False, bottom=None, histtype='bar', align='mid',\n             orientation='vertical', rwidth=None, log=False,\n             color=None, label=None, stacked=False, **kwargs):\n        \"\"\"\n        Plot a histogram.\n    \n        Compute and draw the histogram of *x*.  See the\n        documentation of the *weights* parameter to draw a histogram of\n        already-binned data.\n    \n        Parameters\n        ----------\n        x : (n,) array or sequence of (n,) arrays\n            Input values.\n        \n        bins : int or sequence or str, optional\n            If *bins* is an integer, it defines the number of equal-width bins\n            in the range.\n        \n        range : tuple or None, optional\n            The lower and upper range of the bins. Lower and upper outliers\n            are ignored.\n        \n            Default is ``None``\n        \n        density : bool, optional\n            If ``True``, the first element of the return tuple will\n            be the counts normalized to form a probability density, i.e.,\n            the area under of the histogram will sum to 1.\n        \n            Default is ``False``\n        \n        weights : (n, ) array-like or None, optional\n            An array of weights, of the same shape as *x*.  \n            Default is ``None``.\n        \n        cumulative : bool or -1, optional\n            If ``True``, then a histogram is computed where each bin gives the\n            counts in that bin plus all bins for smaller values. \n            Default is ``False``\n        \n        bottom : array-like, scalar, or None\n            Specifies the bottom baseline of each bin.\n        \n            Default is ``None``\n        \n        histtype : {'bar', 'barstacked', 'step',  'stepfilled'}, optional\n            The type of histogram to draw.\n        \n            Default is 'bar'\n        \n        align : {'left', 'mid', 'right'}, optional\n            Controls how the histogram is plotted.\n        \n            Default is 'mid'\n        \n        orientation : {'horizontal', 'vertical'}, optional\n            If 'horizontal', `~matplotlib.pyplot.barh` will be used for\n            bar-type histograms and the *bottom* kwarg will be the left edges.\n        \n        rwidth : scalar or None, optional\n            The relative width of the bars as a fraction of the bin width. \n        \n            Default is ``None``\n        \n        log : bool, optional\n            If ``True``, the histogram axis will be set to a log scale. \n        \n            Default is ``False``\n        \n        color : color or array-like of colors or None, optional\n            Color or sequence of colors, one per dataset.  Default (``None``)\n            uses the standard line color sequence.\n        \n            Default is ``None``\n        \n        label : str or None, optional\n            String, or sequence of strings to match multiple datasets.\n            default is ``None``\n        \n        stacked : bool, optional\n            If ``True``, multiple data are stacked on top of each other\n        \n            Default is ``False``\n        \n        Returns\n        -------\n        n : array or list of arrays\n            The values of the histogram bins.\n        \n        bins : array\n            The edges of the bins. \n        \n        patches : list or list of lists\n            Silent list of individual patches used to create the histogram\n            or list of such list if multiple input datasets.\n        \n        Other Parameters\n        ----------------\n        **kwargs : `~matplotlib.patches.Patch` properties\n        \n        See also\n        --------\n        hist2d : 2D histograms\n    \n        \"\"\"",
            "imports": []
        }
    ]
}