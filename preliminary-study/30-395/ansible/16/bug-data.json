{
    "ansible:16": {
        "/Users/jerry/Documents/GitHub/LPPR/local_envs/repos/ansible_16/lib/ansible/module_utils/facts/hardware/linux.py": {
            "buggy_functions": [
                {
                    "function_name": "get_cpu_facts",
                    "function_code": "def get_cpu_facts(self, collected_facts=None):\n    cpu_facts = {}\n    collected_facts = collected_facts or {}\n\n    i = 0\n    vendor_id_occurrence = 0\n    model_name_occurrence = 0\n    processor_occurence = 0\n    physid = 0\n    coreid = 0\n    sockets = {}\n    cores = {}\n\n    xen = False\n    xen_paravirt = False\n    try:\n        if os.path.exists('/proc/xen'):\n            xen = True\n        else:\n            for line in get_file_lines('/sys/hypervisor/type'):\n                if line.strip() == 'xen':\n                    xen = True\n                # Only interested in the first line\n                break\n    except IOError:\n        pass\n\n    if not os.access(\"/proc/cpuinfo\", os.R_OK):\n        return cpu_facts\n\n    cpu_facts['processor'] = []\n    for line in get_file_lines('/proc/cpuinfo'):\n        data = line.split(\":\", 1)\n        key = data[0].strip()\n\n        try:\n            val = data[1].strip()\n        except IndexError:\n            val = \"\"\n\n        if xen:\n            if key == 'flags':\n                # Check for vme cpu flag, Xen paravirt does not expose this.\n                #   Need to detect Xen paravirt because it exposes cpuinfo\n                #   differently than Xen HVM or KVM and causes reporting of\n                #   only a single cpu core.\n                if 'vme' not in val:\n                    xen_paravirt = True\n\n        # model name is for Intel arch, Processor (mind the uppercase P)\n        # works for some ARM devices, like the Sheevaplug.\n        # 'ncpus active' is SPARC attribute\n        if key in ['model name', 'Processor', 'vendor_id', 'cpu', 'Vendor', 'processor']:\n            if 'processor' not in cpu_facts:\n                cpu_facts['processor'] = []\n            cpu_facts['processor'].append(val)\n            if key == 'vendor_id':\n                vendor_id_occurrence += 1\n            if key == 'model name':\n                model_name_occurrence += 1\n            if key == 'processor':\n                processor_occurence += 1\n            i += 1\n        elif key == 'physical id':\n            physid = val\n            if physid not in sockets:\n                sockets[physid] = 1\n        elif key == 'core id':\n            coreid = val\n            if coreid not in sockets:\n                cores[coreid] = 1\n        elif key == 'cpu cores':\n            sockets[physid] = int(val)\n        elif key == 'siblings':\n            cores[coreid] = int(val)\n        elif key == '# processors':\n            cpu_facts['processor_cores'] = int(val)\n        elif key == 'ncpus active':\n            i = int(val)\n\n    # Skip for platforms without vendor_id/model_name in cpuinfo (e.g ppc64le)\n    if vendor_id_occurrence > 0:\n        if vendor_id_occurrence == model_name_occurrence:\n            i = vendor_id_occurrence\n\n    # The fields for ARM CPUs do not always include 'vendor_id' or 'model name',\n    # and sometimes includes both 'processor' and 'Processor'.\n    # Always use 'processor' count for ARM systems\n    if collected_facts.get('ansible_architecture', '').startswith(('armv', 'aarch')):\n        i = processor_occurence\n\n    # FIXME\n    if collected_facts.get('ansible_architecture') != 's390x':\n        if xen_paravirt:\n            cpu_facts['processor_count'] = i\n            cpu_facts['processor_cores'] = i\n            cpu_facts['processor_threads_per_core'] = 1\n            cpu_facts['processor_vcpus'] = i\n        else:\n            if sockets:\n                cpu_facts['processor_count'] = len(sockets)\n            else:\n                cpu_facts['processor_count'] = i\n\n            socket_values = list(sockets.values())\n            if socket_values and socket_values[0]:\n                cpu_facts['processor_cores'] = socket_values[0]\n            else:\n                cpu_facts['processor_cores'] = 1\n\n            core_values = list(cores.values())\n            if core_values:\n                cpu_facts['processor_threads_per_core'] = core_values[0] // cpu_facts['processor_cores']\n            else:\n                cpu_facts['processor_threads_per_core'] = 1 // cpu_facts['processor_cores']\n\n            cpu_facts['processor_vcpus'] = (cpu_facts['processor_threads_per_core'] *\n                                            cpu_facts['processor_count'] * cpu_facts['processor_cores'])\n\n    return cpu_facts\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 158,
                    "variables": {
                        "cpu_facts": [
                            258,
                            260,
                            264,
                            266,
                            270,
                            272,
                            274,
                            275,
                            277,
                            159,
                            186,
                            188,
                            211,
                            212,
                            213,
                            234,
                            252,
                            253,
                            254,
                            255
                        ],
                        "collected_facts": [
                            160,
                            250,
                            246
                        ],
                        "i": [
                            162,
                            260,
                            236,
                            241,
                            252,
                            247,
                            220,
                            253,
                            255
                        ],
                        "vendor_id_occurrence": [
                            163,
                            239,
                            240,
                            241,
                            215
                        ],
                        "model_name_occurrence": [
                            240,
                            217,
                            164
                        ],
                        "processor_occurence": [
                            219,
                            165,
                            247
                        ],
                        "physid": [
                            224,
                            230,
                            166,
                            222,
                            223
                        ],
                        "coreid": [
                            226,
                            227,
                            228,
                            167,
                            232
                        ],
                        "sockets": [
                            224,
                            257,
                            258,
                            227,
                            230,
                            262,
                            168,
                            223
                        ],
                        "cores": [
                            232,
                            169,
                            228,
                            268
                        ],
                        "xen": [
                            171,
                            179,
                            198,
                            175
                        ],
                        "xen_paravirt": [
                            251,
                            172,
                            205
                        ],
                        "os.path.exists": [
                            174
                        ],
                        "os.path": [
                            174
                        ],
                        "os": [
                            185,
                            174
                        ],
                        "line": [
                            177,
                            178,
                            189,
                            190
                        ],
                        "get_file_lines": [
                            177,
                            189
                        ],
                        "line.strip": [
                            178
                        ],
                        "IOError": [
                            182
                        ],
                        "os.access": [
                            185
                        ],
                        "os.R_OK": [
                            185
                        ],
                        "data": [
                            194,
                            190,
                            191
                        ],
                        "line.split": [
                            190
                        ],
                        "key": [
                            225,
                            229,
                            199,
                            231,
                            233,
                            235,
                            210,
                            214,
                            216,
                            218,
                            221,
                            191
                        ],
                        "strip": [
                            194,
                            191
                        ],
                        "val": [
                            194,
                            226,
                            196,
                            230,
                            232,
                            234,
                            204,
                            236,
                            213,
                            222
                        ],
                        "IndexError": [
                            195
                        ],
                        "append": [
                            213
                        ],
                        "int": [
                            232,
                            234,
                            236,
                            230
                        ],
                        "startswith": [
                            246
                        ],
                        "collected_facts.get": [
                            250,
                            246
                        ],
                        "len": [
                            258
                        ],
                        "socket_values": [
                            264,
                            262,
                            263
                        ],
                        "list": [
                            268,
                            262
                        ],
                        "sockets.values": [
                            262
                        ],
                        "core_values": [
                            268,
                            269,
                            270
                        ],
                        "cores.values": [
                            268
                        ]
                    },
                    "filtered_variables": {
                        "cpu_facts": [
                            258,
                            260,
                            264,
                            266,
                            270,
                            272,
                            274,
                            275,
                            277,
                            159,
                            186,
                            188,
                            211,
                            212,
                            213,
                            234,
                            252,
                            253,
                            254,
                            255
                        ],
                        "collected_facts": [
                            160,
                            250,
                            246
                        ],
                        "i": [
                            162,
                            260,
                            236,
                            241,
                            252,
                            247,
                            220,
                            253,
                            255
                        ],
                        "vendor_id_occurrence": [
                            163,
                            239,
                            240,
                            241,
                            215
                        ],
                        "model_name_occurrence": [
                            240,
                            217,
                            164
                        ],
                        "processor_occurence": [
                            219,
                            165,
                            247
                        ],
                        "physid": [
                            224,
                            230,
                            166,
                            222,
                            223
                        ],
                        "coreid": [
                            226,
                            227,
                            228,
                            167,
                            232
                        ],
                        "sockets": [
                            224,
                            257,
                            258,
                            227,
                            230,
                            262,
                            168,
                            223
                        ],
                        "cores": [
                            232,
                            169,
                            228,
                            268
                        ],
                        "xen": [
                            171,
                            179,
                            198,
                            175
                        ],
                        "xen_paravirt": [
                            251,
                            172,
                            205
                        ],
                        "os.path.exists": [
                            174
                        ],
                        "os.path": [
                            174
                        ],
                        "os": [
                            185,
                            174
                        ],
                        "line": [
                            177,
                            178,
                            189,
                            190
                        ],
                        "get_file_lines": [
                            177,
                            189
                        ],
                        "line.strip": [
                            178
                        ],
                        "os.access": [
                            185
                        ],
                        "os.R_OK": [
                            185
                        ],
                        "data": [
                            194,
                            190,
                            191
                        ],
                        "line.split": [
                            190
                        ],
                        "key": [
                            225,
                            229,
                            199,
                            231,
                            233,
                            235,
                            210,
                            214,
                            216,
                            218,
                            221,
                            191
                        ],
                        "strip": [
                            194,
                            191
                        ],
                        "val": [
                            194,
                            226,
                            196,
                            230,
                            232,
                            234,
                            204,
                            236,
                            213,
                            222
                        ],
                        "append": [
                            213
                        ],
                        "startswith": [
                            246
                        ],
                        "collected_facts.get": [
                            250,
                            246
                        ],
                        "socket_values": [
                            264,
                            262,
                            263
                        ],
                        "sockets.values": [
                            262
                        ],
                        "core_values": [
                            268,
                            269,
                            270
                        ],
                        "cores.values": [
                            268
                        ]
                    },
                    "diff_line_number": 245,
                    "class_data": {
                        "signature": "class LinuxHardware(Hardware)",
                        "docstring": "Linux-specific subclass of Hardware.  Defines memory and CPU facts:\n- memfree_mb\n- memtotal_mb\n- swapfree_mb\n- swaptotal_mb\n- processor (a list)\n- processor_cores\n- processor_count\n\nIn addition, it also defines number of DMI facts and device facts.",
                        "constructor_docstring": null,
                        "functions": [
                            "def populate(self, collected_facts=None):\n    hardware_facts = {}\n    self.module.run_command_environ_update = {'LANG': 'C', 'LC_ALL': 'C', 'LC_NUMERIC': 'C'}\n    cpu_facts = self.get_cpu_facts(collected_facts=collected_facts)\n    memory_facts = self.get_memory_facts()\n    dmi_facts = self.get_dmi_facts()\n    device_facts = self.get_device_facts()\n    uptime_facts = self.get_uptime_facts()\n    lvm_facts = self.get_lvm_facts()\n    mount_facts = {}\n    try:\n        mount_facts = self.get_mount_facts()\n    except timeout.TimeoutError:\n        pass\n    hardware_facts.update(cpu_facts)\n    hardware_facts.update(memory_facts)\n    hardware_facts.update(dmi_facts)\n    hardware_facts.update(device_facts)\n    hardware_facts.update(uptime_facts)\n    hardware_facts.update(lvm_facts)\n    hardware_facts.update(mount_facts)\n    return hardware_facts",
                            "def get_memory_facts(self):\n    memory_facts = {}\n    if not os.access('/proc/meminfo', os.R_OK):\n        return memory_facts\n    memstats = {}\n    for line in get_file_lines('/proc/meminfo'):\n        data = line.split(':', 1)\n        key = data[0]\n        if key in self.ORIGINAL_MEMORY_FACTS:\n            val = data[1].strip().split(' ')[0]\n            memory_facts['%s_mb' % key.lower()] = int(val) // 1024\n        if key in self.MEMORY_FACTS:\n            val = data[1].strip().split(' ')[0]\n            memstats[key.lower()] = int(val) // 1024\n    if None not in (memstats.get('memtotal'), memstats.get('memfree')):\n        memstats['real:used'] = memstats['memtotal'] - memstats['memfree']\n    if None not in (memstats.get('cached'), memstats.get('memfree'), memstats.get('buffers')):\n        memstats['nocache:free'] = memstats['cached'] + memstats['memfree'] + memstats['buffers']\n    if None not in (memstats.get('memtotal'), memstats.get('nocache:free')):\n        memstats['nocache:used'] = memstats['memtotal'] - memstats['nocache:free']\n    if None not in (memstats.get('swaptotal'), memstats.get('swapfree')):\n        memstats['swap:used'] = memstats['swaptotal'] - memstats['swapfree']\n    memory_facts['memory_mb'] = {'real': {'total': memstats.get('memtotal'), 'used': memstats.get('real:used'), 'free': memstats.get('memfree')}, 'nocache': {'free': memstats.get('nocache:free'), 'used': memstats.get('nocache:used')}, 'swap': {'total': memstats.get('swaptotal'), 'free': memstats.get('swapfree'), 'used': memstats.get('swap:used'), 'cached': memstats.get('swapcached')}}\n    return memory_facts",
                            "def get_cpu_facts(self, collected_facts=None):\n    cpu_facts = {}\n    collected_facts = collected_facts or {}\n    i = 0\n    vendor_id_occurrence = 0\n    model_name_occurrence = 0\n    processor_occurence = 0\n    physid = 0\n    coreid = 0\n    sockets = {}\n    cores = {}\n    xen = False\n    xen_paravirt = False\n    try:\n        if os.path.exists('/proc/xen'):\n            xen = True\n        else:\n            for line in get_file_lines('/sys/hypervisor/type'):\n                if line.strip() == 'xen':\n                    xen = True\n                break\n    except IOError:\n        pass\n    if not os.access('/proc/cpuinfo', os.R_OK):\n        return cpu_facts\n    cpu_facts['processor'] = []\n    for line in get_file_lines('/proc/cpuinfo'):\n        data = line.split(':', 1)\n        key = data[0].strip()\n        try:\n            val = data[1].strip()\n        except IndexError:\n            val = ''\n        if xen:\n            if key == 'flags':\n                if 'vme' not in val:\n                    xen_paravirt = True\n        if key in ['model name', 'Processor', 'vendor_id', 'cpu', 'Vendor', 'processor']:\n            if 'processor' not in cpu_facts:\n                cpu_facts['processor'] = []\n            cpu_facts['processor'].append(val)\n            if key == 'vendor_id':\n                vendor_id_occurrence += 1\n            if key == 'model name':\n                model_name_occurrence += 1\n            if key == 'processor':\n                processor_occurence += 1\n            i += 1\n        elif key == 'physical id':\n            physid = val\n            if physid not in sockets:\n                sockets[physid] = 1\n        elif key == 'core id':\n            coreid = val\n            if coreid not in sockets:\n                cores[coreid] = 1\n        elif key == 'cpu cores':\n            sockets[physid] = int(val)\n        elif key == 'siblings':\n            cores[coreid] = int(val)\n        elif key == '# processors':\n            cpu_facts['processor_cores'] = int(val)\n        elif key == 'ncpus active':\n            i = int(val)\n    if vendor_id_occurrence > 0:\n        if vendor_id_occurrence == model_name_occurrence:\n            i = vendor_id_occurrence\n    if collected_facts.get('ansible_architecture', '').startswith(('armv', 'aarch')):\n        i = processor_occurence\n    if collected_facts.get('ansible_architecture') != 's390x':\n        if xen_paravirt:\n            cpu_facts['processor_count'] = i\n            cpu_facts['processor_cores'] = i\n            cpu_facts['processor_threads_per_core'] = 1\n            cpu_facts['processor_vcpus'] = i\n        else:\n            if sockets:\n                cpu_facts['processor_count'] = len(sockets)\n            else:\n                cpu_facts['processor_count'] = i\n            socket_values = list(sockets.values())\n            if socket_values and socket_values[0]:\n                cpu_facts['processor_cores'] = socket_values[0]\n            else:\n                cpu_facts['processor_cores'] = 1\n            core_values = list(cores.values())\n            if core_values:\n                cpu_facts['processor_threads_per_core'] = core_values[0] // cpu_facts['processor_cores']\n            else:\n                cpu_facts['processor_threads_per_core'] = 1 // cpu_facts['processor_cores']\n            cpu_facts['processor_vcpus'] = cpu_facts['processor_threads_per_core'] * cpu_facts['processor_count'] * cpu_facts['processor_cores']\n    return cpu_facts",
                            "def get_dmi_facts(self):\n    \"\"\" learn dmi facts from system\n\n    Try /sys first for dmi related facts.\n    If that is not available, fall back to dmidecode executable \"\"\"\n    dmi_facts = {}\n    if os.path.exists('/sys/devices/virtual/dmi/id/product_name'):\n        FORM_FACTOR = ['Unknown', 'Other', 'Unknown', 'Desktop', 'Low Profile Desktop', 'Pizza Box', 'Mini Tower', 'Tower', 'Portable', 'Laptop', 'Notebook', 'Hand Held', 'Docking Station', 'All In One', 'Sub Notebook', 'Space-saving', 'Lunch Box', 'Main Server Chassis', 'Expansion Chassis', 'Sub Chassis', 'Bus Expansion Chassis', 'Peripheral Chassis', 'RAID Chassis', 'Rack Mount Chassis', 'Sealed-case PC', 'Multi-system', 'CompactPCI', 'AdvancedTCA', 'Blade', 'Blade Enclosure', 'Tablet', 'Convertible', 'Detachable', 'IoT Gateway', 'Embedded PC', 'Mini PC', 'Stick PC']\n        DMI_DICT = {'bios_date': '/sys/devices/virtual/dmi/id/bios_date', 'bios_version': '/sys/devices/virtual/dmi/id/bios_version', 'form_factor': '/sys/devices/virtual/dmi/id/chassis_type', 'product_name': '/sys/devices/virtual/dmi/id/product_name', 'product_serial': '/sys/devices/virtual/dmi/id/product_serial', 'product_uuid': '/sys/devices/virtual/dmi/id/product_uuid', 'product_version': '/sys/devices/virtual/dmi/id/product_version', 'system_vendor': '/sys/devices/virtual/dmi/id/sys_vendor'}\n        for key, path in DMI_DICT.items():\n            data = get_file_content(path)\n            if data is not None:\n                if key == 'form_factor':\n                    try:\n                        dmi_facts['form_factor'] = FORM_FACTOR[int(data)]\n                    except IndexError:\n                        dmi_facts['form_factor'] = 'unknown (%s)' % data\n                else:\n                    dmi_facts[key] = data\n            else:\n                dmi_facts[key] = 'NA'\n    else:\n        dmi_bin = self.module.get_bin_path('dmidecode')\n        DMI_DICT = {'bios_date': 'bios-release-date', 'bios_version': 'bios-version', 'form_factor': 'chassis-type', 'product_name': 'system-product-name', 'product_serial': 'system-serial-number', 'product_uuid': 'system-uuid', 'product_version': 'system-version', 'system_vendor': 'system-manufacturer'}\n        for k, v in DMI_DICT.items():\n            if dmi_bin is not None:\n                rc, out, err = self.module.run_command('%s -s %s' % (dmi_bin, v))\n                if rc == 0:\n                    thisvalue = ''.join([line for line in out.splitlines() if not line.startswith('#')])\n                    try:\n                        json.dumps(thisvalue)\n                    except UnicodeDecodeError:\n                        thisvalue = 'NA'\n                    dmi_facts[k] = thisvalue\n                else:\n                    dmi_facts[k] = 'NA'\n            else:\n                dmi_facts[k] = 'NA'\n    return dmi_facts",
                            "def _run_lsblk(self, lsblk_path):\n    args = ['--list', '--noheadings', '--paths', '--output', 'NAME,UUID', '--exclude', '2']\n    cmd = [lsblk_path] + args\n    rc, out, err = self.module.run_command(cmd)\n    return (rc, out, err)",
                            "def _lsblk_uuid(self):\n    uuids = {}\n    lsblk_path = self.module.get_bin_path('lsblk')\n    if not lsblk_path:\n        return uuids\n    rc, out, err = self._run_lsblk(lsblk_path)\n    if rc != 0:\n        return uuids\n    for lsblk_line in out.splitlines():\n        if not lsblk_line:\n            continue\n        line = lsblk_line.strip()\n        fields = line.rsplit(None, 1)\n        if len(fields) < 2:\n            continue\n        device_name, uuid = (fields[0].strip(), fields[1].strip())\n        if device_name in uuids:\n            continue\n        uuids[device_name] = uuid\n    return uuids",
                            "def _udevadm_uuid(self, device):\n    uuid = 'N/A'\n    udevadm_path = self.module.get_bin_path('udevadm')\n    if not udevadm_path:\n        return uuid\n    cmd = [udevadm_path, 'info', '--query', 'property', '--name', device]\n    rc, out, err = self.module.run_command(cmd)\n    if rc != 0:\n        return uuid\n    m = re.search('ID_FS_UUID=(.*)\\n', out)\n    if m:\n        uuid = m.group(1)\n    return uuid",
                            "def _run_findmnt(self, findmnt_path):\n    args = ['--list', '--noheadings', '--notruncate']\n    cmd = [findmnt_path] + args\n    rc, out, err = self.module.run_command(cmd, errors='surrogate_then_replace')\n    return (rc, out, err)",
                            "def _find_bind_mounts(self):\n    bind_mounts = set()\n    findmnt_path = self.module.get_bin_path('findmnt')\n    if not findmnt_path:\n        return bind_mounts\n    rc, out, err = self._run_findmnt(findmnt_path)\n    if rc != 0:\n        return bind_mounts\n    for line in out.splitlines():\n        fields = line.split()\n        if len(fields) < 2:\n            continue\n        if self.BIND_MOUNT_RE.match(fields[1]):\n            bind_mounts.add(fields[0])\n    return bind_mounts",
                            "def _mtab_entries(self):\n    mtab_file = '/etc/mtab'\n    if not os.path.exists(mtab_file):\n        mtab_file = '/proc/mounts'\n    mtab = get_file_content(mtab_file, '')\n    mtab_entries = []\n    for line in mtab.splitlines():\n        fields = line.split()\n        if len(fields) < 4:\n            continue\n        mtab_entries.append(fields)\n    return mtab_entries",
                            "@staticmethod\ndef _replace_octal_escapes_helper(match):\n    return chr(int(match.group()[1:], 8))",
                            "def _replace_octal_escapes(self, value):\n    return self.OCTAL_ESCAPE_RE.sub(self._replace_octal_escapes_helper, value)",
                            "def get_mount_info(self, mount, device, uuids):\n    mount_size = get_mount_size(mount)\n    uuid = uuids.get(device, self._udevadm_uuid(device))\n    return (mount_size, uuid)",
                            "def get_mount_facts(self):\n    mounts = []\n    bind_mounts = self._find_bind_mounts()\n    uuids = self._lsblk_uuid()\n    mtab_entries = self._mtab_entries()\n    results = {}\n    pool = ThreadPool(processes=min(len(mtab_entries), cpu_count()))\n    maxtime = globals().get('GATHER_TIMEOUT') or timeout.DEFAULT_GATHER_TIMEOUT\n    for fields in mtab_entries:\n        fields = [self._replace_octal_escapes(field) for field in fields]\n        device, mount, fstype, options = (fields[0], fields[1], fields[2], fields[3])\n        if not device.startswith('/') and ':/' not in device or fstype == 'none':\n            continue\n        mount_info = {'mount': mount, 'device': device, 'fstype': fstype, 'options': options}\n        if mount in bind_mounts:\n            if not self.MTAB_BIND_MOUNT_RE.match(options):\n                mount_info['options'] += ',bind'\n        results[mount] = {'info': mount_info, 'extra': pool.apply_async(self.get_mount_info, (mount, device, uuids)), 'timelimit': time.time() + maxtime}\n    pool.close()\n    while results:\n        for mount in results:\n            res = results[mount]['extra']\n            if res.ready():\n                if res.successful():\n                    mount_size, uuid = res.get()\n                    if mount_size:\n                        results[mount]['info'].update(mount_size)\n                    results[mount]['info']['uuid'] = uuid or 'N/A'\n                else:\n                    errmsg = to_text(res.get())\n                    self.module.warn('Error prevented getting extra info for mount %s: %s.' % (mount, errmsg))\n                    results[mount]['info']['note'] = 'Could not get extra information: %s.' % errmsg\n                mounts.append(results[mount]['info'])\n                del results[mount]\n                break\n            elif time.time() > results[mount]['timelimit']:\n                results[mount]['info']['note'] = 'Timed out while attempting to get extra information.'\n                mounts.append(results[mount]['info'])\n                del results[mount]\n                break\n        else:\n            time.sleep(0.1)\n    return {'mounts': mounts}",
                            "def get_device_links(self, link_dir):\n    if not os.path.exists(link_dir):\n        return {}\n    try:\n        retval = collections.defaultdict(set)\n        for entry in os.listdir(link_dir):\n            try:\n                target = os.path.basename(os.readlink(os.path.join(link_dir, entry)))\n                retval[target].add(entry)\n            except OSError:\n                continue\n        return dict(((k, list(sorted(v))) for k, v in iteritems(retval)))\n    except OSError:\n        return {}",
                            "def get_all_device_owners(self):\n    try:\n        retval = collections.defaultdict(set)\n        for path in glob.glob('/sys/block/*/slaves/*'):\n            elements = path.split('/')\n            device = elements[3]\n            target = elements[5]\n            retval[target].add(device)\n        return dict(((k, list(sorted(v))) for k, v in iteritems(retval)))\n    except OSError:\n        return {}",
                            "def get_all_device_links(self):\n    return {'ids': self.get_device_links('/dev/disk/by-id'), 'uuids': self.get_device_links('/dev/disk/by-uuid'), 'labels': self.get_device_links('/dev/disk/by-label'), 'masters': self.get_all_device_owners()}",
                            "def get_holders(self, block_dev_dict, sysdir):\n    block_dev_dict['holders'] = []\n    if os.path.isdir(sysdir + '/holders'):\n        for folder in os.listdir(sysdir + '/holders'):\n            if not folder.startswith('dm-'):\n                continue\n            name = get_file_content(sysdir + '/holders/' + folder + '/dm/name')\n            if name:\n                block_dev_dict['holders'].append(name)\n            else:\n                block_dev_dict['holders'].append(folder)",
                            "def get_device_facts(self):\n    device_facts = {}\n    device_facts['devices'] = {}\n    lspci = self.module.get_bin_path('lspci')\n    if lspci:\n        rc, pcidata, err = self.module.run_command([lspci, '-D'], errors='surrogate_then_replace')\n    else:\n        pcidata = None\n    try:\n        block_devs = os.listdir('/sys/block')\n    except OSError:\n        return device_facts\n    devs_wwn = {}\n    try:\n        devs_by_id = os.listdir('/dev/disk/by-id')\n    except OSError:\n        pass\n    else:\n        for link_name in devs_by_id:\n            if link_name.startswith('wwn-'):\n                try:\n                    wwn_link = os.readlink(os.path.join('/dev/disk/by-id', link_name))\n                except OSError:\n                    continue\n                devs_wwn[os.path.basename(wwn_link)] = link_name[4:]\n    links = self.get_all_device_links()\n    device_facts['device_links'] = links\n    for block in block_devs:\n        virtual = 1\n        sysfs_no_links = 0\n        try:\n            path = os.readlink(os.path.join('/sys/block/', block))\n        except OSError:\n            e = sys.exc_info()[1]\n            if e.errno == errno.EINVAL:\n                path = block\n                sysfs_no_links = 1\n            else:\n                continue\n        sysdir = os.path.join('/sys/block', path)\n        if sysfs_no_links == 1:\n            for folder in os.listdir(sysdir):\n                if 'device' in folder:\n                    virtual = 0\n                    break\n        d = {}\n        d['virtual'] = virtual\n        d['links'] = {}\n        for link_type, link_values in iteritems(links):\n            d['links'][link_type] = link_values.get(block, [])\n        diskname = os.path.basename(sysdir)\n        for key in ['vendor', 'model', 'sas_address', 'sas_device_handle']:\n            d[key] = get_file_content(sysdir + '/device/' + key)\n        sg_inq = self.module.get_bin_path('sg_inq')\n        if sg_inq:\n            device = '/dev/%s' % block\n            rc, drivedata, err = self.module.run_command([sg_inq, device])\n            if rc == 0:\n                serial = re.search('Unit serial number:\\\\s+(\\\\w+)', drivedata)\n                if serial:\n                    d['serial'] = serial.group(1)\n        for key, test in [('removable', '/removable'), ('support_discard', '/queue/discard_granularity')]:\n            d[key] = get_file_content(sysdir + test)\n        if diskname in devs_wwn:\n            d['wwn'] = devs_wwn[diskname]\n        d['partitions'] = {}\n        for folder in os.listdir(sysdir):\n            m = re.search('(' + diskname + '[p]?\\\\d+)', folder)\n            if m:\n                part = {}\n                partname = m.group(1)\n                part_sysdir = sysdir + '/' + partname\n                part['links'] = {}\n                for link_type, link_values in iteritems(links):\n                    part['links'][link_type] = link_values.get(partname, [])\n                part['start'] = get_file_content(part_sysdir + '/start', 0)\n                part['sectors'] = get_file_content(part_sysdir + '/size', 0)\n                part['sectorsize'] = get_file_content(part_sysdir + '/queue/logical_block_size')\n                if not part['sectorsize']:\n                    part['sectorsize'] = get_file_content(part_sysdir + '/queue/hw_sector_size', 512)\n                part['size'] = bytes_to_human(float(part['sectors']) * 512.0)\n                part['uuid'] = get_partition_uuid(partname)\n                self.get_holders(part, part_sysdir)\n                d['partitions'][partname] = part\n        d['rotational'] = get_file_content(sysdir + '/queue/rotational')\n        d['scheduler_mode'] = ''\n        scheduler = get_file_content(sysdir + '/queue/scheduler')\n        if scheduler is not None:\n            m = re.match('.*?(\\\\[(.*)\\\\])', scheduler)\n            if m:\n                d['scheduler_mode'] = m.group(2)\n        d['sectors'] = get_file_content(sysdir + '/size')\n        if not d['sectors']:\n            d['sectors'] = 0\n        d['sectorsize'] = get_file_content(sysdir + '/queue/logical_block_size')\n        if not d['sectorsize']:\n            d['sectorsize'] = get_file_content(sysdir + '/queue/hw_sector_size', 512)\n        d['size'] = bytes_to_human(float(d['sectors']) * 512.0)\n        d['host'] = ''\n        m = re.match('.+/([a-f0-9]{4}:[a-f0-9]{2}:[0|1][a-f0-9]\\\\.[0-7])/', sysdir)\n        if m and pcidata:\n            pciid = m.group(1)\n            did = re.escape(pciid)\n            m = re.search('^' + did + '\\\\s(.*)$', pcidata, re.MULTILINE)\n            if m:\n                d['host'] = m.group(1)\n        self.get_holders(d, sysdir)\n        device_facts['devices'][diskname] = d\n    return device_facts",
                            "def get_uptime_facts(self):\n    uptime_facts = {}\n    uptime_file_content = get_file_content('/proc/uptime')\n    if uptime_file_content:\n        uptime_seconds_string = uptime_file_content.split(' ')[0]\n        uptime_facts['uptime_seconds'] = int(float(uptime_seconds_string))\n    return uptime_facts",
                            "def _find_mapper_device_name(self, dm_device):\n    dm_prefix = '/dev/dm-'\n    mapper_device = dm_device\n    if dm_device.startswith(dm_prefix):\n        dmsetup_cmd = self.module.get_bin_path('dmsetup', True)\n        mapper_prefix = '/dev/mapper/'\n        rc, dm_name, err = self.module.run_command('%s info -C --noheadings -o name %s' % (dmsetup_cmd, dm_device))\n        if rc == 0:\n            mapper_device = mapper_prefix + dm_name.rstrip()\n    return mapper_device",
                            "def get_lvm_facts(self):\n    \"\"\" Get LVM Facts if running as root and lvm utils are available \"\"\"\n    lvm_facts = {}\n    if os.getuid() == 0 and self.module.get_bin_path('vgs'):\n        lvm_util_options = '--noheadings --nosuffix --units g --separator ,'\n        vgs_path = self.module.get_bin_path('vgs')\n        vgs = {}\n        if vgs_path:\n            rc, vg_lines, err = self.module.run_command('%s %s' % (vgs_path, lvm_util_options))\n            for vg_line in vg_lines.splitlines():\n                items = vg_line.strip().split(',')\n                vgs[items[0]] = {'size_g': items[-2], 'free_g': items[-1], 'num_lvs': items[2], 'num_pvs': items[1]}\n        lvs_path = self.module.get_bin_path('lvs')\n        lvs = {}\n        if lvs_path:\n            rc, lv_lines, err = self.module.run_command('%s %s' % (lvs_path, lvm_util_options))\n            for lv_line in lv_lines.splitlines():\n                items = lv_line.strip().split(',')\n                lvs[items[0]] = {'size_g': items[3], 'vg': items[1]}\n        pvs_path = self.module.get_bin_path('pvs')\n        pvs = {}\n        if pvs_path:\n            rc, pv_lines, err = self.module.run_command('%s %s' % (pvs_path, lvm_util_options))\n            for pv_line in pv_lines.splitlines():\n                items = pv_line.strip().split(',')\n                pvs[self._find_mapper_device_name(items[0])] = {'size_g': items[4], 'free_g': items[5], 'vg': items[1]}\n        lvm_facts['lvm'] = {'lvs': lvs, 'vgs': vgs, 'pvs': pvs}\n    return lvm_facts"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "platform",
                            "ORIGINAL_MEMORY_FACTS",
                            "MEMORY_FACTS",
                            "BIND_MOUNT_RE",
                            "MTAB_BIND_MOUNT_RE",
                            "OCTAL_ESCAPE_RE"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "populate(self, collected_facts=None)",
                            "get_memory_facts(self)",
                            "get_cpu_facts(self, collected_facts=None)",
                            "get_dmi_facts(self)",
                            "_run_lsblk(self, lsblk_path)",
                            "_lsblk_uuid(self)",
                            "_udevadm_uuid(self, device)",
                            "_run_findmnt(self, findmnt_path)",
                            "_find_bind_mounts(self)",
                            "_mtab_entries(self)",
                            "_replace_octal_escapes_helper(match)",
                            "_replace_octal_escapes(self, value)",
                            "get_mount_info(self, mount, device, uuids)",
                            "get_mount_facts(self)",
                            "get_device_links(self, link_dir)",
                            "get_all_device_owners(self)",
                            "get_all_device_links(self)",
                            "get_holders(self, block_dev_dict, sysdir)",
                            "get_device_facts(self)",
                            "get_uptime_facts(self)",
                            "_find_mapper_device_name(self, dm_device)",
                            "get_lvm_facts(self)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'ARMv6-compatible processor rev 7 (v6l)'], 'processor_count': 2, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'Serial      : 000000004a0abca9\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "31"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a86c60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['Serial      ', ' 000000004a0abca9\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a86c60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'Serial'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'000000004a0abca9'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x1039e92d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1039e9320>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1039e9370>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'ARMv7 Processor rev 4 (v7l)', '1', 'ARMv7 Processor rev 4 (v7l)', '2', 'ARMv7 Processor rev 4 (v7l)', '3', 'ARMv7 Processor rev 4 (v7l)'], 'processor_count': 8, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 8}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'Serial      : 000000007881bb80\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "31"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a8c760>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['Serial      ', ' 000000007881bb80\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a8c760>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'Serial'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'000000007881bb80'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x1039f2c30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1039f2c80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1039f2cd0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'AArch64 Processor rev 4 (aarch64)', '1', 'AArch64 Processor rev 4 (aarch64)', '2', 'AArch64 Processor rev 4 (aarch64)', '3', 'AArch64 Processor rev 4 (aarch64)'], 'processor_count': 8, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 8}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'CPU revision    : 4\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a8d260>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['CPU revision    ', ' 4\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a8d260>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'CPU revision'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'4'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x1039fe4b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1039fe500>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1039fe550>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216', '1', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216', '2', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216', '3', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216'], 'processor_count': 2, 'processor_cores': 2, 'processor_threads_per_core': 1, 'processor_vcpus': 4}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "coreid": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "sockets": {
                                    "variable_value": "{'0': 2, '1': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "cores": {
                                    "variable_value": "{0: 2, '0': 2, '1': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'power management: ts fid vid ttp tm stc\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "40"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a8bbd0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['power management', ' ts fid vid ttp tm stc\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a8bbd0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'power management'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'ts fid vid ttp tm stc'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x103605af0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[2, 2]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103605b40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[2, 2, 2]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103605b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '1', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '2', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '3', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '4', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '5', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '6', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '7', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz'], 'processor_count': 1, 'processor_cores': 4, 'processor_threads_per_core': 2, 'processor_vcpus': 8}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "'0'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "coreid": {
                                    "variable_value": "'3'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "sockets": {
                                    "variable_value": "{'0': 4}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "cores": {
                                    "variable_value": "{0: 8, '0': 8, '1': 8, '2': 8, '3': 1}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x101875230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x101875230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x103614410>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[4]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103614460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[8, 8, 8, 8, 1]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1036144b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', '1', '2', '3'], 'processor_count': 4, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 4}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'CPU revision    : 4\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a95440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['CPU revision    ', ' 4\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a95440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'CPU revision'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'4'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10361baf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10361bb40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10361bb90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'ARMv7 Processor rev 3 (v7l)', '1', 'ARMv7 Processor rev 3 (v7l)', '2', 'ARMv7 Processor rev 3 (v7l)', '3', 'ARMv7 Processor rev 3 (v7l)', '4', 'ARMv7 Processor rev 3 (v7l)', '5', 'ARMv7 Processor rev 3 (v7l)', '6', 'ARMv7 Processor rev 3 (v7l)', '7', 'ARMv7 Processor rev 3 (v7l)'], 'processor_count': 16, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 16}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "16",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'Serial      : 0000000000000000\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "31"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a967b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['Serial      ', ' 0000000000000000\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a967b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'Serial'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'0000000000000000'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x103613370>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x1036133c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103613410>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'GenuineIntel', 'Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz', '1', 'GenuineIntel', 'Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz'], 'processor_count': 2, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "coreid": {
                                    "variable_value": "'0'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "sockets": {
                                    "variable_value": "{'0': 1, '1': 1}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "cores": {
                                    "variable_value": "{0: 1, '0': 1}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'power management:\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a99580>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['power management', '\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a99580>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'power management'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x1036317d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[1, 1]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103631820>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[1, 1]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103631870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'POWER7 (architected), altivec supported', '1', 'POWER7 (architected), altivec supported', '2', 'POWER7 (architected), altivec supported', '3', 'POWER7 (architected), altivec supported', '4', 'POWER7 (architected), altivec supported', '5', 'POWER7 (architected), altivec supported', '6', 'POWER7 (architected), altivec supported', '7', 'POWER7 (architected), altivec supported'], 'processor_count': 16, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 16}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "16",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'machine\\t\\t: CHRP IBM,8231-E2B'",
                                    "variable_type": "str",
                                    "variable_shape": "28"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x103a99d50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['machine\\t\\t', ' CHRP IBM,8231-E2B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x103a99d50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'machine'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'CHRP IBM,8231-E2B'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x103637dc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103637e10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x103637e60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'ARMv6-compatible processor rev 7 (v6l)'], 'processor_count': 2, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'Serial      : 000000004a0abca9\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "31"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10b08bad0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['Serial      ', ' 000000004a0abca9\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10b08bad0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'Serial'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'000000004a0abca9'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ac2d0f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10ac2d140>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10ac2d190>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'ARMv7 Processor rev 4 (v7l)', '1', 'ARMv7 Processor rev 4 (v7l)', '2', 'ARMv7 Processor rev 4 (v7l)', '3', 'ARMv7 Processor rev 4 (v7l)'], 'processor_count': 8, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 8}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'Serial      : 000000007881bb80\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "31"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10ac06ee0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['Serial      ', ' 000000007881bb80\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10ac06ee0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'Serial'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'000000007881bb80'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ac379b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10ac37a00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10ac37a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'AArch64 Processor rev 4 (aarch64)', '1', 'AArch64 Processor rev 4 (aarch64)', '2', 'AArch64 Processor rev 4 (aarch64)', '3', 'AArch64 Processor rev 4 (aarch64)'], 'processor_count': 8, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 8}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'CPU revision    : 4\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10b0909e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['CPU revision    ', ' 4\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10b0909e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'CPU revision'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'4'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ac07690>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10ac37960>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0c3320>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216', '1', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216', '2', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216', '3', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216'], 'processor_count': 2, 'processor_cores': 2, 'processor_threads_per_core': 1, 'processor_vcpus': 4}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "coreid": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "sockets": {
                                    "variable_value": "{'0': 2, '1': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "cores": {
                                    "variable_value": "{0: 2, '0': 2, '1': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'power management: ts fid vid ttp tm stc\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "40"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10ac018d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['power management', ' ts fid vid ttp tm stc\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10ac018d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'power management'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'ts fid vid ttp tm stc'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10b0c4960>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[2, 2]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0c49b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[2, 2, 2]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0c4a00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '1', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '2', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '3', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '4', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '5', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '6', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz', '7', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz'], 'processor_count': 1, 'processor_cores': 4, 'processor_threads_per_core': 2, 'processor_vcpus': 8}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "'0'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "coreid": {
                                    "variable_value": "'3'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "sockets": {
                                    "variable_value": "{'0': 4}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "cores": {
                                    "variable_value": "{0: 8, '0': 8, '1': 8, '2': 8, '3': 1}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x108e82230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x108e82230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10b0d9190>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[4]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0d91e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[8, 8, 8, 8, 1]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0d9230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', '1', '2', '3'], 'processor_count': 4, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 4}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'CPU revision    : 4\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10b095bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['CPU revision    ', ' 4\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10b095bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'CPU revision'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'4'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10b0d79b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0d7a00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0d7a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'ARMv7 Processor rev 3 (v7l)', '1', 'ARMv7 Processor rev 3 (v7l)', '2', 'ARMv7 Processor rev 3 (v7l)', '3', 'ARMv7 Processor rev 3 (v7l)', '4', 'ARMv7 Processor rev 3 (v7l)', '5', 'ARMv7 Processor rev 3 (v7l)', '6', 'ARMv7 Processor rev 3 (v7l)', '7', 'ARMv7 Processor rev 3 (v7l)'], 'processor_count': 16, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 16}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "16",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'Serial      : 0000000000000000\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "31"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10b097f30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['Serial      ', ' 0000000000000000\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10b097f30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'Serial'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'0000000000000000'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10b0ea5a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0ea5f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0ea640>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'GenuineIntel', 'Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz', '1', 'GenuineIntel', 'Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz'], 'processor_count': 2, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "coreid": {
                                    "variable_value": "'0'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "sockets": {
                                    "variable_value": "{'0': 1, '1': 1}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "cores": {
                                    "variable_value": "{0: 1, '0': 1}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'power management:\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10b096d00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['power management', '\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10b096d00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'power management'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10b0f7050>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[1, 1]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0f70a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[1, 1]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0f70f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'POWER7 (architected), altivec supported', '1', 'POWER7 (architected), altivec supported', '2', 'POWER7 (architected), altivec supported', '3', 'POWER7 (architected), altivec supported', '4', 'POWER7 (architected), altivec supported', '5', 'POWER7 (architected), altivec supported', '6', 'POWER7 (architected), altivec supported', '7', 'POWER7 (architected), altivec supported'], 'processor_count': 16, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 16}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "16",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "8",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'machine\\t\\t: CHRP IBM,8231-E2B'",
                                    "variable_type": "str",
                                    "variable_shape": "28"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10b099530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['machine\\t\\t', ' CHRP IBM,8231-E2B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10b099530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'machine'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'CHRP IBM,8231-E2B'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10b0e75a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0e75f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0e7640>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['0', 'POWER8 (architected), altivec supported', '1', 'POWER8 (architected), altivec supported', '2', 'POWER8 (architected), altivec supported', '3', 'POWER8 (architected), altivec supported', '4', 'POWER8 (architected), altivec supported', '5', 'POWER8 (architected), altivec supported', '6', 'POWER8 (architected), altivec supported', '7', 'POWER8 (architected), altivec supported', '8', 'POWER8 (architected), altivec supported', '9', 'POWER8 (architected), altivec supported', '10', 'POWER8 (architected), altivec supported', '11', 'POWER8 (architected), altivec supported', '12', 'POWER8 (architected), altivec supported', '13', 'POWER8 (architected), altivec supported', '14', 'POWER8 (architected), altivec supported', '15', 'POWER8 (architected), altivec supported', '16', 'POWER8 (architected), altivec supported', '17', 'POWER8 (architected), altivec supported', '18', 'POWER8 (architected), altivec supported', '19', 'POWER8 (architected), altivec supported', '20', 'POWER8 (architected), altivec supported', '21', 'POWER8 (architected), altivec supported', '22', 'POWER8 (architected), altivec supported', '23', 'POWER8 (architected), altivec supported'], 'processor_count': 48, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 48}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "48",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "24",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x108e82230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x108e82230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10b0e8d20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0e8d70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10b0e8dc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cpu_facts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sockets.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cores.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cpu_facts": {
                                    "variable_value": "{'processor': ['UltraSparc T5 (Niagara5)'], 'processor_count': 24, 'processor_cores': 1, 'processor_threads_per_core': 1, 'processor_vcpus': 24}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "collected_facts": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "i": {
                                    "variable_value": "24",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "vendor_id_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "model_name_occurrence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "processor_occurence": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "physid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "coreid": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "sockets": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "cores": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "xen": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "xen_paravirt": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line": {
                                    "variable_value": "'CPU23:          online\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "get_file_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x10b09c990>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.access": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.R_OK": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": "['CPU23', '          online\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "line.split": {
                                    "variable_value": "<built-in method split of str object at 0x10b09c990>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'CPU23'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "val": {
                                    "variable_value": "'online'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collected_facts.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10af815a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "socket_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "sockets.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10af815f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "core_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "cores.values": {
                                    "variable_value": "<built-in method values of dict object at 0x10af81640>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def get_partition_uuid(partname):\n    try:\n        uuids = os.listdir(\"/dev/disk/by-uuid\")\n    except OSError:\n        return\n\n    for uuid in uuids:\n        dev = os.path.realpath(\"/dev/disk/by-uuid/\" + uuid)\n        if dev == (\"/dev/\" + partname):\n            return uuid\n\n    return None",
                "def populate(self, collected_facts=None):\n    hardware_facts = {}\n    self.module.run_command_environ_update = {'LANG': 'C', 'LC_ALL': 'C', 'LC_NUMERIC': 'C'}\n\n    cpu_facts = self.get_cpu_facts(collected_facts=collected_facts)\n    memory_facts = self.get_memory_facts()\n    dmi_facts = self.get_dmi_facts()\n    device_facts = self.get_device_facts()\n    uptime_facts = self.get_uptime_facts()\n    lvm_facts = self.get_lvm_facts()\n\n    mount_facts = {}\n    try:\n        mount_facts = self.get_mount_facts()\n    except timeout.TimeoutError:\n        pass\n\n    hardware_facts.update(cpu_facts)\n    hardware_facts.update(memory_facts)\n    hardware_facts.update(dmi_facts)\n    hardware_facts.update(device_facts)\n    hardware_facts.update(uptime_facts)\n    hardware_facts.update(lvm_facts)\n    hardware_facts.update(mount_facts)\n\n    return hardware_facts",
                "def get_memory_facts(self):\n    memory_facts = {}\n    if not os.access(\"/proc/meminfo\", os.R_OK):\n        return memory_facts\n\n    memstats = {}\n    for line in get_file_lines(\"/proc/meminfo\"):\n        data = line.split(\":\", 1)\n        key = data[0]\n        if key in self.ORIGINAL_MEMORY_FACTS:\n            val = data[1].strip().split(' ')[0]\n            memory_facts[\"%s_mb\" % key.lower()] = int(val) // 1024\n\n        if key in self.MEMORY_FACTS:\n            val = data[1].strip().split(' ')[0]\n            memstats[key.lower()] = int(val) // 1024\n\n    if None not in (memstats.get('memtotal'), memstats.get('memfree')):\n        memstats['real:used'] = memstats['memtotal'] - memstats['memfree']\n    if None not in (memstats.get('cached'), memstats.get('memfree'), memstats.get('buffers')):\n        memstats['nocache:free'] = memstats['cached'] + memstats['memfree'] + memstats['buffers']\n    if None not in (memstats.get('memtotal'), memstats.get('nocache:free')):\n        memstats['nocache:used'] = memstats['memtotal'] - memstats['nocache:free']\n    if None not in (memstats.get('swaptotal'), memstats.get('swapfree')):\n        memstats['swap:used'] = memstats['swaptotal'] - memstats['swapfree']\n\n    memory_facts['memory_mb'] = {\n        'real': {\n            'total': memstats.get('memtotal'),\n            'used': memstats.get('real:used'),\n            'free': memstats.get('memfree'),\n        },\n        'nocache': {\n            'free': memstats.get('nocache:free'),\n            'used': memstats.get('nocache:used'),\n        },\n        'swap': {\n            'total': memstats.get('swaptotal'),\n            'free': memstats.get('swapfree'),\n            'used': memstats.get('swap:used'),\n            'cached': memstats.get('swapcached'),\n        },\n    }\n\n    return memory_facts",
                "def get_cpu_facts(self, collected_facts=None):\n    cpu_facts = {}\n    collected_facts = collected_facts or {}\n\n    i = 0\n    vendor_id_occurrence = 0\n    model_name_occurrence = 0\n    processor_occurence = 0\n    physid = 0\n    coreid = 0\n    sockets = {}\n    cores = {}\n\n    xen = False\n    xen_paravirt = False\n    try:\n        if os.path.exists('/proc/xen'):\n            xen = True\n        else:\n            for line in get_file_lines('/sys/hypervisor/type'):\n                if line.strip() == 'xen':\n                    xen = True\n                # Only interested in the first line\n                break\n    except IOError:\n        pass\n\n    if not os.access(\"/proc/cpuinfo\", os.R_OK):\n        return cpu_facts\n\n    cpu_facts['processor'] = []\n    for line in get_file_lines('/proc/cpuinfo'):\n        data = line.split(\":\", 1)\n        key = data[0].strip()\n\n        try:\n            val = data[1].strip()\n        except IndexError:\n            val = \"\"\n\n        if xen:\n            if key == 'flags':\n                # Check for vme cpu flag, Xen paravirt does not expose this.\n                #   Need to detect Xen paravirt because it exposes cpuinfo\n                #   differently than Xen HVM or KVM and causes reporting of\n                #   only a single cpu core.\n                if 'vme' not in val:\n                    xen_paravirt = True\n\n        # model name is for Intel arch, Processor (mind the uppercase P)\n        # works for some ARM devices, like the Sheevaplug.\n        # 'ncpus active' is SPARC attribute\n        if key in ['model name', 'Processor', 'vendor_id', 'cpu', 'Vendor', 'processor']:\n            if 'processor' not in cpu_facts:\n                cpu_facts['processor'] = []\n            cpu_facts['processor'].append(val)\n            if key == 'vendor_id':\n                vendor_id_occurrence += 1\n            if key == 'model name':\n                model_name_occurrence += 1\n            if key == 'processor':\n                processor_occurence += 1\n            i += 1\n        elif key == 'physical id':\n            physid = val\n            if physid not in sockets:\n                sockets[physid] = 1\n        elif key == 'core id':\n            coreid = val\n            if coreid not in sockets:\n                cores[coreid] = 1\n        elif key == 'cpu cores':\n            sockets[physid] = int(val)\n        elif key == 'siblings':\n            cores[coreid] = int(val)\n        elif key == '# processors':\n            cpu_facts['processor_cores'] = int(val)\n        elif key == 'ncpus active':\n            i = int(val)\n\n    # Skip for platforms without vendor_id/model_name in cpuinfo (e.g ppc64le)\n    if vendor_id_occurrence > 0:\n        if vendor_id_occurrence == model_name_occurrence:\n            i = vendor_id_occurrence\n\n    # The fields for ARM CPUs do not always include 'vendor_id' or 'model name',\n    # and sometimes includes both 'processor' and 'Processor'.\n    # Always use 'processor' count for ARM systems\n    if collected_facts.get('ansible_architecture', '').startswith(('armv', 'aarch')):\n        i = processor_occurence\n\n    # FIXME\n    if collected_facts.get('ansible_architecture') != 's390x':\n        if xen_paravirt:\n            cpu_facts['processor_count'] = i\n            cpu_facts['processor_cores'] = i\n            cpu_facts['processor_threads_per_core'] = 1\n            cpu_facts['processor_vcpus'] = i\n        else:\n            if sockets:\n                cpu_facts['processor_count'] = len(sockets)\n            else:\n                cpu_facts['processor_count'] = i\n\n            socket_values = list(sockets.values())\n            if socket_values and socket_values[0]:\n                cpu_facts['processor_cores'] = socket_values[0]\n            else:\n                cpu_facts['processor_cores'] = 1\n\n            core_values = list(cores.values())\n            if core_values:\n                cpu_facts['processor_threads_per_core'] = core_values[0] // cpu_facts['processor_cores']\n            else:\n                cpu_facts['processor_threads_per_core'] = 1 // cpu_facts['processor_cores']\n\n            cpu_facts['processor_vcpus'] = (cpu_facts['processor_threads_per_core'] *\n                                            cpu_facts['processor_count'] * cpu_facts['processor_cores'])\n\n    return cpu_facts",
                "def get_dmi_facts(self):\n    ''' learn dmi facts from system\n\n    Try /sys first for dmi related facts.\n    If that is not available, fall back to dmidecode executable '''\n\n    dmi_facts = {}\n\n    if os.path.exists('/sys/devices/virtual/dmi/id/product_name'):\n        # Use kernel DMI info, if available\n\n        # DMI SPEC -- https://www.dmtf.org/sites/default/files/standards/documents/DSP0134_3.2.0.pdf\n        FORM_FACTOR = [\"Unknown\", \"Other\", \"Unknown\", \"Desktop\",\n                       \"Low Profile Desktop\", \"Pizza Box\", \"Mini Tower\", \"Tower\",\n                       \"Portable\", \"Laptop\", \"Notebook\", \"Hand Held\", \"Docking Station\",\n                       \"All In One\", \"Sub Notebook\", \"Space-saving\", \"Lunch Box\",\n                       \"Main Server Chassis\", \"Expansion Chassis\", \"Sub Chassis\",\n                       \"Bus Expansion Chassis\", \"Peripheral Chassis\", \"RAID Chassis\",\n                       \"Rack Mount Chassis\", \"Sealed-case PC\", \"Multi-system\",\n                       \"CompactPCI\", \"AdvancedTCA\", \"Blade\", \"Blade Enclosure\",\n                       \"Tablet\", \"Convertible\", \"Detachable\", \"IoT Gateway\",\n                       \"Embedded PC\", \"Mini PC\", \"Stick PC\"]\n\n        DMI_DICT = {\n            'bios_date': '/sys/devices/virtual/dmi/id/bios_date',\n            'bios_version': '/sys/devices/virtual/dmi/id/bios_version',\n            'form_factor': '/sys/devices/virtual/dmi/id/chassis_type',\n            'product_name': '/sys/devices/virtual/dmi/id/product_name',\n            'product_serial': '/sys/devices/virtual/dmi/id/product_serial',\n            'product_uuid': '/sys/devices/virtual/dmi/id/product_uuid',\n            'product_version': '/sys/devices/virtual/dmi/id/product_version',\n            'system_vendor': '/sys/devices/virtual/dmi/id/sys_vendor'\n        }\n\n        for (key, path) in DMI_DICT.items():\n            data = get_file_content(path)\n            if data is not None:\n                if key == 'form_factor':\n                    try:\n                        dmi_facts['form_factor'] = FORM_FACTOR[int(data)]\n                    except IndexError:\n                        dmi_facts['form_factor'] = 'unknown (%s)' % data\n                else:\n                    dmi_facts[key] = data\n            else:\n                dmi_facts[key] = 'NA'\n\n    else:\n        # Fall back to using dmidecode, if available\n        dmi_bin = self.module.get_bin_path('dmidecode')\n        DMI_DICT = {\n            'bios_date': 'bios-release-date',\n            'bios_version': 'bios-version',\n            'form_factor': 'chassis-type',\n            'product_name': 'system-product-name',\n            'product_serial': 'system-serial-number',\n            'product_uuid': 'system-uuid',\n            'product_version': 'system-version',\n            'system_vendor': 'system-manufacturer'\n        }\n        for (k, v) in DMI_DICT.items():\n            if dmi_bin is not None:\n                (rc, out, err) = self.module.run_command('%s -s %s' % (dmi_bin, v))\n                if rc == 0:\n                    # Strip out commented lines (specific dmidecode output)\n                    thisvalue = ''.join([line for line in out.splitlines() if not line.startswith('#')])\n                    try:\n                        json.dumps(thisvalue)\n                    except UnicodeDecodeError:\n                        thisvalue = \"NA\"\n\n                    dmi_facts[k] = thisvalue\n                else:\n                    dmi_facts[k] = 'NA'\n            else:\n                dmi_facts[k] = 'NA'\n\n    return dmi_facts",
                "def _run_lsblk(self, lsblk_path):\n    # call lsblk and collect all uuids\n    # --exclude 2 makes lsblk ignore floppy disks, which are slower to answer than typical timeouts\n    # this uses the linux major device number\n    # for details see https://www.kernel.org/doc/Documentation/devices.txt\n    args = ['--list', '--noheadings', '--paths', '--output', 'NAME,UUID', '--exclude', '2']\n    cmd = [lsblk_path] + args\n    rc, out, err = self.module.run_command(cmd)\n    return rc, out, err",
                "def _lsblk_uuid(self):\n    uuids = {}\n    lsblk_path = self.module.get_bin_path(\"lsblk\")\n    if not lsblk_path:\n        return uuids\n\n    rc, out, err = self._run_lsblk(lsblk_path)\n    if rc != 0:\n        return uuids\n\n    # each line will be in format:\n    # <devicename><some whitespace><uuid>\n    # /dev/sda1  32caaec3-ef40-4691-a3b6-438c3f9bc1c0\n    for lsblk_line in out.splitlines():\n        if not lsblk_line:\n            continue\n\n        line = lsblk_line.strip()\n        fields = line.rsplit(None, 1)\n\n        if len(fields) < 2:\n            continue\n\n        device_name, uuid = fields[0].strip(), fields[1].strip()\n        if device_name in uuids:\n            continue\n        uuids[device_name] = uuid\n\n    return uuids",
                "def _udevadm_uuid(self, device):\n    # fallback for versions of lsblk <= 2.23 that don't have --paths, see _run_lsblk() above\n    uuid = 'N/A'\n\n    udevadm_path = self.module.get_bin_path('udevadm')\n    if not udevadm_path:\n        return uuid\n\n    cmd = [udevadm_path, 'info', '--query', 'property', '--name', device]\n    rc, out, err = self.module.run_command(cmd)\n    if rc != 0:\n        return uuid\n\n    # a snippet of the output of the udevadm command below will be:\n    # ...\n    # ID_FS_TYPE=ext4\n    # ID_FS_USAGE=filesystem\n    # ID_FS_UUID=57b1a3e7-9019-4747-9809-7ec52bba9179\n    # ...\n    m = re.search('ID_FS_UUID=(.*)\\n', out)\n    if m:\n        uuid = m.group(1)\n\n    return uuid",
                "def _run_findmnt(self, findmnt_path):\n    args = ['--list', '--noheadings', '--notruncate']\n    cmd = [findmnt_path] + args\n    rc, out, err = self.module.run_command(cmd, errors='surrogate_then_replace')\n    return rc, out, err",
                "def _find_bind_mounts(self):\n    bind_mounts = set()\n    findmnt_path = self.module.get_bin_path(\"findmnt\")\n    if not findmnt_path:\n        return bind_mounts\n\n    rc, out, err = self._run_findmnt(findmnt_path)\n    if rc != 0:\n        return bind_mounts\n\n    # find bind mounts, in case /etc/mtab is a symlink to /proc/mounts\n    for line in out.splitlines():\n        fields = line.split()\n        # fields[0] is the TARGET, fields[1] is the SOURCE\n        if len(fields) < 2:\n            continue\n\n        # bind mounts will have a [/directory_name] in the SOURCE column\n        if self.BIND_MOUNT_RE.match(fields[1]):\n            bind_mounts.add(fields[0])\n\n    return bind_mounts",
                "def _mtab_entries(self):\n    mtab_file = '/etc/mtab'\n    if not os.path.exists(mtab_file):\n        mtab_file = '/proc/mounts'\n\n    mtab = get_file_content(mtab_file, '')\n    mtab_entries = []\n    for line in mtab.splitlines():\n        fields = line.split()\n        if len(fields) < 4:\n            continue\n        mtab_entries.append(fields)\n    return mtab_entries",
                "@staticmethod\ndef _replace_octal_escapes_helper(match):\n    # Convert to integer using base8 and then convert to character\n    return chr(int(match.group()[1:], 8))",
                "def _replace_octal_escapes(self, value):\n    return self.OCTAL_ESCAPE_RE.sub(self._replace_octal_escapes_helper, value)",
                "def get_mount_info(self, mount, device, uuids):\n\n    mount_size = get_mount_size(mount)\n\n    # _udevadm_uuid is a fallback for versions of lsblk <= 2.23 that don't have --paths\n    # see _run_lsblk() above\n    # https://github.com/ansible/ansible/issues/36077\n    uuid = uuids.get(device, self._udevadm_uuid(device))\n\n    return mount_size, uuid",
                "def get_mount_facts(self):\n\n    mounts = []\n\n    # gather system lists\n    bind_mounts = self._find_bind_mounts()\n    uuids = self._lsblk_uuid()\n    mtab_entries = self._mtab_entries()\n\n    # start threads to query each mount\n    results = {}\n    pool = ThreadPool(processes=min(len(mtab_entries), cpu_count()))\n    maxtime = globals().get('GATHER_TIMEOUT') or timeout.DEFAULT_GATHER_TIMEOUT\n    for fields in mtab_entries:\n        # Transform octal escape sequences\n        fields = [self._replace_octal_escapes(field) for field in fields]\n\n        device, mount, fstype, options = fields[0], fields[1], fields[2], fields[3]\n\n        if not device.startswith('/') and ':/' not in device or fstype == 'none':\n            continue\n\n        mount_info = {'mount': mount,\n                      'device': device,\n                      'fstype': fstype,\n                      'options': options}\n\n        if mount in bind_mounts:\n            # only add if not already there, we might have a plain /etc/mtab\n            if not self.MTAB_BIND_MOUNT_RE.match(options):\n                mount_info['options'] += \",bind\"\n\n        results[mount] = {'info': mount_info,\n                          'extra': pool.apply_async(self.get_mount_info, (mount, device, uuids)),\n                          'timelimit': time.time() + maxtime}\n\n    pool.close()  # done with new workers, start gc\n\n    # wait for workers and get results\n    while results:\n        for mount in results:\n            res = results[mount]['extra']\n            if res.ready():\n                if res.successful():\n                    mount_size, uuid = res.get()\n                    if mount_size:\n                        results[mount]['info'].update(mount_size)\n                    results[mount]['info']['uuid'] = uuid or 'N/A'\n                else:\n                    # give incomplete data\n                    errmsg = to_text(res.get())\n                    self.module.warn(\"Error prevented getting extra info for mount %s: %s.\" % (mount, errmsg))\n                    results[mount]['info']['note'] = 'Could not get extra information: %s.' % (errmsg)\n\n                mounts.append(results[mount]['info'])\n                del results[mount]\n                break\n            elif time.time() > results[mount]['timelimit']:\n                results[mount]['info']['note'] = 'Timed out while attempting to get extra information.'\n                mounts.append(results[mount]['info'])\n                del results[mount]\n                break\n        else:\n            # avoid cpu churn\n            time.sleep(0.1)\n\n    return {'mounts': mounts}",
                "def get_device_links(self, link_dir):\n    if not os.path.exists(link_dir):\n        return {}\n    try:\n        retval = collections.defaultdict(set)\n        for entry in os.listdir(link_dir):\n            try:\n                target = os.path.basename(os.readlink(os.path.join(link_dir, entry)))\n                retval[target].add(entry)\n            except OSError:\n                continue\n        return dict((k, list(sorted(v))) for (k, v) in iteritems(retval))\n    except OSError:\n        return {}",
                "def get_all_device_owners(self):\n    try:\n        retval = collections.defaultdict(set)\n        for path in glob.glob('/sys/block/*/slaves/*'):\n            elements = path.split('/')\n            device = elements[3]\n            target = elements[5]\n            retval[target].add(device)\n        return dict((k, list(sorted(v))) for (k, v) in iteritems(retval))\n    except OSError:\n        return {}",
                "def get_all_device_links(self):\n    return {\n        'ids': self.get_device_links('/dev/disk/by-id'),\n        'uuids': self.get_device_links('/dev/disk/by-uuid'),\n        'labels': self.get_device_links('/dev/disk/by-label'),\n        'masters': self.get_all_device_owners(),\n    }",
                "def get_holders(self, block_dev_dict, sysdir):\n    block_dev_dict['holders'] = []\n    if os.path.isdir(sysdir + \"/holders\"):\n        for folder in os.listdir(sysdir + \"/holders\"):\n            if not folder.startswith(\"dm-\"):\n                continue\n            name = get_file_content(sysdir + \"/holders/\" + folder + \"/dm/name\")\n            if name:\n                block_dev_dict['holders'].append(name)\n            else:\n                block_dev_dict['holders'].append(folder)",
                "def get_device_facts(self):\n    device_facts = {}\n\n    device_facts['devices'] = {}\n    lspci = self.module.get_bin_path('lspci')\n    if lspci:\n        rc, pcidata, err = self.module.run_command([lspci, '-D'], errors='surrogate_then_replace')\n    else:\n        pcidata = None\n\n    try:\n        block_devs = os.listdir(\"/sys/block\")\n    except OSError:\n        return device_facts\n\n    devs_wwn = {}\n    try:\n        devs_by_id = os.listdir(\"/dev/disk/by-id\")\n    except OSError:\n        pass\n    else:\n        for link_name in devs_by_id:\n            if link_name.startswith(\"wwn-\"):\n                try:\n                    wwn_link = os.readlink(os.path.join(\"/dev/disk/by-id\", link_name))\n                except OSError:\n                    continue\n                devs_wwn[os.path.basename(wwn_link)] = link_name[4:]\n\n    links = self.get_all_device_links()\n    device_facts['device_links'] = links\n\n    for block in block_devs:\n        virtual = 1\n        sysfs_no_links = 0\n        try:\n            path = os.readlink(os.path.join(\"/sys/block/\", block))\n        except OSError:\n            e = sys.exc_info()[1]\n            if e.errno == errno.EINVAL:\n                path = block\n                sysfs_no_links = 1\n            else:\n                continue\n        sysdir = os.path.join(\"/sys/block\", path)\n        if sysfs_no_links == 1:\n            for folder in os.listdir(sysdir):\n                if \"device\" in folder:\n                    virtual = 0\n                    break\n        d = {}\n        d['virtual'] = virtual\n        d['links'] = {}\n        for (link_type, link_values) in iteritems(links):\n            d['links'][link_type] = link_values.get(block, [])\n        diskname = os.path.basename(sysdir)\n        for key in ['vendor', 'model', 'sas_address', 'sas_device_handle']:\n            d[key] = get_file_content(sysdir + \"/device/\" + key)\n\n        sg_inq = self.module.get_bin_path('sg_inq')\n\n        if sg_inq:\n            device = \"/dev/%s\" % (block)\n            rc, drivedata, err = self.module.run_command([sg_inq, device])\n            if rc == 0:\n                serial = re.search(r\"Unit serial number:\\s+(\\w+)\", drivedata)\n                if serial:\n                    d['serial'] = serial.group(1)\n\n        for key, test in [('removable', '/removable'),\n                          ('support_discard', '/queue/discard_granularity'),\n                          ]:\n            d[key] = get_file_content(sysdir + test)\n\n        if diskname in devs_wwn:\n            d['wwn'] = devs_wwn[diskname]\n\n        d['partitions'] = {}\n        for folder in os.listdir(sysdir):\n            m = re.search(\"(\" + diskname + r\"[p]?\\d+)\", folder)\n            if m:\n                part = {}\n                partname = m.group(1)\n                part_sysdir = sysdir + \"/\" + partname\n\n                part['links'] = {}\n                for (link_type, link_values) in iteritems(links):\n                    part['links'][link_type] = link_values.get(partname, [])\n\n                part['start'] = get_file_content(part_sysdir + \"/start\", 0)\n                part['sectors'] = get_file_content(part_sysdir + \"/size\", 0)\n\n                part['sectorsize'] = get_file_content(part_sysdir + \"/queue/logical_block_size\")\n                if not part['sectorsize']:\n                    part['sectorsize'] = get_file_content(part_sysdir + \"/queue/hw_sector_size\", 512)\n                part['size'] = bytes_to_human((float(part['sectors']) * 512.0))\n                part['uuid'] = get_partition_uuid(partname)\n                self.get_holders(part, part_sysdir)\n\n                d['partitions'][partname] = part\n\n        d['rotational'] = get_file_content(sysdir + \"/queue/rotational\")\n        d['scheduler_mode'] = \"\"\n        scheduler = get_file_content(sysdir + \"/queue/scheduler\")\n        if scheduler is not None:\n            m = re.match(r\".*?(\\[(.*)\\])\", scheduler)\n            if m:\n                d['scheduler_mode'] = m.group(2)\n\n        d['sectors'] = get_file_content(sysdir + \"/size\")\n        if not d['sectors']:\n            d['sectors'] = 0\n        d['sectorsize'] = get_file_content(sysdir + \"/queue/logical_block_size\")\n        if not d['sectorsize']:\n            d['sectorsize'] = get_file_content(sysdir + \"/queue/hw_sector_size\", 512)\n        d['size'] = bytes_to_human(float(d['sectors']) * 512.0)\n\n        d['host'] = \"\"\n\n        # domains are numbered (0 to ffff), bus (0 to ff), slot (0 to 1f), and function (0 to 7).\n        m = re.match(r\".+/([a-f0-9]{4}:[a-f0-9]{2}:[0|1][a-f0-9]\\.[0-7])/\", sysdir)\n        if m and pcidata:\n            pciid = m.group(1)\n            did = re.escape(pciid)\n            m = re.search(\"^\" + did + r\"\\s(.*)$\", pcidata, re.MULTILINE)\n            if m:\n                d['host'] = m.group(1)\n\n        self.get_holders(d, sysdir)\n\n        device_facts['devices'][diskname] = d\n\n    return device_facts",
                "def get_uptime_facts(self):\n    uptime_facts = {}\n    uptime_file_content = get_file_content('/proc/uptime')\n    if uptime_file_content:\n        uptime_seconds_string = uptime_file_content.split(' ')[0]\n        uptime_facts['uptime_seconds'] = int(float(uptime_seconds_string))\n\n    return uptime_facts",
                "def _find_mapper_device_name(self, dm_device):\n    dm_prefix = '/dev/dm-'\n    mapper_device = dm_device\n    if dm_device.startswith(dm_prefix):\n        dmsetup_cmd = self.module.get_bin_path('dmsetup', True)\n        mapper_prefix = '/dev/mapper/'\n        rc, dm_name, err = self.module.run_command(\"%s info -C --noheadings -o name %s\" % (dmsetup_cmd, dm_device))\n        if rc == 0:\n            mapper_device = mapper_prefix + dm_name.rstrip()\n    return mapper_device",
                "def get_lvm_facts(self):\n    \"\"\" Get LVM Facts if running as root and lvm utils are available \"\"\"\n\n    lvm_facts = {}\n\n    if os.getuid() == 0 and self.module.get_bin_path('vgs'):\n        lvm_util_options = '--noheadings --nosuffix --units g --separator ,'\n\n        vgs_path = self.module.get_bin_path('vgs')\n        # vgs fields: VG #PV #LV #SN Attr VSize VFree\n        vgs = {}\n        if vgs_path:\n            rc, vg_lines, err = self.module.run_command('%s %s' % (vgs_path, lvm_util_options))\n            for vg_line in vg_lines.splitlines():\n                items = vg_line.strip().split(',')\n                vgs[items[0]] = {'size_g': items[-2],\n                                 'free_g': items[-1],\n                                 'num_lvs': items[2],\n                                 'num_pvs': items[1]}\n\n        lvs_path = self.module.get_bin_path('lvs')\n        # lvs fields:\n        # LV VG Attr LSize Pool Origin Data% Move Log Copy% Convert\n        lvs = {}\n        if lvs_path:\n            rc, lv_lines, err = self.module.run_command('%s %s' % (lvs_path, lvm_util_options))\n            for lv_line in lv_lines.splitlines():\n                items = lv_line.strip().split(',')\n                lvs[items[0]] = {'size_g': items[3], 'vg': items[1]}\n\n        pvs_path = self.module.get_bin_path('pvs')\n        # pvs fields: PV VG #Fmt #Attr PSize PFree\n        pvs = {}\n        if pvs_path:\n            rc, pv_lines, err = self.module.run_command('%s %s' % (pvs_path, lvm_util_options))\n            for pv_line in pv_lines.splitlines():\n                items = pv_line.strip().split(',')\n                pvs[self._find_mapper_device_name(items[0])] = {\n                    'size_g': items[4],\n                    'free_g': items[5],\n                    'vg': items[1]}\n\n        lvm_facts['lvm'] = {'lvs': lvs, 'vgs': vgs, 'pvs': pvs}\n\n    return lvm_facts"
            ],
            "inscope_function_signatures": [
                "get_partition_uuid(partname)",
                "populate(self, collected_facts=None)",
                "get_memory_facts(self)",
                "get_cpu_facts(self, collected_facts=None)",
                "get_dmi_facts(self)",
                "_run_lsblk(self, lsblk_path)",
                "_lsblk_uuid(self)",
                "_udevadm_uuid(self, device)",
                "_run_findmnt(self, findmnt_path)",
                "_find_bind_mounts(self)",
                "_mtab_entries(self)",
                "_replace_octal_escapes_helper(match)",
                "_replace_octal_escapes(self, value)",
                "get_mount_info(self, mount, device, uuids)",
                "get_mount_facts(self)",
                "get_device_links(self, link_dir)",
                "get_all_device_owners(self)",
                "get_all_device_links(self)",
                "get_holders(self, block_dev_dict, sysdir)",
                "get_device_facts(self)",
                "get_uptime_facts(self)",
                "_find_mapper_device_name(self, dm_device)",
                "get_lvm_facts(self)"
            ],
            "variables_in_file": {
                "__metaclass__": [
                    17
                ],
                "type": [
                    17
                ],
                "uuids": [
                    481,
                    518,
                    392,
                    394,
                    43,
                    396,
                    491,
                    47,
                    369,
                    372,
                    376
                ],
                "os.listdir": [
                    611,
                    646,
                    678,
                    617,
                    43,
                    558,
                    591
                ],
                "os": [
                    644,
                    646,
                    655,
                    287,
                    678,
                    554,
                    43,
                    174,
                    558,
                    48,
                    560,
                    185,
                    454,
                    590,
                    591,
                    611,
                    617,
                    624,
                    114,
                    627,
                    759,
                    636
                ],
                "OSError": [
                    577,
                    612,
                    618,
                    44,
                    625,
                    562,
                    565,
                    637
                ],
                "uuid": [
                    481,
                    419,
                    483,
                    421,
                    391,
                    394,
                    47,
                    48,
                    400,
                    50,
                    529,
                    404,
                    532,
                    409
                ],
                "dev": [
                    48,
                    49
                ],
                "os.path.realpath": [
                    48
                ],
                "os.path": [
                    644,
                    454,
                    554,
                    174,
                    590,
                    48,
                    560,
                    624,
                    627,
                    655,
                    636,
                    287
                ],
                "partname": [
                    682,
                    683,
                    687,
                    49,
                    696,
                    699
                ],
                "Hardware": [
                    55
                ],
                "platform": [
                    69
                ],
                "ORIGINAL_MEMORY_FACTS": [
                    72,
                    74
                ],
                "frozenset": [
                    72
                ],
                "MEMORY_FACTS": [
                    74
                ],
                "ORIGINAL_MEMORY_FACTS.union": [
                    74
                ],
                "BIND_MOUNT_RE": [
                    77
                ],
                "re.compile": [
                    80,
                    83,
                    77
                ],
                "re": [
                    417,
                    705,
                    679,
                    77,
                    80,
                    720,
                    83,
                    723,
                    724,
                    665
                ],
                "MTAB_BIND_MOUNT_RE": [
                    80
                ],
                "OCTAL_ESCAPE_RE": [
                    83
                ],
                "hardware_facts": [
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    110,
                    86
                ],
                "self.module.run_command_environ_update": [
                    87
                ],
                "self.module": [
                    774,
                    779,
                    784,
                    402,
                    659,
                    788,
                    407,
                    663,
                    536,
                    426,
                    431,
                    328,
                    341,
                    87,
                    604,
                    606,
                    747,
                    365,
                    749,
                    370,
                    759,
                    762,
                    766
                ],
                "self": [
                    514,
                    518,
                    774,
                    779,
                    784,
                    402,
                    659,
                    788,
                    407,
                    536,
                    663,
                    791,
                    426,
                    431,
                    435,
                    697,
                    447,
                    582,
                    583,
                    328,
                    584,
                    585,
                    728,
                    341,
                    87,
                    472,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    604,
                    606,
                    481,
                    98,
                    490,
                    491,
                    492,
                    365,
                    747,
                    749,
                    370,
                    500,
                    629,
                    374,
                    759,
                    121,
                    762,
                    125,
                    766
                ],
                "cpu_facts": [
                    258,
                    260,
                    264,
                    266,
                    270,
                    272,
                    274,
                    275,
                    277,
                    159,
                    186,
                    188,
                    211,
                    212,
                    213,
                    89,
                    102,
                    234,
                    252,
                    253,
                    254,
                    255
                ],
                "self.get_cpu_facts": [
                    89
                ],
                "collected_facts": [
                    160,
                    89,
                    250,
                    246
                ],
                "memory_facts": [
                    103,
                    138,
                    113,
                    115,
                    90,
                    123,
                    156
                ],
                "self.get_memory_facts": [
                    90
                ],
                "dmi_facts": [
                    320,
                    350,
                    322,
                    352,
                    324,
                    354,
                    356,
                    104,
                    91,
                    285,
                    318
                ],
                "self.get_dmi_facts": [
                    91
                ],
                "device_facts": [
                    732,
                    613,
                    105,
                    630,
                    601,
                    730,
                    603,
                    92
                ],
                "self.get_device_facts": [
                    92
                ],
                "uptime_facts": [
                    739,
                    741,
                    106,
                    93,
                    735
                ],
                "self.get_uptime_facts": [
                    93
                ],
                "lvm_facts": [
                    107,
                    798,
                    757,
                    796,
                    94
                ],
                "self.get_lvm_facts": [
                    94
                ],
                "mount_facts": [
                    96,
                    98,
                    108
                ],
                "self.get_mount_facts": [
                    98
                ],
                "timeout.TimeoutError": [
                    99
                ],
                "timeout": [
                    497,
                    99
                ],
                "hardware_facts.update": [
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108
                ],
                "os.access": [
                    185,
                    114
                ],
                "os.R_OK": [
                    185,
                    114
                ],
                "memstats": [
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    140,
                    141,
                    142,
                    145,
                    146,
                    149,
                    150,
                    151,
                    152,
                    117,
                    127
                ],
                "line": [
                    385,
                    386,
                    440,
                    459,
                    460,
                    177,
                    178,
                    118,
                    119,
                    344,
                    441,
                    189,
                    190
                ],
                "get_file_lines": [
                    177,
                    189,
                    118
                ],
                "data": [
                    318,
                    320,
                    194,
                    126,
                    322,
                    314,
                    119,
                    120,
                    122,
                    315,
                    190,
                    191
                ],
                "line.split": [
                    441,
                    460,
                    190,
                    119
                ],
                "key": [
                    656,
                    657,
                    669,
                    672,
                    313,
                    316,
                    191,
                    322,
                    324,
                    199,
                    210,
                    214,
                    216,
                    218,
                    221,
                    225,
                    229,
                    231,
                    233,
                    235,
                    120,
                    121,
                    123,
                    125,
                    127
                ],
                "self.ORIGINAL_MEMORY_FACTS": [
                    121
                ],
                "val": [
                    194,
                    226,
                    196,
                    230,
                    232,
                    234,
                    204,
                    236,
                    213,
                    122,
                    123,
                    222,
                    126,
                    127
                ],
                "split": [
                    768,
                    781,
                    790,
                    122,
                    126
                ],
                "strip": [
                    194,
                    391,
                    122,
                    126,
                    191
                ],
                "key.lower": [
                    123,
                    127
                ],
                "int": [
                    739,
                    230,
                    232,
                    234,
                    236,
                    469,
                    123,
                    318,
                    127
                ],
                "self.MEMORY_FACTS": [
                    125
                ],
                "memstats.get": [
                    129,
                    131,
                    133,
                    135,
                    140,
                    141,
                    142,
                    145,
                    146,
                    149,
                    150,
                    151,
                    152
                ],
                "i": [
                    162,
                    260,
                    236,
                    241,
                    252,
                    247,
                    220,
                    253,
                    255
                ],
                "vendor_id_occurrence": [
                    163,
                    239,
                    240,
                    241,
                    215
                ],
                "model_name_occurrence": [
                    240,
                    217,
                    164
                ],
                "processor_occurence": [
                    219,
                    165,
                    247
                ],
                "physid": [
                    224,
                    230,
                    166,
                    222,
                    223
                ],
                "coreid": [
                    226,
                    227,
                    228,
                    167,
                    232
                ],
                "sockets": [
                    224,
                    257,
                    258,
                    227,
                    230,
                    262,
                    168,
                    223
                ],
                "cores": [
                    232,
                    169,
                    228,
                    268
                ],
                "xen": [
                    171,
                    179,
                    198,
                    175
                ],
                "xen_paravirt": [
                    251,
                    172,
                    205
                ],
                "os.path.exists": [
                    554,
                    454,
                    174,
                    287
                ],
                "line.strip": [
                    178
                ],
                "IOError": [
                    182
                ],
                "IndexError": [
                    195,
                    319
                ],
                "append": [
                    596,
                    213,
                    598
                ],
                "startswith": [
                    246
                ],
                "collected_facts.get": [
                    250,
                    246
                ],
                "len": [
                    258,
                    388,
                    461,
                    496,
                    443
                ],
                "socket_values": [
                    264,
                    262,
                    263
                ],
                "list": [
                    576,
                    268,
                    262,
                    564
                ],
                "sockets.values": [
                    262
                ],
                "core_values": [
                    268,
                    269,
                    270
                ],
                "cores.values": [
                    268
                ],
                "FORM_FACTOR": [
                    291,
                    318
                ],
                "DMI_DICT": [
                    329,
                    313,
                    339,
                    302
                ],
                "path": [
                    640,
                    644,
                    313,
                    314,
                    571,
                    636,
                    572
                ],
                "DMI_DICT.items": [
                    313,
                    339
                ],
                "get_file_content": [
                    672,
                    736,
                    709,
                    712,
                    457,
                    714,
                    657,
                    594,
                    689,
                    690,
                    692,
                    694,
                    314,
                    701,
                    703
                ],
                "dmi_bin": [
                    328,
                    340,
                    341
                ],
                "self.module.get_bin_path": [
                    774,
                    328,
                    747,
                    431,
                    784,
                    370,
                    402,
                    659,
                    759,
                    762,
                    604
                ],
                "k": [
                    352,
                    576,
                    354,
                    339,
                    564,
                    350
                ],
                "v": [
                    576,
                    339,
                    564,
                    341
                ],
                "rc": [
                    779,
                    788,
                    407,
                    663,
                    664,
                    408,
                    426,
                    427,
                    435,
                    436,
                    341,
                    342,
                    606,
                    365,
                    366,
                    749,
                    750,
                    374,
                    375,
                    766
                ],
                "out": [
                    417,
                    440,
                    426,
                    427,
                    365,
                    366,
                    435,
                    341,
                    374,
                    407,
                    344,
                    381
                ],
                "err": [
                    663,
                    426,
                    427,
                    779,
                    365,
                    366,
                    749,
                    766,
                    435,
                    788,
                    341,
                    374,
                    407,
                    606
                ],
                "self.module.run_command": [
                    663,
                    426,
                    779,
                    365,
                    749,
                    766,
                    788,
                    341,
                    407,
                    606
                ],
                "thisvalue": [
                    344,
                    346,
                    348,
                    350
                ],
                "join": [
                    344
                ],
                "out.splitlines": [
                    344,
                    381,
                    440
                ],
                "line.startswith": [
                    344
                ],
                "json.dumps": [
                    346
                ],
                "json": [
                    346
                ],
                "UnicodeDecodeError": [
                    347
                ],
                "args": [
                    424,
                    425,
                    363,
                    364
                ],
                "cmd": [
                    425,
                    426,
                    364,
                    365,
                    406,
                    407
                ],
                "lsblk_path": [
                    370,
                    371,
                    364,
                    374
                ],
                "self._run_lsblk": [
                    374
                ],
                "lsblk_line": [
                    385,
                    381,
                    382
                ],
                "lsblk_line.strip": [
                    385
                ],
                "fields": [
                    448,
                    386,
                    388,
                    391,
                    460,
                    461,
                    463,
                    498,
                    500,
                    502,
                    441,
                    443,
                    447
                ],
                "line.rsplit": [
                    386
                ],
                "device_name": [
                    392,
                    394,
                    391
                ],
                "udevadm_path": [
                    402,
                    403,
                    406
                ],
                "device": [
                    481,
                    518,
                    663,
                    406,
                    502,
                    504,
                    662,
                    508,
                    573,
                    575
                ],
                "m": [
                    417,
                    418,
                    419,
                    705,
                    706,
                    707,
                    679,
                    680,
                    682,
                    720,
                    721,
                    722,
                    724,
                    725,
                    726
                ],
                "re.search": [
                    417,
                    665,
                    724,
                    679
                ],
                "m.group": [
                    419,
                    707,
                    682,
                    722,
                    726
                ],
                "findmnt_path": [
                    432,
                    425,
                    435,
                    431
                ],
                "bind_mounts": [
                    448,
                    512,
                    450,
                    490,
                    430,
                    433,
                    437
                ],
                "set": [
                    570,
                    805,
                    557,
                    430
                ],
                "self._run_findmnt": [
                    435
                ],
                "self.BIND_MOUNT_RE.match": [
                    447
                ],
                "self.BIND_MOUNT_RE": [
                    447
                ],
                "bind_mounts.add": [
                    448
                ],
                "mtab_file": [
                    457,
                    453,
                    454,
                    455
                ],
                "mtab": [
                    457,
                    459
                ],
                "mtab_entries": [
                    458,
                    492,
                    463,
                    464,
                    496,
                    498
                ],
                "mtab.splitlines": [
                    459
                ],
                "mtab_entries.append": [
                    463
                ],
                "chr": [
                    469
                ],
                "match.group": [
                    469
                ],
                "match": [
                    469
                ],
                "staticmethod": [
                    466
                ],
                "self.OCTAL_ESCAPE_RE.sub": [
                    472
                ],
                "self.OCTAL_ESCAPE_RE": [
                    472
                ],
                "self._replace_octal_escapes_helper": [
                    472
                ],
                "value": [
                    472
                ],
                "mount_size": [
                    483,
                    529,
                    530,
                    531,
                    476
                ],
                "get_mount_size": [
                    476
                ],
                "mount": [
                    512,
                    544,
                    545,
                    517,
                    518,
                    542,
                    525,
                    526,
                    531,
                    532,
                    502,
                    536,
                    537,
                    507,
                    476,
                    540,
                    539,
                    543
                ],
                "uuids.get": [
                    481
                ],
                "self._udevadm_uuid": [
                    481
                ],
                "mounts": [
                    544,
                    539,
                    551,
                    487
                ],
                "self._find_bind_mounts": [
                    490
                ],
                "self._lsblk_uuid": [
                    491
                ],
                "self._mtab_entries": [
                    492
                ],
                "results": [
                    544,
                    545,
                    517,
                    524,
                    525,
                    526,
                    495,
                    531,
                    532,
                    537,
                    539,
                    540,
                    542,
                    543
                ],
                "pool": [
                    496,
                    521,
                    518
                ],
                "ThreadPool": [
                    496
                ],
                "min": [
                    496
                ],
                "cpu_count": [
                    496
                ],
                "maxtime": [
                    497,
                    519
                ],
                "get": [
                    497
                ],
                "globals": [
                    497
                ],
                "timeout.DEFAULT_GATHER_TIMEOUT": [
                    497
                ],
                "self._replace_octal_escapes": [
                    500
                ],
                "field": [
                    500
                ],
                "fstype": [
                    504,
                    509,
                    502
                ],
                "options": [
                    514,
                    502,
                    510
                ],
                "device.startswith": [
                    504
                ],
                "mount_info": [
                    515,
                    507,
                    517
                ],
                "self.MTAB_BIND_MOUNT_RE.match": [
                    514
                ],
                "self.MTAB_BIND_MOUNT_RE": [
                    514
                ],
                "pool.apply_async": [
                    518
                ],
                "self.get_mount_info": [
                    518
                ],
                "time.time": [
                    542,
                    519
                ],
                "time": [
                    549,
                    542,
                    519
                ],
                "pool.close": [
                    521
                ],
                "res": [
                    526,
                    527,
                    528,
                    529,
                    535
                ],
                "res.ready": [
                    527
                ],
                "res.successful": [
                    528
                ],
                "res.get": [
                    529,
                    535
                ],
                "update": [
                    531
                ],
                "errmsg": [
                    536,
                    537,
                    535
                ],
                "to_text": [
                    535
                ],
                "self.module.warn": [
                    536
                ],
                "mounts.append": [
                    544,
                    539
                ],
                "time.sleep": [
                    549
                ],
                "link_dir": [
                    560,
                    554,
                    558
                ],
                "retval": [
                    576,
                    557,
                    561,
                    564,
                    570,
                    575
                ],
                "collections.defaultdict": [
                    570,
                    557
                ],
                "collections": [
                    570,
                    557
                ],
                "entry": [
                    560,
                    561,
                    558
                ],
                "target": [
                    560,
                    561,
                    574,
                    575
                ],
                "os.path.basename": [
                    560,
                    627,
                    655
                ],
                "os.readlink": [
                    560,
                    636,
                    624
                ],
                "os.path.join": [
                    560,
                    636,
                    624,
                    644
                ],
                "add": [
                    561,
                    575
                ],
                "dict": [
                    576,
                    564
                ],
                "sorted": [
                    576,
                    564
                ],
                "iteritems": [
                    576,
                    564,
                    653,
                    686
                ],
                "glob.glob": [
                    571
                ],
                "glob": [
                    571
                ],
                "elements": [
                    572,
                    573,
                    574
                ],
                "path.split": [
                    572
                ],
                "self.get_device_links": [
                    584,
                    582,
                    583
                ],
                "self.get_all_device_owners": [
                    585
                ],
                "block_dev_dict": [
                    596,
                    589,
                    598
                ],
                "os.path.isdir": [
                    590
                ],
                "sysdir": [
                    672,
                    644,
                    709,
                    646,
                    678,
                    712,
                    714,
                    683,
                    590,
                    591,
                    655,
                    657,
                    594,
                    720,
                    728,
                    701,
                    703
                ],
                "folder": [
                    646,
                    647,
                    678,
                    679,
                    591,
                    592,
                    594,
                    598
                ],
                "folder.startswith": [
                    592
                ],
                "name": [
                    594,
                    595,
                    596
                ],
                "lspci": [
                    604,
                    605,
                    606
                ],
                "pcidata": [
                    608,
                    721,
                    724,
                    606
                ],
                "block_devs": [
                    632,
                    611
                ],
                "devs_wwn": [
                    674,
                    627,
                    675,
                    615
                ],
                "devs_by_id": [
                    617,
                    621
                ],
                "link_name": [
                    624,
                    627,
                    621,
                    622
                ],
                "link_name.startswith": [
                    622
                ],
                "wwn_link": [
                    624,
                    627
                ],
                "links": [
                    686,
                    629,
                    630,
                    653
                ],
                "self.get_all_device_links": [
                    629
                ],
                "block": [
                    640,
                    654,
                    662,
                    632,
                    636
                ],
                "virtual": [
                    648,
                    633,
                    651
                ],
                "sysfs_no_links": [
                    641,
                    634,
                    645
                ],
                "e": [
                    638,
                    639
                ],
                "sys.exc_info": [
                    638
                ],
                "sys": [
                    638
                ],
                "e.errno": [
                    639
                ],
                "errno.EINVAL": [
                    639
                ],
                "errno": [
                    639
                ],
                "d": [
                    650,
                    651,
                    652,
                    654,
                    657,
                    667,
                    672,
                    675,
                    677,
                    699,
                    701,
                    702,
                    707,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    717,
                    726,
                    728,
                    730
                ],
                "link_type": [
                    686,
                    653,
                    654,
                    687
                ],
                "link_values": [
                    686,
                    653,
                    654,
                    687
                ],
                "link_values.get": [
                    654,
                    687
                ],
                "diskname": [
                    674,
                    675,
                    679,
                    655,
                    730
                ],
                "sg_inq": [
                    659,
                    661,
                    663
                ],
                "drivedata": [
                    665,
                    663
                ],
                "serial": [
                    665,
                    666,
                    667
                ],
                "serial.group": [
                    667
                ],
                "test": [
                    672,
                    669
                ],
                "part": [
                    681,
                    685,
                    687,
                    689,
                    690,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    699
                ],
                "part_sysdir": [
                    683,
                    689,
                    690,
                    692,
                    694,
                    697
                ],
                "bytes_to_human": [
                    715,
                    695
                ],
                "float": [
                    715,
                    739,
                    695
                ],
                "get_partition_uuid": [
                    696
                ],
                "self.get_holders": [
                    728,
                    697
                ],
                "scheduler": [
                    704,
                    705,
                    703
                ],
                "re.match": [
                    720,
                    705
                ],
                "pciid": [
                    722,
                    723
                ],
                "did": [
                    723,
                    724
                ],
                "re.escape": [
                    723
                ],
                "re.MULTILINE": [
                    724
                ],
                "uptime_file_content": [
                    736,
                    737,
                    738
                ],
                "uptime_seconds_string": [
                    738,
                    739
                ],
                "uptime_file_content.split": [
                    738
                ],
                "dm_prefix": [
                    744,
                    746
                ],
                "mapper_device": [
                    752,
                    745,
                    751
                ],
                "dm_device": [
                    745,
                    746,
                    749
                ],
                "dm_device.startswith": [
                    746
                ],
                "dmsetup_cmd": [
                    747,
                    749
                ],
                "mapper_prefix": [
                    748,
                    751
                ],
                "dm_name": [
                    749,
                    751
                ],
                "dm_name.rstrip": [
                    751
                ],
                "os.getuid": [
                    759
                ],
                "lvm_util_options": [
                    760,
                    779,
                    788,
                    766
                ],
                "vgs_path": [
                    762,
                    765,
                    766
                ],
                "vgs": [
                    769,
                    764,
                    796
                ],
                "vg_lines": [
                    766,
                    767
                ],
                "vg_line": [
                    768,
                    767
                ],
                "vg_lines.splitlines": [
                    767
                ],
                "items": [
                    768,
                    769,
                    770,
                    771,
                    772,
                    781,
                    782,
                    790,
                    791,
                    792,
                    793,
                    794
                ],
                "vg_line.strip": [
                    768
                ],
                "lvs_path": [
                    778,
                    779,
                    774
                ],
                "lvs": [
                    777,
                    796,
                    782
                ],
                "lv_lines": [
                    779,
                    780
                ],
                "lv_line": [
                    780,
                    781
                ],
                "lv_lines.splitlines": [
                    780
                ],
                "lv_line.strip": [
                    781
                ],
                "pvs_path": [
                    784,
                    787,
                    788
                ],
                "pvs": [
                    786,
                    796,
                    791
                ],
                "pv_lines": [
                    788,
                    789
                ],
                "pv_line": [
                    789,
                    790
                ],
                "pv_lines.splitlines": [
                    789
                ],
                "pv_line.strip": [
                    790
                ],
                "self._find_mapper_device_name": [
                    791
                ],
                "HardwareCollector": [
                    801
                ],
                "_platform": [
                    802
                ],
                "_fact_class": [
                    803
                ],
                "LinuxHardware": [
                    803
                ],
                "required_facts": [
                    805
                ]
            },
            "filtered_variables_in_file": {
                "__metaclass__": [
                    17
                ],
                "uuids": [
                    481,
                    518,
                    392,
                    394,
                    43,
                    396,
                    491,
                    47,
                    369,
                    372,
                    376
                ],
                "os.listdir": [
                    611,
                    646,
                    678,
                    617,
                    43,
                    558,
                    591
                ],
                "os": [
                    644,
                    646,
                    655,
                    287,
                    678,
                    554,
                    43,
                    174,
                    558,
                    48,
                    560,
                    185,
                    454,
                    590,
                    591,
                    611,
                    617,
                    624,
                    114,
                    627,
                    759,
                    636
                ],
                "uuid": [
                    481,
                    419,
                    483,
                    421,
                    391,
                    394,
                    47,
                    48,
                    400,
                    50,
                    529,
                    404,
                    532,
                    409
                ],
                "dev": [
                    48,
                    49
                ],
                "os.path.realpath": [
                    48
                ],
                "os.path": [
                    644,
                    454,
                    554,
                    174,
                    590,
                    48,
                    560,
                    624,
                    627,
                    655,
                    636,
                    287
                ],
                "partname": [
                    682,
                    683,
                    687,
                    49,
                    696,
                    699
                ],
                "Hardware": [
                    55
                ],
                "platform": [
                    69
                ],
                "ORIGINAL_MEMORY_FACTS": [
                    72,
                    74
                ],
                "MEMORY_FACTS": [
                    74
                ],
                "ORIGINAL_MEMORY_FACTS.union": [
                    74
                ],
                "BIND_MOUNT_RE": [
                    77
                ],
                "re.compile": [
                    80,
                    83,
                    77
                ],
                "re": [
                    417,
                    705,
                    679,
                    77,
                    80,
                    720,
                    83,
                    723,
                    724,
                    665
                ],
                "MTAB_BIND_MOUNT_RE": [
                    80
                ],
                "OCTAL_ESCAPE_RE": [
                    83
                ],
                "hardware_facts": [
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    110,
                    86
                ],
                "self.module.run_command_environ_update": [
                    87
                ],
                "self.module": [
                    774,
                    779,
                    784,
                    402,
                    659,
                    788,
                    407,
                    663,
                    536,
                    426,
                    431,
                    328,
                    341,
                    87,
                    604,
                    606,
                    747,
                    365,
                    749,
                    370,
                    759,
                    762,
                    766
                ],
                "self": [
                    514,
                    518,
                    774,
                    779,
                    784,
                    402,
                    659,
                    788,
                    407,
                    536,
                    663,
                    791,
                    426,
                    431,
                    435,
                    697,
                    447,
                    582,
                    583,
                    328,
                    584,
                    585,
                    728,
                    341,
                    87,
                    472,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    604,
                    606,
                    481,
                    98,
                    490,
                    491,
                    492,
                    365,
                    747,
                    749,
                    370,
                    500,
                    629,
                    374,
                    759,
                    121,
                    762,
                    125,
                    766
                ],
                "cpu_facts": [
                    258,
                    260,
                    264,
                    266,
                    270,
                    272,
                    274,
                    275,
                    277,
                    159,
                    186,
                    188,
                    211,
                    212,
                    213,
                    89,
                    102,
                    234,
                    252,
                    253,
                    254,
                    255
                ],
                "self.get_cpu_facts": [
                    89
                ],
                "collected_facts": [
                    160,
                    89,
                    250,
                    246
                ],
                "memory_facts": [
                    103,
                    138,
                    113,
                    115,
                    90,
                    123,
                    156
                ],
                "self.get_memory_facts": [
                    90
                ],
                "dmi_facts": [
                    320,
                    350,
                    322,
                    352,
                    324,
                    354,
                    356,
                    104,
                    91,
                    285,
                    318
                ],
                "self.get_dmi_facts": [
                    91
                ],
                "device_facts": [
                    732,
                    613,
                    105,
                    630,
                    601,
                    730,
                    603,
                    92
                ],
                "self.get_device_facts": [
                    92
                ],
                "uptime_facts": [
                    739,
                    741,
                    106,
                    93,
                    735
                ],
                "self.get_uptime_facts": [
                    93
                ],
                "lvm_facts": [
                    107,
                    798,
                    757,
                    796,
                    94
                ],
                "self.get_lvm_facts": [
                    94
                ],
                "mount_facts": [
                    96,
                    98,
                    108
                ],
                "self.get_mount_facts": [
                    98
                ],
                "timeout.TimeoutError": [
                    99
                ],
                "timeout": [
                    497,
                    99
                ],
                "hardware_facts.update": [
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108
                ],
                "os.access": [
                    185,
                    114
                ],
                "os.R_OK": [
                    185,
                    114
                ],
                "memstats": [
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    140,
                    141,
                    142,
                    145,
                    146,
                    149,
                    150,
                    151,
                    152,
                    117,
                    127
                ],
                "line": [
                    385,
                    386,
                    440,
                    459,
                    460,
                    177,
                    178,
                    118,
                    119,
                    344,
                    441,
                    189,
                    190
                ],
                "get_file_lines": [
                    177,
                    189,
                    118
                ],
                "data": [
                    318,
                    320,
                    194,
                    126,
                    322,
                    314,
                    119,
                    120,
                    122,
                    315,
                    190,
                    191
                ],
                "line.split": [
                    441,
                    460,
                    190,
                    119
                ],
                "key": [
                    656,
                    657,
                    669,
                    672,
                    313,
                    316,
                    191,
                    322,
                    324,
                    199,
                    210,
                    214,
                    216,
                    218,
                    221,
                    225,
                    229,
                    231,
                    233,
                    235,
                    120,
                    121,
                    123,
                    125,
                    127
                ],
                "self.ORIGINAL_MEMORY_FACTS": [
                    121
                ],
                "val": [
                    194,
                    226,
                    196,
                    230,
                    232,
                    234,
                    204,
                    236,
                    213,
                    122,
                    123,
                    222,
                    126,
                    127
                ],
                "split": [
                    768,
                    781,
                    790,
                    122,
                    126
                ],
                "strip": [
                    194,
                    391,
                    122,
                    126,
                    191
                ],
                "key.lower": [
                    123,
                    127
                ],
                "self.MEMORY_FACTS": [
                    125
                ],
                "memstats.get": [
                    129,
                    131,
                    133,
                    135,
                    140,
                    141,
                    142,
                    145,
                    146,
                    149,
                    150,
                    151,
                    152
                ],
                "i": [
                    162,
                    260,
                    236,
                    241,
                    252,
                    247,
                    220,
                    253,
                    255
                ],
                "vendor_id_occurrence": [
                    163,
                    239,
                    240,
                    241,
                    215
                ],
                "model_name_occurrence": [
                    240,
                    217,
                    164
                ],
                "processor_occurence": [
                    219,
                    165,
                    247
                ],
                "physid": [
                    224,
                    230,
                    166,
                    222,
                    223
                ],
                "coreid": [
                    226,
                    227,
                    228,
                    167,
                    232
                ],
                "sockets": [
                    224,
                    257,
                    258,
                    227,
                    230,
                    262,
                    168,
                    223
                ],
                "cores": [
                    232,
                    169,
                    228,
                    268
                ],
                "xen": [
                    171,
                    179,
                    198,
                    175
                ],
                "xen_paravirt": [
                    251,
                    172,
                    205
                ],
                "os.path.exists": [
                    554,
                    454,
                    174,
                    287
                ],
                "line.strip": [
                    178
                ],
                "append": [
                    596,
                    213,
                    598
                ],
                "startswith": [
                    246
                ],
                "collected_facts.get": [
                    250,
                    246
                ],
                "socket_values": [
                    264,
                    262,
                    263
                ],
                "sockets.values": [
                    262
                ],
                "core_values": [
                    268,
                    269,
                    270
                ],
                "cores.values": [
                    268
                ],
                "FORM_FACTOR": [
                    291,
                    318
                ],
                "DMI_DICT": [
                    329,
                    313,
                    339,
                    302
                ],
                "path": [
                    640,
                    644,
                    313,
                    314,
                    571,
                    636,
                    572
                ],
                "DMI_DICT.items": [
                    313,
                    339
                ],
                "get_file_content": [
                    672,
                    736,
                    709,
                    712,
                    457,
                    714,
                    657,
                    594,
                    689,
                    690,
                    692,
                    694,
                    314,
                    701,
                    703
                ],
                "dmi_bin": [
                    328,
                    340,
                    341
                ],
                "self.module.get_bin_path": [
                    774,
                    328,
                    747,
                    431,
                    784,
                    370,
                    402,
                    659,
                    759,
                    762,
                    604
                ],
                "k": [
                    352,
                    576,
                    354,
                    339,
                    564,
                    350
                ],
                "v": [
                    576,
                    339,
                    564,
                    341
                ],
                "rc": [
                    779,
                    788,
                    407,
                    663,
                    664,
                    408,
                    426,
                    427,
                    435,
                    436,
                    341,
                    342,
                    606,
                    365,
                    366,
                    749,
                    750,
                    374,
                    375,
                    766
                ],
                "out": [
                    417,
                    440,
                    426,
                    427,
                    365,
                    366,
                    435,
                    341,
                    374,
                    407,
                    344,
                    381
                ],
                "err": [
                    663,
                    426,
                    427,
                    779,
                    365,
                    366,
                    749,
                    766,
                    435,
                    788,
                    341,
                    374,
                    407,
                    606
                ],
                "self.module.run_command": [
                    663,
                    426,
                    779,
                    365,
                    749,
                    766,
                    788,
                    341,
                    407,
                    606
                ],
                "thisvalue": [
                    344,
                    346,
                    348,
                    350
                ],
                "join": [
                    344
                ],
                "out.splitlines": [
                    344,
                    381,
                    440
                ],
                "line.startswith": [
                    344
                ],
                "json.dumps": [
                    346
                ],
                "json": [
                    346
                ],
                "args": [
                    424,
                    425,
                    363,
                    364
                ],
                "cmd": [
                    425,
                    426,
                    364,
                    365,
                    406,
                    407
                ],
                "lsblk_path": [
                    370,
                    371,
                    364,
                    374
                ],
                "self._run_lsblk": [
                    374
                ],
                "lsblk_line": [
                    385,
                    381,
                    382
                ],
                "lsblk_line.strip": [
                    385
                ],
                "fields": [
                    448,
                    386,
                    388,
                    391,
                    460,
                    461,
                    463,
                    498,
                    500,
                    502,
                    441,
                    443,
                    447
                ],
                "line.rsplit": [
                    386
                ],
                "device_name": [
                    392,
                    394,
                    391
                ],
                "udevadm_path": [
                    402,
                    403,
                    406
                ],
                "device": [
                    481,
                    518,
                    663,
                    406,
                    502,
                    504,
                    662,
                    508,
                    573,
                    575
                ],
                "m": [
                    417,
                    418,
                    419,
                    705,
                    706,
                    707,
                    679,
                    680,
                    682,
                    720,
                    721,
                    722,
                    724,
                    725,
                    726
                ],
                "re.search": [
                    417,
                    665,
                    724,
                    679
                ],
                "m.group": [
                    419,
                    707,
                    682,
                    722,
                    726
                ],
                "findmnt_path": [
                    432,
                    425,
                    435,
                    431
                ],
                "bind_mounts": [
                    448,
                    512,
                    450,
                    490,
                    430,
                    433,
                    437
                ],
                "self._run_findmnt": [
                    435
                ],
                "self.BIND_MOUNT_RE.match": [
                    447
                ],
                "self.BIND_MOUNT_RE": [
                    447
                ],
                "bind_mounts.add": [
                    448
                ],
                "mtab_file": [
                    457,
                    453,
                    454,
                    455
                ],
                "mtab": [
                    457,
                    459
                ],
                "mtab_entries": [
                    458,
                    492,
                    463,
                    464,
                    496,
                    498
                ],
                "mtab.splitlines": [
                    459
                ],
                "mtab_entries.append": [
                    463
                ],
                "match.group": [
                    469
                ],
                "match": [
                    469
                ],
                "self.OCTAL_ESCAPE_RE.sub": [
                    472
                ],
                "self.OCTAL_ESCAPE_RE": [
                    472
                ],
                "self._replace_octal_escapes_helper": [
                    472
                ],
                "value": [
                    472
                ],
                "mount_size": [
                    483,
                    529,
                    530,
                    531,
                    476
                ],
                "get_mount_size": [
                    476
                ],
                "mount": [
                    512,
                    544,
                    545,
                    517,
                    518,
                    542,
                    525,
                    526,
                    531,
                    532,
                    502,
                    536,
                    537,
                    507,
                    476,
                    540,
                    539,
                    543
                ],
                "uuids.get": [
                    481
                ],
                "self._udevadm_uuid": [
                    481
                ],
                "mounts": [
                    544,
                    539,
                    551,
                    487
                ],
                "self._find_bind_mounts": [
                    490
                ],
                "self._lsblk_uuid": [
                    491
                ],
                "self._mtab_entries": [
                    492
                ],
                "results": [
                    544,
                    545,
                    517,
                    524,
                    525,
                    526,
                    495,
                    531,
                    532,
                    537,
                    539,
                    540,
                    542,
                    543
                ],
                "pool": [
                    496,
                    521,
                    518
                ],
                "ThreadPool": [
                    496
                ],
                "cpu_count": [
                    496
                ],
                "maxtime": [
                    497,
                    519
                ],
                "get": [
                    497
                ],
                "timeout.DEFAULT_GATHER_TIMEOUT": [
                    497
                ],
                "self._replace_octal_escapes": [
                    500
                ],
                "field": [
                    500
                ],
                "fstype": [
                    504,
                    509,
                    502
                ],
                "options": [
                    514,
                    502,
                    510
                ],
                "device.startswith": [
                    504
                ],
                "mount_info": [
                    515,
                    507,
                    517
                ],
                "self.MTAB_BIND_MOUNT_RE.match": [
                    514
                ],
                "self.MTAB_BIND_MOUNT_RE": [
                    514
                ],
                "pool.apply_async": [
                    518
                ],
                "self.get_mount_info": [
                    518
                ],
                "time.time": [
                    542,
                    519
                ],
                "time": [
                    549,
                    542,
                    519
                ],
                "pool.close": [
                    521
                ],
                "res": [
                    526,
                    527,
                    528,
                    529,
                    535
                ],
                "res.ready": [
                    527
                ],
                "res.successful": [
                    528
                ],
                "res.get": [
                    529,
                    535
                ],
                "update": [
                    531
                ],
                "errmsg": [
                    536,
                    537,
                    535
                ],
                "to_text": [
                    535
                ],
                "self.module.warn": [
                    536
                ],
                "mounts.append": [
                    544,
                    539
                ],
                "time.sleep": [
                    549
                ],
                "link_dir": [
                    560,
                    554,
                    558
                ],
                "retval": [
                    576,
                    557,
                    561,
                    564,
                    570,
                    575
                ],
                "collections.defaultdict": [
                    570,
                    557
                ],
                "collections": [
                    570,
                    557
                ],
                "entry": [
                    560,
                    561,
                    558
                ],
                "target": [
                    560,
                    561,
                    574,
                    575
                ],
                "os.path.basename": [
                    560,
                    627,
                    655
                ],
                "os.readlink": [
                    560,
                    636,
                    624
                ],
                "os.path.join": [
                    560,
                    636,
                    624,
                    644
                ],
                "add": [
                    561,
                    575
                ],
                "iteritems": [
                    576,
                    564,
                    653,
                    686
                ],
                "glob.glob": [
                    571
                ],
                "glob": [
                    571
                ],
                "elements": [
                    572,
                    573,
                    574
                ],
                "path.split": [
                    572
                ],
                "self.get_device_links": [
                    584,
                    582,
                    583
                ],
                "self.get_all_device_owners": [
                    585
                ],
                "block_dev_dict": [
                    596,
                    589,
                    598
                ],
                "os.path.isdir": [
                    590
                ],
                "sysdir": [
                    672,
                    644,
                    709,
                    646,
                    678,
                    712,
                    714,
                    683,
                    590,
                    591,
                    655,
                    657,
                    594,
                    720,
                    728,
                    701,
                    703
                ],
                "folder": [
                    646,
                    647,
                    678,
                    679,
                    591,
                    592,
                    594,
                    598
                ],
                "folder.startswith": [
                    592
                ],
                "name": [
                    594,
                    595,
                    596
                ],
                "lspci": [
                    604,
                    605,
                    606
                ],
                "pcidata": [
                    608,
                    721,
                    724,
                    606
                ],
                "block_devs": [
                    632,
                    611
                ],
                "devs_wwn": [
                    674,
                    627,
                    675,
                    615
                ],
                "devs_by_id": [
                    617,
                    621
                ],
                "link_name": [
                    624,
                    627,
                    621,
                    622
                ],
                "link_name.startswith": [
                    622
                ],
                "wwn_link": [
                    624,
                    627
                ],
                "links": [
                    686,
                    629,
                    630,
                    653
                ],
                "self.get_all_device_links": [
                    629
                ],
                "block": [
                    640,
                    654,
                    662,
                    632,
                    636
                ],
                "virtual": [
                    648,
                    633,
                    651
                ],
                "sysfs_no_links": [
                    641,
                    634,
                    645
                ],
                "e": [
                    638,
                    639
                ],
                "sys.exc_info": [
                    638
                ],
                "sys": [
                    638
                ],
                "e.errno": [
                    639
                ],
                "errno.EINVAL": [
                    639
                ],
                "errno": [
                    639
                ],
                "d": [
                    650,
                    651,
                    652,
                    654,
                    657,
                    667,
                    672,
                    675,
                    677,
                    699,
                    701,
                    702,
                    707,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    717,
                    726,
                    728,
                    730
                ],
                "link_type": [
                    686,
                    653,
                    654,
                    687
                ],
                "link_values": [
                    686,
                    653,
                    654,
                    687
                ],
                "link_values.get": [
                    654,
                    687
                ],
                "diskname": [
                    674,
                    675,
                    679,
                    655,
                    730
                ],
                "sg_inq": [
                    659,
                    661,
                    663
                ],
                "drivedata": [
                    665,
                    663
                ],
                "serial": [
                    665,
                    666,
                    667
                ],
                "serial.group": [
                    667
                ],
                "test": [
                    672,
                    669
                ],
                "part": [
                    681,
                    685,
                    687,
                    689,
                    690,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    699
                ],
                "part_sysdir": [
                    683,
                    689,
                    690,
                    692,
                    694,
                    697
                ],
                "bytes_to_human": [
                    715,
                    695
                ],
                "get_partition_uuid": [
                    696
                ],
                "self.get_holders": [
                    728,
                    697
                ],
                "scheduler": [
                    704,
                    705,
                    703
                ],
                "re.match": [
                    720,
                    705
                ],
                "pciid": [
                    722,
                    723
                ],
                "did": [
                    723,
                    724
                ],
                "re.escape": [
                    723
                ],
                "re.MULTILINE": [
                    724
                ],
                "uptime_file_content": [
                    736,
                    737,
                    738
                ],
                "uptime_seconds_string": [
                    738,
                    739
                ],
                "uptime_file_content.split": [
                    738
                ],
                "dm_prefix": [
                    744,
                    746
                ],
                "mapper_device": [
                    752,
                    745,
                    751
                ],
                "dm_device": [
                    745,
                    746,
                    749
                ],
                "dm_device.startswith": [
                    746
                ],
                "dmsetup_cmd": [
                    747,
                    749
                ],
                "mapper_prefix": [
                    748,
                    751
                ],
                "dm_name": [
                    749,
                    751
                ],
                "dm_name.rstrip": [
                    751
                ],
                "os.getuid": [
                    759
                ],
                "lvm_util_options": [
                    760,
                    779,
                    788,
                    766
                ],
                "vgs_path": [
                    762,
                    765,
                    766
                ],
                "vgs": [
                    769,
                    764,
                    796
                ],
                "vg_lines": [
                    766,
                    767
                ],
                "vg_line": [
                    768,
                    767
                ],
                "vg_lines.splitlines": [
                    767
                ],
                "items": [
                    768,
                    769,
                    770,
                    771,
                    772,
                    781,
                    782,
                    790,
                    791,
                    792,
                    793,
                    794
                ],
                "vg_line.strip": [
                    768
                ],
                "lvs_path": [
                    778,
                    779,
                    774
                ],
                "lvs": [
                    777,
                    796,
                    782
                ],
                "lv_lines": [
                    779,
                    780
                ],
                "lv_line": [
                    780,
                    781
                ],
                "lv_lines.splitlines": [
                    780
                ],
                "lv_line.strip": [
                    781
                ],
                "pvs_path": [
                    784,
                    787,
                    788
                ],
                "pvs": [
                    786,
                    796,
                    791
                ],
                "pv_lines": [
                    788,
                    789
                ],
                "pv_line": [
                    789,
                    790
                ],
                "pv_lines.splitlines": [
                    789
                ],
                "pv_line.strip": [
                    790
                ],
                "self._find_mapper_device_name": [
                    791
                ],
                "HardwareCollector": [
                    801
                ],
                "_platform": [
                    802
                ],
                "_fact_class": [
                    803
                ],
                "LinuxHardware": [
                    803
                ],
                "required_facts": [
                    805
                ]
            }
        },
        "/Users/jerry/Documents/GitHub/LPPR/local_envs/repos/ansible_16/test/units/module_utils/facts/hardware/linux_data.py": {
            "buggy_functions": [],
            "snippets": [
                {
                    "snippet_code": "CPU_INFO_TEST_SCENARIOS = [\n    {\n        'architecture': 'armv61',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/armv6-rev7-1cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': ['0', 'ARMv6-compatible processor rev 7 (v6l)'],\n            'processor_cores': 1,\n            'processor_count': 1,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 1},\n    },\n    {\n        'architecture': 'armv71',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/armv7-rev4-4cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': [\n                '0', 'ARMv7 Processor rev 4 (v7l)',\n                '1', 'ARMv7 Processor rev 4 (v7l)',\n                '2', 'ARMv7 Processor rev 4 (v7l)',\n                '3', 'ARMv7 Processor rev 4 (v7l)',\n            ],\n            'processor_cores': 1,\n            'processor_count': 4,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 4},\n    },\n    {\n        'architecture': 'aarch64',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/aarch64-4cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': [\n                '0', 'AArch64 Processor rev 4 (aarch64)',\n                '1', 'AArch64 Processor rev 4 (aarch64)',\n                '2', 'AArch64 Processor rev 4 (aarch64)',\n                '3', 'AArch64 Processor rev 4 (aarch64)',\n            ],\n            'processor_cores': 1,\n            'processor_count': 4,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 4},\n    },\n    {\n        'architecture': 'x86_64',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/x86_64-4cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': [\n                '0', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216',\n                '1', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216',\n                '2', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216',\n                '3', 'AuthenticAMD', 'Dual-Core AMD Opteron(tm) Processor 2216',\n            ],\n            'processor_cores': 2,\n            'processor_count': 2,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 4},\n    },\n    {\n        'architecture': 'x86_64',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/x86_64-8cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': [\n                '0', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n                '1', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n                '2', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n                '3', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n                '4', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n                '5', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n                '6', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n                '7', 'GenuineIntel', 'Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz',\n            ],\n            'processor_cores': 4,\n            'processor_count': 1,\n            'processor_threads_per_core': 2,\n            'processor_vcpus': 8},\n    },\n    {\n        'architecture': 'arm64',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/arm64-4cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': ['0', '1', '2', '3'],\n            'processor_cores': 1,\n            'processor_count': 4,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 4},\n    },\n    {\n        'architecture': 'armv71',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/armv7-rev3-8cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': [\n                '0', 'ARMv7 Processor rev 3 (v7l)',\n                '1', 'ARMv7 Processor rev 3 (v7l)',\n                '2', 'ARMv7 Processor rev 3 (v7l)',\n                '3', 'ARMv7 Processor rev 3 (v7l)',\n                '4', 'ARMv7 Processor rev 3 (v7l)',\n                '5', 'ARMv7 Processor rev 3 (v7l)',\n                '6', 'ARMv7 Processor rev 3 (v7l)',\n                '7', 'ARMv7 Processor rev 3 (v7l)',\n            ],\n            'processor_cores': 1,\n            'processor_count': 8,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 8},\n    },\n    {\n        'architecture': 'x86_64',\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/x86_64-2cpu-cpuinfo')).readlines(),\n        'expected_result': {\n            'processor': [\n                '0', 'GenuineIntel', 'Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz',\n                '1', 'GenuineIntel', 'Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz',\n            ],\n            'processor_cores': 1,\n            'processor_count': 2,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 2},\n    },\n    {\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/ppc64-power7-rhel7-8cpu-cpuinfo')).readlines(),\n        'architecture': 'ppc64',\n        'expected_result': {\n            'processor': [\n                '0', 'POWER7 (architected), altivec supported',\n                '1', 'POWER7 (architected), altivec supported',\n                '2', 'POWER7 (architected), altivec supported',\n                '3', 'POWER7 (architected), altivec supported',\n                '4', 'POWER7 (architected), altivec supported',\n                '5', 'POWER7 (architected), altivec supported',\n                '6', 'POWER7 (architected), altivec supported',\n                '7', 'POWER7 (architected), altivec supported'\n            ],\n            'processor_cores': 1,\n            'processor_count': 16,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 16\n        },\n    },\n    {\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/ppc64le-power8-24cpu-cpuinfo')).readlines(),\n        'architecture': 'ppc64le',\n        'expected_result': {\n            'processor': [\n                '0', 'POWER8 (architected), altivec supported',\n                '1', 'POWER8 (architected), altivec supported',\n                '2', 'POWER8 (architected), altivec supported',\n                '3', 'POWER8 (architected), altivec supported',\n                '4', 'POWER8 (architected), altivec supported',\n                '5', 'POWER8 (architected), altivec supported',\n                '6', 'POWER8 (architected), altivec supported',\n                '7', 'POWER8 (architected), altivec supported',\n                '8', 'POWER8 (architected), altivec supported',\n                '9', 'POWER8 (architected), altivec supported',\n                '10', 'POWER8 (architected), altivec supported',\n                '11', 'POWER8 (architected), altivec supported',\n                '12', 'POWER8 (architected), altivec supported',\n                '13', 'POWER8 (architected), altivec supported',\n                '14', 'POWER8 (architected), altivec supported',\n                '15', 'POWER8 (architected), altivec supported',\n                '16', 'POWER8 (architected), altivec supported',\n                '17', 'POWER8 (architected), altivec supported',\n                '18', 'POWER8 (architected), altivec supported',\n                '19', 'POWER8 (architected), altivec supported',\n                '20', 'POWER8 (architected), altivec supported',\n                '21', 'POWER8 (architected), altivec supported',\n                '22', 'POWER8 (architected), altivec supported',\n                '23', 'POWER8 (architected), altivec supported',\n            ],\n            'processor_cores': 1,\n            'processor_count': 48,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 48\n        },\n    },\n    {\n        'cpuinfo': open(os.path.join(os.path.dirname(__file__), '../fixtures/cpuinfo/sparc-t5-debian-ldom-24vcpu')).readlines(),\n        'architecture': 'sparc64',\n        'expected_result': {\n            'processor': [\n                'UltraSparc T5 (Niagara5)',\n            ],\n            'processor_cores': 1,\n            'processor_count': 24,\n            'processor_threads_per_core': 1,\n            'processor_vcpus': 24\n        },\n    },\n]",
                    "start_line": 366,
                    "end_line": 552
                }
            ],
            "inscope_functions": [],
            "inscope_function_signatures": [],
            "variables_in_file": {
                "__metaclass__": [
                    17
                ],
                "type": [
                    17
                ],
                "LSBLK_OUTPUT": [
                    21
                ],
                "LSBLK_OUTPUT_2": [
                    38
                ],
                "LSBLK_UUIDS": [
                    50
                ],
                "UDEVADM_UUID": [
                    52
                ],
                "UDEVADM_OUTPUT": [
                    54
                ],
                "MTAB": [
                    74
                ],
                "MTAB_ENTRIES": [
                    115
                ],
                "STATVFS_INFO": [
                    323
                ],
                "BIND_MOUNTS": [
                    364
                ],
                "CPU_INFO_TEST_SCENARIOS": [
                    366
                ],
                "readlines": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "open": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os.path.join": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os.path": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os.path.dirname": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "__file__": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ]
            },
            "filtered_variables_in_file": {
                "__metaclass__": [
                    17
                ],
                "LSBLK_OUTPUT": [
                    21
                ],
                "LSBLK_OUTPUT_2": [
                    38
                ],
                "LSBLK_UUIDS": [
                    50
                ],
                "UDEVADM_UUID": [
                    52
                ],
                "UDEVADM_OUTPUT": [
                    54
                ],
                "MTAB": [
                    74
                ],
                "MTAB_ENTRIES": [
                    115
                ],
                "STATVFS_INFO": [
                    323
                ],
                "BIND_MOUNTS": [
                    364
                ],
                "CPU_INFO_TEST_SCENARIOS": [
                    366
                ],
                "readlines": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os.path.join": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os.path": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "os.path.dirname": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ],
                "__file__": [
                    484,
                    453,
                    424,
                    504,
                    394,
                    369,
                    443,
                    472,
                    409,
                    379,
                    540
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/Documents/GitHub/LPPR/local_envs/repos/ansible_16/test/units/module_utils/facts/hardware/test_linux_get_cpu_info.py",
                "test_function": "test_get_cpu_info_missing_arch",
                "test_function_code": "def test_get_cpu_info_missing_arch(mocker):\n    module = mocker.Mock()\n    inst = linux.LinuxHardware(module)\n\n    # ARM and Power will report incorrect processor count if architecture is not available\n    mocker.patch('os.path.exists', return_value=False)\n    mocker.patch('os.access', return_value=True)\n    for test in CPU_INFO_TEST_SCENARIOS:\n        mocker.patch('ansible.module_utils.facts.hardware.linux.get_file_lines', side_effect=[[], test['cpuinfo']])\n        test_result = inst.get_cpu_facts()\n        if test['architecture'].startswith(('armv', 'aarch', 'ppc')):\n            assert test['expected_result'] != test_result\n        else:\n            assert test['expected_result'] == test_result",
                "test_error": "AssertionError: assert {'processor': ['0', 'POWER7 (architected), altivec supported', '1', 'POWER7 (architected), altivec supported', '2', 'POWER7 (architected), altivec supported', ...], 'processor_cores': 1, 'processor_count': 16, 'processor_threads_per_core': 1, ...} != {'processor': ['0', 'POWER7 (architected), altivec supported', '1', 'POWER7 (architected), altivec supported', '2', 'POWER7 (architected), altivec supported', ...], 'processor_cores': 1, 'processor_count': 16, 'processor_threads_per_core': 1, ...}",
                "full_test_error": "mocker = <pytest_mock.plugin.MockerFixture object at 0x10fbf7050>\n\n    def test_get_cpu_info_missing_arch(mocker):\n        module = mocker.Mock()\n        inst = linux.LinuxHardware(module)\n    \n        # ARM and Power will report incorrect processor count if architecture is not available\n        mocker.patch('os.path.exists', return_value=False)\n        mocker.patch('os.access', return_value=True)\n        for test in CPU_INFO_TEST_SCENARIOS:\n            mocker.patch('ansible.module_utils.facts.hardware.linux.get_file_lines', side_effect=[[], test['cpuinfo']])\n            test_result = inst.get_cpu_facts()\n            if test['architecture'].startswith(('armv', 'aarch', 'ppc')):\n>               assert test['expected_result'] != test_result\nE               AssertionError: assert {'processor': ['0', 'POWER7 (architected), altivec supported', '1', 'POWER7 (architected), altivec supported', '2', 'POWER7 (architected), altivec supported', ...], 'processor_cores': 1, 'processor_count': 16, 'processor_threads_per_core': 1, ...} != {'processor': ['0', 'POWER7 (architected), altivec supported', '1', 'POWER7 (architected), altivec supported', '2', 'POWER7 (architected), altivec supported', ...], 'processor_cores': 1, 'processor_count': 16, 'processor_threads_per_core': 1, ...}\n\ntest/units/module_utils/facts/hardware/test_linux_get_cpu_info.py:36: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}