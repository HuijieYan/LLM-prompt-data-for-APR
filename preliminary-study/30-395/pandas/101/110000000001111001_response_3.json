{
    "pandas": [
        {
            "bugID": 101,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 792,
            "file_name": "pandas/core/dtypes/cast.py",
            "replace_code": "def astype_nansafe(arr, dtype, copy=True, skipna=False):\n    import numpy as np\n    if not isinstance(dtype, np.dtype):\n        dtype = np.dtype(dtype)\n    \n    if dtype.kind in 'US':\n        return arr.astype(dtype, copy=copy)\n    \n    elif np.issubdtype(arr.dtype, np.datetime64) and np.issubdtype(dtype, np.integer):\n        return arr.view('i8')\n    \n    elif np.issubdtype(arr.dtype, np.timedelta64) and np.issubdtype(dtype, np.integer):\n        return arr.view('i8')\n    \n    elif np.issubdtype(arr.dtype, np.float) and np.issubdtype(dtype, np.integer):\n        if not np.isfinite(arr).all():\n            raise ValueError(\"Cannot convert non-finite values (NA or inf) to integer\")\n        return arr.astype(dtype, copy=copy)\n    \n    elif np.issubdtype(arr.dtype, np.integer) and np.issubdtype(dtype, np.floating):\n        return arr.astype(dtype, copy=copy)\n    \n    elif np.issubdtype(arr.dtype, np.object_) and (np.issubdtype(dtype, np.datetime64) or np.issubdtype(dtype, np.timedelta64)):\n        return astype_nansafe(arr.astype(np.ndarray), dtype, copy=copy)\n    \n    elif dtype.name in (\"datetime64\", \"timedelta64\"):\n        raise ValueError(f\"The '{dtype.name}' dtype has no unit. Please pass in '{dtype.name}[ns]' instead.\")\n    \n    else:\n        return arr.astype(dtype, copy=copy)"
        }
    ]
}