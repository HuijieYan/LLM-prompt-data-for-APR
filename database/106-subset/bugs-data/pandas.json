{
  "project": "pandas",
  "bugs": [
    {
      "id": 30,
      "buggy_code_blocks": [
        {
          "filename": "",
          "source_code": ""
        }
      ],
      "features": {
        "class_definition": "",
        "variable_definitions": null,
        "error_message": "============================= test session starts =============================\nplatform linux -- Python 3.8.10, pytest-7.4.2, pluggy-1.3.0\nrootdir: /home/huijieyan/Desktop/PyRepair/benchmarks/BugsInPy_Cloned_Repos/pandas:30\nconfigfile: setup.cfg\nplugins: hypothesis-5.15.1, cov-4.1.0, mock-3.11.1, timeout-2.1.0\ntimeout: 60.0s\ntimeout method: signal\ntimeout func_only: False\ncollected 1 item                                                              \n\npandas/tests/io/json/test_pandas.py F                                   [100%]\n\n================================== FAILURES ===================================\n________________ TestPandasContainer.test_readjson_bool_series ________________\n\nself = <pandas.tests.io.json.test_pandas.TestPandasContainer object at 0x7f086e9d7be0>\n\n    def test_readjson_bool_series(self):\n        # GH31464\n>       result = read_json(\"[true, true, false]\", typ=\"series\")\n\npandas/tests/io/json/test_pandas.py:1665: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npandas/util/_decorators.py:212: in wrapper\n    return func(*args, **kwargs)\npandas/util/_decorators.py:311: in wrapper\n    return func(*args, **kwargs)\npandas/io/json/_json.py:608: in read_json\n    result = json_reader.read()\npandas/io/json/_json.py:731: in read\n    obj = self._get_object_parser(self.data)\npandas/io/json/_json.py:758: in _get_object_parser\n    obj = SeriesParser(json, **kwargs).parse()\npandas/io/json/_json.py:863: in parse\n    self._try_convert_types()\npandas/io/json/_json.py:1031: in _try_convert_types\n    obj, result = self._try_convert_data(\npandas/io/json/_json.py:903: in _try_convert_data\n    new_data, result = self._try_convert_to_date(data)\npandas/io/json/_json.py:984: in _try_convert_to_date\n    new_data = to_datetime(new_data, errors=\"raise\", unit=date_unit)\npandas/core/tools/datetimes.py:747: in to_datetime\n    values = convert_listlike(arg._values, format)\npandas/core/tools/datetimes.py:329: in _convert_listlike_datetimes\n    result, tz_parsed = tslib.array_with_unit_to_datetime(\npandas/_libs/tslib.pyx:405: in pandas._libs.tslib.array_with_unit_to_datetime\n    result, tz = array_to_datetime(values.astype(object), errors=errors)\npandas/_libs/tslib.pyx:760: in pandas._libs.tslib.array_to_datetime\n    return array_to_datetime_object(values, errors, dayfirst, yearfirst)\npandas/_libs/tslib.pyx:899: in pandas._libs.tslib.array_to_datetime_object\n    raise\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n>   raise TypeError(f\"{type(val)} is not convertible to datetime\")\nE   TypeError: <class 'bool'> is not convertible to datetime\n\npandas/_libs/tslib.pyx:733: TypeError\n=========================== short test summary info ===========================\nFAILED pandas/tests/io/json/test_pandas.py::TestPandasContainer::test_readjson_bool_series - TypeError: <class 'bool'> is not convertible to datetime\n============================== 1 failed in 0.36s ==============================\n",
        "stack_trace": null,
        "test_code": "",
        "raised_issue_description": ""
      }
    }
  ]
}