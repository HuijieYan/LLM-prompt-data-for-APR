{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 122,
            "start_line": 1386,
            "file_name": "pandas/core/internals/managers.py",
            "replace_code": "def equals(self, other):\n    self_axes, other_axes = self.axes, other.axes\n    if len(self_axes) != len(other_axes) or not all(ax1.equals(ax2) for ax1, ax2 in zip(self_axes, other_axes)):\n        return False\n    \n    for axis in [0, 1]:\n        self_blocks = self.get_axis(axis)\n        other_blocks = other.get_axis(axis)\n        if len(self_blocks) != len(other_blocks):\n            return False\n        self.blocks = sorted(self_blocks, key=lambda block: (block.values._typ, block.mgr_locs))\n        other.blocks = sorted(other_blocks, key=lambda block: (block.values._typ, block.mgr_locs))\n        if not all(block.equals(oblock) for block, oblock in zip(self.blocks, other.blocks)):\n            return False\n    return True",
            "import_list": []
        }
    ]
}