{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 48,
            "start_line": 999,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def _cython_agg_blocks(\n    self, how: str, alt=None, numeric_only: bool = True, min_count: int = -1\n) -> \"Tuple[List[Block], Index]\":\n    data = self._get_data_to_aggregate()\n\n    if numeric_only:\n        data = data.get_numeric_data(copy=False)\n\n    agg_blocks = []\n    new_items = []\n\n    for block in data.blocks:\n        if block.dtype in ('int64', 'float64', 'int32', 'float32'):\n            values = block.values\n            if how == 'mean':\n                result = np.nanmean(values, axis=1, keepdims=True)\n            elif how == 'median':\n                result = np.nanmedian(values, axis=1, keepdims=True)\n            elif how == 'var':\n                result = np.nanvar(values, axis=1, ddof=1, keepdims=True)\n            else:\n                raise ValueError(f\"Unsupported aggregation method: {how}\")\n\n            agg_block = block.make_block(result)\n            agg_blocks.append(agg_block)\n            new_items.append(block.mgr_locs.as_array)\n\n    # rest of the code remains unchanged\n    # ...\n\n    return agg_blocks, agg_items",
            "import_list": []
        }
    ]
}