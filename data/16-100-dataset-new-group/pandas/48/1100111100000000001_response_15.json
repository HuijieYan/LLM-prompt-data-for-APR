{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 48,
            "start_line": 999,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def _cython_agg_blocks(\n    self, how: str, alt=None, numeric_only: bool = True, min_count: int = -1\n) -> \"Tuple[List[Block], Index]\":\n\n    block_mgr = self._get_data_to_aggregate()\n\n    if numeric_only:\n        block_mgr = block_mgr._get_numeric_data()\n\n    blocks = []\n    index_list = []\n    deleted_items = []\n    counter = 0\n\n    for block in block_mgr.blocks:\n        items = block_mgr.items[block.mgr_locs]\n        values = maybe_convert_objects(block.values, try_float=True)\n\n        try:\n            result, new_block = self.grouper.aggregate(values, how, axis=1, min_count=min_count)\n        except (NotImplementedError, DataError, SpecificationError):\n            pass\n            # Handle exceptions if needed\n        else:\n            blocks.append(new_block)\n            index_list.append(items)\n            continue\n\n        # Handle the rest of the logic for split_blocks and indexing\n\n    if not blocks:\n        raise DataError(\"No numeric types to aggregate\")\n\n    result_block = concatenate_join_units(blocks, items=index_list)\n\n    return result_block, block_mgr.items",
            "import_list": [
                "from pandas.core.internals.concat import concatenate_join_units"
            ]
        }
    ]
}