{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 48,
            "start_line": 999,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def _cython_agg_blocks(\n    self, how: str, alt=None, numeric_only: bool = True, min_count: int = -1\n) -> \"Tuple[List[Block], Index]\":\n    data: DataFrame = self._get_data_to_aggregate()\n\n    if numeric_only:\n        data = data.select_dtypes(include=[np.number])\n\n    agg_blocks = []\n    new_items = []\n\n    for block in data.blocks:\n        block_data = block.values\n\n        # check if block contains integer values\n        if isinstance(block_data, IntegerArray):\n            result = block_data.mean() if how == \"mean\" else block_data.median()\n            agg_block = ExtensionBlock(result, slice(0, 1, 1), 1, dtype=float)\n\n            # append the newly aggregated block\n            agg_blocks.append(agg_block)\n            new_items.append(block.mgr_locs)\n\n    if len(agg_blocks) == 0:\n        raise ValueError(\"No numeric types to aggregate\")\n\n    agg_items = Index(data.items, dtype='object')\n    return agg_blocks, agg_items",
            "import_list": [
                "from pandas import DataFrame, Index",
                "from pandas.core.internals import ExtensionBlock",
                "from pandas.core.arrays.integer import IntegerArray",
                "import numpy as np"
            ]
        }
    ]
}