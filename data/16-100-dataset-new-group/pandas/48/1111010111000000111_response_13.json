{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 48,
            "start_line": 999,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def _cython_agg_blocks(\n    self, how: str, alt=None, numeric_only: bool = True, min_count: int = -1\n) -> Tuple[List[Block], pd.Index]:\n    data = self._get_data_to_aggregate()\n\n    if numeric_only:\n        data = data.select_dtypes(include=[np.number])\n\n    agg_blocks = []\n    agg_items = []\n\n    for col, vals in data.iteritems():\n        if vals.dtype == 'Int64':\n            vals = vals.astype('float64')\n\n        if how == \"mean\":\n            result = vals.mean()\n        elif how == \"median\":\n            result = vals.median()\n        elif how == \"var\":\n            result = vals.var(ddof=0)\n\n        # Create a new DataFrame with the aggregated value\n        agg_df = pd.DataFrame({col: result}, index=[0])\n        agg_blocks.append(make_block(agg_df.values, placement=vals.index, klass=Block))\n\n        # Keep track of the columns\n        agg_items.append(col)\n\n    return agg_blocks, agg_items",
            "import_list": [
                "from typing import List, Tuple",
                "import numpy as np",
                "import pandas as pd",
                "from pandas.core.frame import DataFrame"
            ]
        }
    ]
}