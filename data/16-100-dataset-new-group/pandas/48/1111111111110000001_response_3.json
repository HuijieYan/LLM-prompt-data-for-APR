{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 48,
            "start_line": 999,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def test_apply_to_nullable_integer_returns_float():\n    values = {\n        \"a\": [1, 1, 1, 2, 2, 2, 3, 3, 3],\n        \"b\": [1, pd.NA, 2, 1, pd.NA, 2, 1, pd.NA, 2]\n    }\n\n    output_values = 0.5\n    result = [output_values] * 3\n    expected_result = pd.DataFrame({\"b\": result},\n                                   index=pd.Index([1, 2, 3], dtype=object, name=\"a\"))\n\n    df = pd.DataFrame(values, dtype=\"Int64\")\n    groups = df.groupby(\"a\")\n\n    for function in [\"mean\", \"median\", \"var\"]:\n        result = getattr(groups, function)()\n        assert_frame_equal(result, expected_result)\n\n        result = groups.agg(function)\n        assert_frame_equal(result, expected_result)\n\n        result = groups.agg([function])\n        result_cols = [col[1] for col in result.columns]\n        expected_result_cols = [(\"b\", function)]\n        assert result_cols == expected_result_cols",
            "import_list": [
                "from pandas.core.groupby.groupby import GroupBy",
                "from pandas.core.internals import BlockManager",
                "import numpy as np",
                "import pandas as pd",
                "from pandas.testing import assert_frame_equal"
            ]
        }
    ]
}