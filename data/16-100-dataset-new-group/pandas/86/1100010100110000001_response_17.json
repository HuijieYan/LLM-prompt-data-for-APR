{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 86,
            "start_line": 429,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def pivot(data: \"DataFrame\", index=None, columns=None, values=None) -> \"DataFrame\":\n    if values is None:\n        if index is None or columns is None:\n            raise ValueError(\"index and columns must be specified\")\n\t\t\t\n        append = False\n        if index is None:\n            index = data.index\n            append = True\n\t\t\t\n        indexed = data.set_index([index, columns], append=append)\n    else:\n        if index is None or columns is None:\n            raise ValueError(\"index and columns must be specified\")\n\t\t\n        if is_list_like(values) and not isinstance(values, tuple):\n            # Exclude tuple because it is seen as a single column name\n            indexed = data._constructor(\n                data[values].values, index=data[[index, columns]], columns=values\n            )\n        else:\n            indexed = data._constructor_sliced(data[values].values, index=data[[index, columns]])\n\n    return indexed.unstack(columns)",
            "import_list": []
        }
    ]
}