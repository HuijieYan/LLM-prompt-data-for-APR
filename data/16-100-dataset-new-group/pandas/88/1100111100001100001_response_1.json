{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 88,
            "start_line": 25,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def pivot_table(\n    data,\n    values=None,\n    index=None,\n    columns=None,\n    aggfunc=\"mean\",\n    fill_value=None,\n    margins=False,\n    dropna=True,\n    margins_name=\"All\",\n    observed=False,\n) -> \"DataFrame\":\n    if isinstance(aggfunc, list):\n        agg_results = {}\n        for func in aggfunc:\n            grouped = data.groupby(index + columns, observed=observed)\n            agged = grouped.agg(func)\n            if dropna and isinstance(agged, ABCDataFrame) and len(agged.columns):\n                agged = agged.dropna(how=\"all\")\n            agg_results[func.__name__] = agged\n\n        result_table = DataFrame(agg_results)\n        if margins:\n            if dropna:\n                data = data[data.notna().all(axis=1)]\n            result_table = _add_margins(\n                result_table,\n                data,\n                values,\n                rows=index,\n                cols=columns,\n                aggfunc=aggfunc,\n                observed=observed,\n                margins_name=margins_name,\n                fill_value=fill_value,\n            )\n    else:\n        grouped = data.groupby(index + columns, observed=observed)\n        result_table = grouped.agg(aggfunc)\n        if dropna and isinstance(result_table, ABCDataFrame) and len(result_table.columns):\n            result_table = result_table.dropna(how=\"all\")\n        if margins:\n            if dropna:\n                data = data[data.notna().all(axis=1)]\n            result_table = _add_margins(\n                result_table,\n                data,\n                values,\n                rows=index,\n                cols=columns,\n                aggfunc=aggfunc,\n                observed=observed,\n                margins_name=margins_name,\n                fill_value=fill_value,\n            )\n\n    return result_table",
            "import_list": []
        }
    ]
}