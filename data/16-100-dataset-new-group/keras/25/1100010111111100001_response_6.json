{
    "keras": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 25,
            "start_line": 21,
            "file_name": "keras/applications/imagenet_utils.py",
            "replace_code": "def _preprocess_numpy_input(x, data_format, mode):\n    if mode == 'tf':\n        x = x / 127.5 - 1.\n        return x\n    elif mode == 'torch':\n        x = x / 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n        \n        if data_format == 'channels_first':\n            x[0] -= mean[0] * 255 / 0.5\n            x[1] -= mean[1] * 255 / 0.5\n            x[2] -= mean[2] * 255 / 0.5\n            if std is not None:\n                x[0] /= (std[0] * 255 / 0.5)\n                x[1] /= (std[1] * 255 / 0.5)\n                x[2] /= (std[2] * 255 / 0.5)\n        else:\n            x[..., 0] -= mean[0] * 255\n            x[..., 1] -= mean[1] * 255\n            x[..., 2] -= mean[2] * 255\n            if std is not None:\n                x[..., 0] /= (std[0] * 255)\n                x[..., 1] /= (std[1] * 255)\n                x[..., 2] /= (std[2] * 255)\n        return x\n    else:\n        if data_format == 'channels_first':\n            x = x[:, ::-1, ...]  # 'RGB'->'BGR'\n        else:\n            x = x[..., ::-1]  # 'RGB'->'BGR'\n        mean = [103.939, 116.779, 123.68]\n        x -= mean\n        return x",
            "import_list": []
        }
    ]
}