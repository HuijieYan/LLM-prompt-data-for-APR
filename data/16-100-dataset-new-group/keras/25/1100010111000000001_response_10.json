{
    "keras": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 25,
            "start_line": 21,
            "file_name": "keras/applications/imagenet_utils.py",
            "replace_code": "def _preprocess_numpy_input(x, data_format='channels_last', mode='tf'):\n    if mode == 'tf':\n        x = x / 127.5 - 1.\n    elif mode == 'torch':\n        x = x / 255.\n        mean = np.array([0.485, 0.456, 0.406])\n        std = np.array([0.229, 0.224, 0.225])\n        if data_format == 'channels_first':\n            x = x - mean[:, None, None]\n            x = x / std[:, None, None]\n        else:\n            x = x - mean[None, None, :]\n            x = x / std[None, None, :]\n    elif mode == 'caffe':\n        mean = np.array([103.939, 116.779, 123.68])\n        if data_format == 'channels_first':\n            x = x[:, ::-1, ...]\n            x -= mean[:, None, None]\n        else:\n            x = x[..., ::-1]\n            x -= mean[None, None, :]\n    return x",
            "import_list": [
                "import numpy as np"
            ]
        }
    ]
}