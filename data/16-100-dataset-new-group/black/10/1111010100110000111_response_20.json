{
    "black": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 10,
            "start_line": 117,
            "file_name": "blib2to3/pgen2/driver.py",
            "replace_code": "def _partially_consume_prefix(self, prefix, column):\n    lines = []\n    current_line = \"\"\n    current_column = 0\n    wait_for_indent = True  # add a flag to track waiting for an indent\n    for char in prefix:\n        current_line += char\n        if char == ' ':\n            current_column += 1\n        elif char == '\\t':\n            current_column += 4\n        elif char == '\\n':\n            if wait_for_indent:  # check if waiting for an indent\n                wait_for_indent = False  # update the flag\n            else:\n                # already indented, add the line to the result\n                lines.append(current_line)\n                current_line = \"\"\n                current_column = 0\n                wait_for_indent = True  # reset the flag for the next line\n        else:\n            wait_for_indent = False  # update the flag when a non-indent character is encountered\n    res = ''.join(lines)\n    return res, prefix[len(res):]",
            "import_list": []
        }
    ]
}