{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if not isinstance(clocs, (list, tuple)):\n        clocs = [clocs]\n    if not data.columns.is_unique:\n        data = data.copy()\n        data.columns = pd.Index([data.columns.names[i]\n                                 if name in data.columns.names\n                                 else name\n                                 for i, name in enumerate(data.columns)])\n    else:\n        data = data.copy()\n\n    if len(clocs) > 1:\n        # For multiple levels of clocs, this should handle the unstack operation\n        clocs = list(clocs)\n        cidx = data.columns\n        new_names, new_levels = zip(*[(i, cidx.get_level_values(i).unique())\n                                      for i in clocs])\n        result_dict = dict(result.groupby(level=list(clocs)))\n        if isinstance(data.index, pd.MultiIndex):\n            new_index = pd.MultiIndex.from_product(new_levels)\n        else:\n            new_index = pd.Index(np.ravel(new_levels))\n        result = pd.concat([result_dict[k] for k in sorted(result_dict.keys())],\n                           ignore_index=True)\n        result.index = new_index\n        return result.unstack(fill_value=fill_value)",
            "import_list": []
        }
    ]
}