{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    index = data.index\n    clocs = [index._get_level_number(i) for i in clocs]\n  \n    # new_columns, new_levels, and new_codes calculation is corrected\n    rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n    if rlocs:\n        idx_rlocs = [index.get_level_values(i) for i in rlocs]\n        idx_clocs = [index.get_level_values(i) for i in clocs]\n        dummy_index = pd.MultiIndex.from_tuples(\n            zip(*[x.ravel() for x in np.meshgrid(*idx_rlocs, indexing='ij')] + idx_clocs),\n            names=index.names[rlocs] + index.names[clocs]\n        )\n        unstacked = pd.concat({level: data}, axis=1, names=index.names[rlocs]).unstack(level=clocs)\n\n        new_columns = unstacked.columns\n    else:\n        # If there are no rlocs, the index is the same\n        idx_clocs = [index.get_level_values(i) for i in clocs]\n\n        dummy_index = pd.MultiIndex.from_tuples(\n            zip(*idx_clocs), names=index.names[clocs]\n        )\n\n        unstacked = data.unstack(clocs)\n        new_columns = unstacked.columns\n\n    return unstacked, dummy_index, new_columns",
            "import_list": []
        }
    ]
}