{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # Index of the DataFrame\n    index = data.index\n\n    # Selection of columns to unstack\n    clocs = [index._get_level_number(i) for i in clocs]\n    clevels = [index.levels[i] for i in clocs]\n    rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n    if len(rlocs) == 0:\n        # Single level in index. For unstacking, use normal column index\n        df = data.unstack(clocs[0], fill_value=fill_value)\n    else:\n        # Multi-level index\n        level_to_unstack = index._get_level_number(clocs)\n        other_levels = list(set(range(index.nlevels)) - set(level_to_unstack))\n        name_level = [index.names[i] for i in level_to_unstack]\n        data = data.unstack(level_to_unstack, fill_value=fill_value)\n\n        # Create new MultiIndex for the unstacked DataFrame\n        new_index = data.index.reorder_levels(other_levels + name_level)\n        data.index = new_index\n\n        df = data\n\n    return df",
            "import_list": []
        }
    ]
}