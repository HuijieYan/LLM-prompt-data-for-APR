{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, level, fill_value=None):\n    if isinstance(data, Series):\n        return data.unstack(level, fill_value=fill_value)\n        \n    if not data.columns.nlevels > 1:\n        return data.unstack(level, fill_value=fill_value)\n\n    unstacked = data.copy()\n    idx = unstacked.index\n    labels = idx.labels\n    codes = [labels[i] for i in level]\n\n    dummy_index = MultiIndex(\n        levels=idx.levels[level[0]:] + [unique(codes)[0]],\n        codes=idx.labels[level[0]:] + [np.arange(len(codes[0]))],\n        names=idx.names[level[0]:] + ['__placeholder__'],\n        verify_integrity=False\n    )\n\n    dummy = unstacked.copy()\n    dummy.index = dummy_index\n    unstacked = dummy.unstack('__placeholder__', fill_value=fill_value)\n    new_columns = unstacked.columns\n    new_columns._info_axis_name = unstacked.columns[0]._info_axis_name\n    unstacked.columns = new_columns\n    return unstacked",
            "import_list": []
        }
    ]
}