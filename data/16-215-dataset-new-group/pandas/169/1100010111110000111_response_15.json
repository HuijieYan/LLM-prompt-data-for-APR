{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 169,
            "start_line": 8143,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def quantile(self, q=0.5, axis=0, numeric_only=True, interpolation=\"linear\"):\n    \"\"\"\n    Return values at the given quantile over requested axis.\n    ... (rest of the docstring remains the same) ...\n\n    Returns\n    -------\n    Series or DataFrame\n        ... (rest remains the same) ...\n    \"\"\"\n\n    if numeric_only:\n        data = self._get_numeric_data()\n    else:\n        data = self\n\n    axis = self._get_axis_number(axis)\n    transposed = axis == 1\n\n    if transposed:\n        data = data.T\n\n    # Extract the data to be used for quantiles\n    if numeric_only:\n        data = self.select_dtypes(include=['number'])\n\n    # When there is no numeric data\n    if data.empty:\n        return self._constructor()\n\n    result = data._data.quantile(\n        qs=q, axis=1, interpolation=interpolation, transposed=transposed\n    )\n\n    # When the result is 1D, return a Series\n    if result.ndim == 1:\n        result = result.astype('object')  # convert to object type\n        result.name = q\n        result = Series(result)\n    else:\n        result = self._constructor(result.T, columns=q, index=data.columns)\n\n    return result",
            "import_list": []
        }
    ]
}