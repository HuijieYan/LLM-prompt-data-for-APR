{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.3.3": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 169,
            "start_line": 8143,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def quantile(self, q=0.5, axis=0, numeric_only=True, interpolation='linear'):\n    self._check_percentile(q)\n    \n    # Get the numeric data, handling DateTime data separately\n    if numeric_only:\n        data = self._get_numeric_data()\n        date_columns = [col for col in data.columns if np.issubdtype(data[col].dtype, np.datetime64)]\n        data_without_date_cols = data.drop(columns=date_columns)\n    else:\n        data = self\n        data_without_date_cols = data\n        \n    # Prepare data for quantile calculations\n    if axis == 1:\n        data = data.T\n        \n    result = data_without_date_cols._data.quantile(q=q, axis=1, interpolation=interpolation, transposed=False)\n    \n    # If date columns exist, calculate quantile for them as well\n    if len(date_columns) > 0:\n        date_quantiles = {}\n        for col in date_columns:\n            date_quantiles[col] = data[col].quantile(q)\n        date_quantile_series = pd.Series(date_quantiles, name=q)\n        result = result.join(date_quantile_series)\n    \n    if result.ndim == 2:\n        result = self._constructor(result)\n    else:\n        result = self._constructor_sliced(result, name=q)\n\n    if axis == 1:\n        result = result.T\n\n    return result",
            "import_list": []
        }
    ]
}