{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        business_day_offset = self.n // 9  # calculate the number of business days to adjust\n        remaining_business_hours = self.n % 9 * 60  # calculate the remaining business hours to adjust\n\n        # Adjust the other datetime object for business days\n        other += pd.offsets.CustomBusinessDay(n=business_day_offset, weekmask=self.weekmask)\n\n        # Adjust for remaining business hours\n        start_time = pd.Timestamp(other.date()) + pd.Timedelta(hours=15)  # start of business hours\n        end_time = pd.Timestamp(other.date()) + pd.Timedelta(hours=17)  # end of business hours\n\n        while remaining_business_hours > 0:\n            if other.time() < pd.Timestamp(other.date()) + pd.Timedelta(hours=17):\n                remaining_hours = (end_time - other).seconds // 60\n            else:\n                remaining_hours = (start_time + pd.offsets.CustomBusinessDay(n=1,\n                                                          weekmask=self.weekmask) - other).seconds // 60\n            if remaining_hours <= remaining_business_hours:\n                other += pd.Timedelta(minutes=remaining_hours)\n                remaining_business_hours -= remaining_hours\n            else:\n                other += pd.Timedelta(minutes=remaining_business_hours)\n                remaining_business_hours = 0\n\n        return other\n\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": []
        }
    ]
}