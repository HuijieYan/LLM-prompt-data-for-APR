{
    "scrapy": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.3.3": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 6,
            "start_line": 130,
            "file_name": "scrapy/pipelines/images.py",
            "replace_code": "def convert_image(self, image, size=None):\n    if image.format == 'PNG' and image.mode == 'RGBA':\n        image = image.convert('RGB')\n\n    if size:\n        original_size = image.size\n        image.thumbnail(size, Image.ANTIALIAS)\n        if original_size[0] < size[0] or original_size[1] < size[1]:\n            # If the image is smaller than the given size, create a new image with the background color as white\n            background = Image.new('RGB', size, (255, 255, 255))\n            background.paste(image, ((size[0] - original_size[0]) // 2, (size[1] - original_size[1]) // 2))\n            image = background\n\n    buf = BytesIO()\n    image.save(buf, 'JPEG')\n    return image, buf",
            "import_list": []
        }
    ]
}