{
    "1.1.1": "def _dict_arg(self, name, value):\n    command = []\n    if value and isinstance(value, dict):\n        for prop, value in value.items():\n            command += [name, '\"{0}={1}\"'.format(prop, value)]\n    return command\n",
    "1.1.2": null,
    "1.2.1": "luigi/contrib/spark.py",
    "1.2.2": null,
    "1.3.1": "class SparkSubmitTask(luigi.Task)",
    "1.3.2": "Template task for running a Spark job\n\nSupports running jobs on Spark local, standalone, Mesos or Yarn\n\nSee http://spark.apache.org/docs/latest/submitting-applications.html\nfor more information",
    "1.4.1": null,
    "1.4.2": [
        "name(self)"
    ],
    "1.5.1": [
        "    @with_config({'spark': {'spark-submit': ss, 'master': \"yarn-client\", 'hadoop-conf-dir': 'path'}})\n    @patch('luigi.contrib.spark.subprocess.Popen')\n    def test_run(self, proc):\n        setup_run_process(proc)\n        job = TestSparkSubmitTask()\n        job.run()\n\n        self.assertEqual(proc.call_args[0][0],\n                         ['ss-stub', '--master', 'yarn-client', '--deploy-mode', 'client', '--name', 'AppName',\n                          '--class', 'org.test.MyClass', '--jars', 'jars/my.jar', '--py-files', 'file1.py,file2.py',\n                          '--files', 'file1,file2', '--archives', 'archive1,archive2', '--conf', 'Prop=Value',\n                          '--properties-file', 'conf/spark-defaults.conf', '--driver-memory', '4G', '--driver-java-options', '-Xopt',\n                          '--driver-library-path', 'library/path', '--driver-class-path', 'class/path', '--executor-memory', '8G',\n                          '--driver-cores', '8', '--supervise', '--total-executor-cores', '150', '--executor-cores', '10',\n                          '--queue', 'queue', '--num-executors', '2', 'file', 'arg1', 'arg2'])",
        "    @with_config({'spark': {'spark-submit': ss, 'master': 'spark://host:7077', 'conf': 'prop1=val1', 'jars': 'jar1.jar,jar2.jar',\n                            'files': 'file1,file2', 'py-files': 'file1.py,file2.py', 'archives': 'archive1'}})\n    @patch('luigi.contrib.spark.subprocess.Popen')\n    def test_defaults(self, proc):\n        proc.return_value.returncode = 0\n        job = TestDefaultSparkSubmitTask()\n        job.run()\n        self.assertEqual(proc.call_args[0][0],\n                         ['ss-stub', '--master', 'spark://host:7077', '--jars', 'jar1.jar,jar2.jar',\n                          '--py-files', 'file1.py,file2.py', '--files', 'file1,file2', '--archives', 'archive1',\n                          '--conf', 'prop1=val1', 'test.py'])"
    ],
    "1.5.2": [
        "test/contrib/spark_test.py",
        "test/contrib/spark_test.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: Lists differ: ['ss-[240 chars]f', '\"Prop=Value\"', '--properties-file', 'conf[346 chars]rg2'] != ['ss-[240 chars]f', 'Prop=Value', '--properties-file', 'conf/s[344 chars]rg2']\nE       \nE       First differing element 18:\nE       '\"Prop=Value\"'\nE       'Prop=Value'\nE       \nE       Diff is 812 characters long. Set self.maxDiff to None to see it."
        ],
        [
            "E       AssertionError: Lists differ: ['ss-[131 chars] '--archives', 'archive1', '--conf', '\"prop1=val1\"', 'test.py'] != ['ss-[131 chars] '--archives', 'archive1', '--conf', 'prop1=val1', 'test.py']\nE       \nE       First differing element 12:\nE       '\"prop1=val1\"'\nE       'prop1=val1'\nE       \nE         ['ss-stub',\nE          '--master',\nE          'spark://host:7077',\nE          '--jars',\nE          'jar1.jar,jar2.jar',\nE          '--py-files',\nE          'file1.py,file2.py',\nE          '--files',\nE          'file1,file2',\nE          '--archives',\nE          'archive1',\nE          '--conf',\nE       -  '\"prop1=val1\"',\nE       ?   -          -\nE       \nE       +  'prop1=val1',\nE          'test.py']"
        ]
    ],
    "2.1.2": [
        [
            "self = <contrib.spark_test.SparkSubmitTaskTest testMethod=test_run>\nproc = <MagicMock name='Popen' id='140101468021376'>\n\n    @with_config({'spark': {'spark-submit': ss, 'master': \"yarn-client\", 'hadoop-conf-dir': 'path'}})\n    @patch('luigi.contrib.spark.subprocess.Popen')\n    def test_run(self, proc):\n        setup_run_process(proc)\n        job = TestSparkSubmitTask()\n        job.run()\n    \n>       self.assertEqual(proc.call_args[0][0],\n                         ['ss-stub', '--master', 'yarn-client', '--deploy-mode', 'client', '--name', 'AppName',\n                          '--class', 'org.test.MyClass', '--jars', 'jars/my.jar', '--py-files', 'file1.py,file2.py',\n                          '--files', 'file1,file2', '--archives', 'archive1,archive2', '--conf', 'Prop=Value',\n                          '--properties-file', 'conf/spark-defaults.conf', '--driver-memory', '4G', '--driver-java-options', '-Xopt',\n                          '--driver-library-path', 'library/path', '--driver-class-path', 'class/path', '--executor-memory', '8G',\n                          '--driver-cores', '8', '--supervise', '--total-executor-cores', '150', '--executor-cores', '10',\n                          '--queue', 'queue', '--num-executors', '2', 'file', 'arg1', 'arg2'])",
            "\ntest/contrib/spark_test.py:149: AssertionError"
        ],
        [
            "self = <contrib.spark_test.SparkSubmitTaskTest testMethod=test_defaults>\nproc = <MagicMock name='Popen' id='140101467642224'>\n\n    @with_config({'spark': {'spark-submit': ss, 'master': 'spark://host:7077', 'conf': 'prop1=val1', 'jars': 'jar1.jar,jar2.jar',\n                            'files': 'file1,file2', 'py-files': 'file1.py,file2.py', 'archives': 'archive1'}})\n    @patch('luigi.contrib.spark.subprocess.Popen')\n    def test_defaults(self, proc):\n        proc.return_value.returncode = 0\n        job = TestDefaultSparkSubmitTask()\n        job.run()\n>       self.assertEqual(proc.call_args[0][0],\n                         ['ss-stub', '--master', 'spark://host:7077', '--jars', 'jar1.jar,jar2.jar',\n                          '--py-files', 'file1.py,file2.py', '--files', 'file1,file2', '--archives', 'archive1',\n                          '--conf', 'prop1=val1', 'test.py'])",
            "\ntest/contrib/spark_test.py:165: AssertionError"
        ]
    ],
    "2.2.1": [
        [
            {
                "value": {
                    "value": "{'Prop': 'Value'}",
                    "shape": "1",
                    "omitted": false
                },
                "name": {
                    "value": "'--conf'",
                    "shape": "6",
                    "omitted": false
                }
            },
            {
                "command": {
                    "value": "['--conf', '\"Prop=Value\"']",
                    "shape": "2",
                    "omitted": false
                },
                "value": {
                    "value": "'Value'",
                    "shape": "5",
                    "omitted": false
                },
                "prop": {
                    "value": "'Prop'",
                    "shape": "4",
                    "omitted": false
                }
            }
        ],
        [
            {
                "value": {
                    "value": "{'prop1': 'val1'}",
                    "shape": "1",
                    "omitted": false
                },
                "name": {
                    "value": "'--conf'",
                    "shape": "6",
                    "omitted": false
                }
            },
            {
                "command": {
                    "value": "['--conf', '\"prop1=val1\"']",
                    "shape": "2",
                    "omitted": false
                },
                "value": {
                    "value": "'val1'",
                    "shape": "4",
                    "omitted": false
                },
                "prop": {
                    "value": "'prop1'",
                    "shape": "5",
                    "omitted": false
                }
            }
        ]
    ],
    "2.2.2": [
        [
            {
                "value": "dict",
                "name": "str"
            },
            {
                "command": "list",
                "value": "str",
                "prop": "str"
            }
        ],
        [
            {
                "value": "dict",
                "name": "str"
            },
            {
                "command": "list",
                "value": "str",
                "prop": "str"
            }
        ]
    ],
    "2.3.1": [
        [
            {
                "value": {
                    "value": "{'Prop': 'Value'}",
                    "shape": "1",
                    "omitted": false
                },
                "name": {
                    "value": "'--conf'",
                    "shape": "6",
                    "omitted": false
                }
            },
            {
                "command": {
                    "value": "['--conf', 'Prop=Value']",
                    "shape": "2",
                    "omitted": false
                },
                "value": {
                    "value": "'Value'",
                    "shape": "5",
                    "omitted": false
                },
                "prop": {
                    "value": "'Prop'",
                    "shape": "4",
                    "omitted": false
                }
            }
        ],
        [
            {
                "value": {
                    "value": "{'prop1': 'val1'}",
                    "shape": "1",
                    "omitted": false
                },
                "name": {
                    "value": "'--conf'",
                    "shape": "6",
                    "omitted": false
                }
            },
            {
                "command": {
                    "value": "['--conf', 'prop1=val1']",
                    "shape": "2",
                    "omitted": false
                },
                "value": {
                    "value": "'val1'",
                    "shape": "4",
                    "omitted": false
                },
                "prop": {
                    "value": "'prop1'",
                    "shape": "5",
                    "omitted": false
                }
            }
        ]
    ],
    "2.3.2": [
        [
            {
                "value": "dict",
                "name": "str"
            },
            {
                "command": "list",
                "value": "str",
                "prop": "str"
            }
        ],
        [
            {
                "value": "dict",
                "name": "str"
            },
            {
                "command": "list",
                "value": "str",
                "prop": "str"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}