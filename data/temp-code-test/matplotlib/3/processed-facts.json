{
    "1.1.1": "def _recache(self):\n    if self._marker_function is None:\n        return\n    self._path = _empty_path\n    self._transform = IdentityTransform()\n    self._alt_path = None\n    self._alt_transform = None\n    self._snap_threshold = None\n    self._joinstyle = 'round'\n    self._capstyle = 'butt'\n    self._filled = True\n    self._marker_function()\n",
    "1.1.2": null,
    "1.2.1": "lib/matplotlib/markers.py",
    "1.2.2": "from .transforms import IdentityTransform, Affine2D",
    "1.3.1": "class MarkerStyle()",
    "1.3.2": null,
    "1.4.1": null,
    "1.4.2": null,
    "1.5.1": [
        "def test_marker_fillstyle():\n    marker_style = markers.MarkerStyle(marker='o', fillstyle='none')\n    assert marker_style.get_fillstyle() == 'none'\n    assert not marker_style.is_filled()"
    ],
    "1.5.2": [
        "lib/matplotlib/tests/test_marker.py"
    ],
    "2.1.1": [
        [
            "E       assert not True\nE        +  where True = <bound method MarkerStyle.is_filled of <matplotlib.markers.MarkerStyle object at 0x7fe40663e6d0>>()\nE        +    where <bound method MarkerStyle.is_filled of <matplotlib.markers.MarkerStyle object at 0x7fe40663e6d0>> = <matplotlib.markers.MarkerStyle object at 0x7fe40663e6d0>.is_filled"
        ]
    ],
    "2.1.2": [
        [
            "def test_marker_fillstyle():\n        marker_style = markers.MarkerStyle(marker='o', fillstyle='none')\n        assert marker_style.get_fillstyle() == 'none'\n>       assert not marker_style.is_filled()",
            "\nlib/matplotlib/tests/test_marker.py:13: AssertionError"
        ]
    ],
    "2.2.1": [
        [
            {},
            {
                "self._path": {
                    "value": "Path(array([[ 0.        , -1.        ] ... [ 1,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,\n        4,  4,  4,  4,  4,  4,  4,  4, 79], dtype=uint8))",
                    "shape": null,
                    "omitted": true
                },
                "self._snap_threshold": {
                    "value": "inf",
                    "shape": null,
                    "omitted": false
                },
                "self._joinstyle": {
                    "value": "'round'",
                    "shape": "5",
                    "omitted": false
                },
                "self._capstyle": {
                    "value": "'butt'",
                    "shape": "4",
                    "omitted": false
                },
                "self._filled": {
                    "value": "True",
                    "shape": null,
                    "omitted": false
                }
            }
        ]
    ],
    "2.2.2": [
        [
            {},
            {
                "self._path": "Path",
                "self._snap_threshold": "float",
                "self._joinstyle": "str",
                "self._capstyle": "str",
                "self._filled": "bool"
            }
        ]
    ],
    "2.3.1": [
        [
            {
                "self._fillstyle": {
                    "value": "'none'",
                    "shape": "4",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "self._fillstyle": {
                    "value": "'none'",
                    "shape": "4",
                    "omitted": false
                }
            },
            {
                "self._path": {
                    "value": "Path(array([[ 0.        , -1.        ] ... [ 1,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,\n        4,  4,  4,  4,  4,  4,  4,  4, 79], dtype=uint8))",
                    "shape": null,
                    "omitted": true
                },
                "self._snap_threshold": {
                    "value": "inf",
                    "shape": null,
                    "omitted": false
                },
                "self._joinstyle": {
                    "value": "'round'",
                    "shape": "5",
                    "omitted": false
                },
                "self._capstyle": {
                    "value": "'butt'",
                    "shape": "4",
                    "omitted": false
                },
                "self._filled": {
                    "value": "False",
                    "shape": null,
                    "omitted": false
                }
            }
        ]
    ],
    "2.3.2": [
        [
            {
                "self._fillstyle": "str"
            },
            {}
        ],
        [
            {
                "self._fillstyle": "str"
            },
            {
                "self._path": "Path",
                "self._snap_threshold": "float",
                "self._joinstyle": "str",
                "self._capstyle": "str",
                "self._filled": "bool"
            }
        ]
    ],
    "3.1.1": [
        "The markers are not hollow when I use ax.scatter() and set markers.MarkerStyle()'s fillstyle to 'none'. My usage is wrong?\n"
    ],
    "3.1.2": [
        "I want to set markers hollow. So I make a costomed markers.MarkerStyle and set the paramter fillstyle='none'. But I don't get what I want.\n\nCode for reproduction\n\nfrom matplotlib import pyplot as plt\nfrom matplotlib import markers\nimport numpy as np\nxy = np.random.rand(10, 2)\nfig, ax = plt.subplots()\nstyle = markers.MarkerStyle(marker='o', fillstyle='none')\nax.scatter(xy[:, 0], xy[:, 1], marker=style)\nplt.show()\n"
    ]
}