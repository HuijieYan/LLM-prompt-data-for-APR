{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "bugID": 168,
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(\n    obj,\n    key=None,\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    mutated=False,\n    validate=True,\n):\n    if axis == 1 and key is not None:\n        group_axis = obj._get_axis(axis)\n        all_columns = group_axis.names\n        if isinstance(key, (str, list)):\n            if isinstance(key, str):\n                key = [key]\n            keys = [col for col in all_columns if col in key]\n        else:\n            keys = [col for col in all_columns if any(k in col for k in key)]\n\n        groupings = []\n        exclusions = []\n\n        for gpr in keys:\n            obs = observed if is_categorical_dtype(obj[gpr]) else False\n            ping = Grouping(\n                group_axis,\n                obj[gpr],\n                obj=obj,\n                name=gpr,\n                level=None,\n                sort=sort,\n                observed=obs,\n                in_axis=True\n            )\n            groupings.append(ping)\n            exclusions.append(gpr)\n\n        grouper = BaseGrouper(group_axis, groupings, sort=sort, mutated=mutated)\n        return grouper, exclusions, obj\n\n    else:\n        # Handle the original logic for non-column grouping\n        group_axis = obj._get_axis(axis)",
            "import_list": [
                "from pandas.core.groupby.groupby import Grouper",
                "from pandas.core.groupby.groupby import Grouping"
            ]
        }
    ]
}