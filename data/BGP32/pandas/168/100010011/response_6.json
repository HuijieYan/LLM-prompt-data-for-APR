{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 168,
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(\n    obj,\n    key=None,\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    mutated=False,\n    validate=True,\n):\n    \n    group_axis = obj._get_axis(axis)\n    \n    if isinstance(group_axis, MultiIndex):\n        if key is None:\n            key = level\n            level = None\n    \n    # Convert single column name or list of column names to keys\n    if isinstance(key, str):\n        key = [key]\n    \n    if isinstance(key, list):\n        keys = key\n        match_axis_length = len(keys) == len(group_axis)\n    else:\n        keys = [key]\n        match_axis_length = False\n    \n    groupings = []\n    exclusions = []\n    \n    for i, col_name in enumerate(keys):\n        if col_name in group_axis:\n            gpr = obj[col_name]\n            in_axis, name = True, col_name\n            exclusions.append(name)\n\n            if is_categorical_dtype(gpr) and len(gpr) != obj.shape[axis]:\n                raise ValueError(\n                    f\"Length of grouper ({len(gpr)}) and axis ({obj.shape[axis]}) must be the same length.\"\n                )\n\n            ping = Grouping(\n                group_axis, gpr, obj=obj, name=name, level=level, sort=sort, observed=observed, in_axis=in_axis\n            )\n            groupings.append(ping)\n    \n    if len(groupings) == 0:\n        raise ValueError(\"No group keys passed!\")\n    \n    grouper = BaseGrouper(group_axis, groupings, sort=sort, mutated=mutated)\n    \n    return grouper, exclusions, obj",
            "import_list": []
        }
    ]
}