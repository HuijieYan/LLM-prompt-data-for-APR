{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 168,
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(obj, key=None, axis=0, level=None, sort=True, observed=False, mutated=False, validate=True):\n    group_axis = obj._get_axis(axis)\n\n    if isinstance(key, list):\n        keys = key\n        match_axis_length = len(keys) == len(group_axis)\n\n        for k in keys:\n            if k not in obj and k in group_axis:\n                continue\n            elif obj._is_level_reference(k):\n                continue\n            else:\n                raise ValueError(f\"Key {k} not found in object or group axis\")\n\n    else:\n        if level is not None:\n            # Check for level compatibility with the object\n            if isinstance(group_axis, MultiIndex):\n                if is_list_like(level) and len(level) == 1:\n                    level = level[0]\n\n                if key is None and is_scalar(level):\n                    key = group_axis.get_level_values(level)\n                    level = None\n\n            else:\n                if isinstance(level, str):\n                    if obj.index.name != level:\n                        raise ValueError(f\"Level name '{level}' is not the name of the index\")\n                    level = None\n                elif level > 0 or level < -1:\n                    raise ValueError(\"Level must be > 0 or < -1 only for MultiIndex\")\n\n        # Remaining code for handling non-list key cases \n\n    # Code for creating BaseGrouper and Groupings...\n\n    return grouper, exclusions, obj",
            "import_list": []
        }
    ]
}