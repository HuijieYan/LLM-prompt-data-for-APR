{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 168,
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(\n    obj,\n    key=None,\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    mutated=False,\n    validate=True,\n):\n    group_axis = obj._get_axis(axis)\n\n    # Handling grouping based on levels\n    if level is not None:\n        if not isinstance(group_axis, MultiIndex):\n            if is_list_like(level):\n                if len(level) == 1:\n                    level = level[0]\n                else:\n                    raise ValueError(\"Multiple levels only valid with MultiIndex\")\n\n            if isinstance(level, str):\n                if obj.columns.name != level:\n                    raise ValueError(\"Level name {} is not the name of the columns\".format(level))\n            elif not (-len(obj.columns) <= level < len(obj.columns)):\n                raise ValueError(\"Level can only be within the range of column indices\")\n\n            key = group_axis\n\n    # Handling grouping by columns\n    if isinstance(key, str) and axis == 1 and isinstance(obj, DataFrame):\n        # Convert column label to column index for grouping\n        if key not in obj:\n            raise KeyError(\"Column label '{}' not found\".format(key))\n        key = obj.columns.get_loc(key)\n\n    grouper, exclusions, _ = key._get_grouper(obj, validate=False) if isinstance(key, Grouper) else (None, [], obj)\n\n    return grouper, exclusions, obj",
            "import_list": [
                "from pandas.core.groupby.groupby import Grouper",
                "from pandas.core.groupby.grouping import Grouping"
            ]
        }
    ]
}