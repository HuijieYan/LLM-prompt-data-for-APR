{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 168,
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(\n    obj,\n    key=None,\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    mutated=False,\n    validate=True,\n):\n    group_axis = obj._get_axis(axis)\n\n    if level is not None and not isinstance(group_axis, MultiIndex):\n        if is_list_like(level):\n            if len(level) == 1:\n                level = level[0]\n            else:\n                raise ValueError(\"Only one level allowed when not using MultiIndex\")\n\n        if isinstance(level, str):\n            if obj.columns.name != level:\n                raise ValueError(\"level name {} is not the name of the columns\".format(level))\n        elif level != 0:\n            raise ValueError(\"level should be 0 when not using MultiIndex\")\n\n        key = level\n        level = None\n\n    if isinstance(key, list):\n        keys = key\n    else:\n        keys = [key]\n\n    for key in keys:\n        if key in obj.columns:\n            group_axis = obj.columns\n            key_name = key\n        elif key in obj.index.names:\n            group_axis = obj.index\n            key_name = key\n        else:\n            raise KeyError(key)\n\n        gpr = obj[key_name]\n\n        if is_categorical_dtype(gpr) and len(gpr) != obj.shape[axis]:\n            raise ValueError(\n                \"Length of grouper ({}) and axis ({}) must be the same length\".format(\n                    len(gpr), obj.shape[axis]\n                )\n            )\n\n        ping = Grouping(\n            group_axis,\n            gpr,\n            obj=obj,\n            name=key_name,\n            level=None,\n            sort=sort,\n            observed=observed,\n            in_axis=True,\n        )\n\n    grouper = BaseGrouper(group_axis, [ping], sort=sort, mutated=mutated)\n\n    return grouper, [key_name], obj",
            "import_list": []
        }
    ]
}