{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 48,
            "start_line": 999,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def _cython_agg_blocks(self, how: str, alt=None, numeric_only: bool = True, min_count: int = -1) -> \"Tuple[List[Block], Index]\":\n    data = self._get_data_to_aggregate(numeric_only=numeric_only)\n\n    agg_blocks: List[Block] = []\n    new_items = []\n    deleted_items = []\n    \n    for block in data.blocks:\n        result = self.grouper.aggregate(block.values, how, axis=1, min_count=min_count)\n        if result is not None:\n            result, _ = result\n            if is_float_dtype(result.dtype):\n                result = maybe_numeric_to_object(result, dtype='Int64')\n                result = maybe_convert_objects(result, copy=True)\n                \n            agg_block = block.make_block(result)\n            new_items.append(block.mgr_locs.as_array)\n            agg_blocks.append(agg_block)\n    \n    if not (agg_blocks):\n        raise DataError(\"No numeric types to aggregate\")\n    \n    # reset the locs in the blocks to correspond to our\n    # current ordering\n    idx_order = np.concatenate(new_items)\n    agg_items = data.items.take(np.sort(idx_order))\n\n    offset = 0\n    for blk in agg_blocks:\n        loc = len(blk.mgr_locs)\n        blk.set_ref_locs(indexer=idx_order[offset : offset + loc])\n        offset += loc\n\n    return agg_blocks, agg_items",
            "import_list": [
                "from collections.abc import Sequence",
                "from pandas.core.dtypes.cast import maybe_convert_objects, maybe_numeric_to_object, maybe_downcast_to_dtype",
                "from pandas.core.dtypes.common import is_float_dtype"
            ]
        }
    ]
}