{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        n = self.n\n\n        if n >= 0:\n            dt = CustomBusinessHour(start='00:00').apply(other)\n            close = self._next_opening_time(dt)\n            cnt = (close - other).seconds // 3600\n\n            if close.date() in self.holidays:\n                cnt += 1\n\n            final = CustomBusinessHour(start=self.start[0].isoformat(), finish=self.end[0].isoformat()).apply(other) + timedelta(hours=cnt)\n            return final\n\n        elif n < 0:\n            dt = CustomBusinessHour(start='00:00').apply(other)\n            prev = CustomBusinessHour(start=self.start[0].isoformat(), finish=self.end[0].isoformat()).apply(dt) + timedelta(hours=-1)\n            cnt = (other - prev).seconds // 3600\n\n            if prev.date() in self.holidays:\n                cnt += 1\n\n            final = CustomBusinessHour(start=self.start[0].isoformat(), finish=self.end[0].isoformat()).apply(dt) - timedelta(hours=cnt)\n            return final\n\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": []
        }
    ]
}