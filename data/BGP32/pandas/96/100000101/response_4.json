{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        other = datetime(\n            other.year,\n            other.month,\n            other.day,\n            other.hour,\n            other.minute,\n            other.second,\n            other.microsecond\n        )\n        n = self.n\n\n        if n >= 0:\n            if other.time() >= self.end[0] or not self._is_on_offset(other):\n                other = self._next_opening_time(other)\n        else:\n            if other.time() == self.start[0]:\n                other -= timedelta(seconds=1)\n            if not self._is_on_offset(other):\n                other = self._next_opening_time(other)\n                other = self._get_closing_time(other)\n\n        businesshours = (self.end[0].hour - self.start[0].hour) * 3600\n\n        bd, r = divmod(abs(n * 60), businesshours // 60)\n        if n < 0:\n            bd, r = -bd, -r\n\n        if bd != 0:\n            other_date = datetime(other.year, other.month, other.day)\n            if not self.next_bday.is_on_offset(other_date):\n                prev_open = self._prev_opening_time(other)\n                remain = other - datetime(other.year, other.month, other.day, prev_open.hour, prev_open.minute, prev_open.second)\n                other = prev_open + BaseOffset(n=bd) + remain\n            else:\n                other += BaseOffset(n=bd)\n\n        while r != 0:\n            if n >= 0:\n                bhour = self._get_closing_time(self._prev_opening_time(other)) - other\n            else:\n                bhour = self._next_opening_time(other) - other\n            if r < bhour.seconds / 60:\n                other += timedelta(minutes=r)\n                break\n            else:\n                r -= bhour.seconds / 60\n                if n >= 0:\n                    other = self._next_opening_time(other + bhour)\n                else:\n                    other = self._get_closing_time(self._next_opening_time(other + bhour - timedelta(seconds=1)))\n\n        return other\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": [
                "from pandas.tseries.offsets import BaseOffset",
                "from datetime import datetime, timedelta"
            ]
        }
    ]
}