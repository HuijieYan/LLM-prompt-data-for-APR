{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n        if isinstance(other, datetime):\n            n = self.n\n            other = datetime(other.year, other.month, other.day, other.hour, other.minute, other.second, other.microsecond)\n            \n            bd, r = divmod(abs(n * 60), 120)  # Assuming 120 minutes for business hours in a day\n            if n < 0:\n                bd, r = -bd, -r\n\n            if bd != 0:\n                if bd > 0:\n                    business_day = timedelta(days=1)\n                else:\n                    business_day = timedelta(days=-1)\n                for _ in range(abs(bd)):\n                    while not self.next_bday.is_on_offset(other):\n                        other += business_day\n\n            if r != 0:\n                if n > 0:\n                    while r > 0:\n                        if other.time() == self._get_closing_time(self.start[0]):\n                            other = self._next_opening_time(other)\n                        if r >= 60:\n                            other += timedelta(hours=1)\n                            r -= 60\n                        else:\n                            other += timedelta(minutes=r)\n                            r = 0\n                else:\n                    while r < 0:\n                        if other.time() == self._get_closing_time(self.start[0]):\n                            other = self._prev_opening_time(other)\n                        if r <= -60:\n                            other -= timedelta(hours=1)\n                            r += 60\n                        else:\n                            other -= timedelta(minutes=-r)\n                            r = 0\n                    \n            return other\n        else:\n            raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": [
                "from pandas.tseries.offsets import ApplyTypeError",
                "from datetime import datetime, timedelta"
            ]
        }
    ]
}