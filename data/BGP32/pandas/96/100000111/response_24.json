{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 1,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        n = self.n\n\n        businesshours = 0\n        for st, en in zip(self.start, self.end):\n            businesshours += self._get_business_hours_by_sec(st, en)\n\n        bd, r = divmod(abs(n) * 60, businesshours // 60)\n        if n < 0:\n            bd, r = -bd, -r\n\n        dt = other.replace(hour=0, minute=0, second=0, microsecond=0)\n\n        if n >= 0:\n            if self._is_on_offset(other):\n                dt += timedelta(days=1)\n            while bd != 0:\n                if not self._is_on_offset(dt):\n                    dt += timedelta(days=1)\n                else:\n                    bd -= 1\n            while self._get_business_hours_by_sec(self.start[0], dt.time()) < r * 60:\n                dt += timedelta(seconds=60)\n        else:\n            if self._is_on_offset(other):\n                dt -= timedelta(days=1)\n            while bd != 0:\n                if not self._is_on_offset(dt):\n                    dt -= timedelta(days=1)\n                else:\n                    bd += 1\n            while self._get_business_hours_by_sec(dt.time(), self.end[0]) < r * 60:\n                dt -= timedelta(seconds=60)\n\n        return dt.replace(hour=other.hour, minute=other.minute, second=other.second, microsecond=other.microsecond)\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": [
                "from pandas._libs.tslibs.offsets import ApplyTypeError, BusinessDay"
            ]
        }
    ]
}