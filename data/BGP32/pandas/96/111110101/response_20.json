{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):        \n        n = self.n\n        start = self.start[0]\n        end = self.end[0]\n\n        if n >= 0:\n            if other.time() > end or other.time() < start:\n                next_opening_time = self._next_opening_time(other)\n                if next_opening_time.time() == start:\n                    other = next_opening_time\n                else:\n                    other = self._next_opening_time(next_opening_time)\n        else:\n            if other.time() == start:\n                other = other - timedelta(hours=1)\n            else:\n                other = self._next_opening_time(other)\n                other = self._get_closing_time(other)\n\n        diff_seconds = abs(n * 60 * 60)\n        bd = diff_seconds // (end.hour - start.hour)\n        r = diff_seconds % (end.hour - start.hour)\n\n        if n < 0:\n            bd, r = -bd, -r\n\n        if bd != 0:\n            skip_bd = CustomBusinessHour(n=bd)\n            other = other + skip_bd\n        \n        other += timedelta(minutes=r)\n\n        return other\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": [
                "from pandas.tseries.offsets import ApplyTypeError, CustomBusinessHour",
                "from datetime import datetime, timedelta"
            ]
        }
    ]
}