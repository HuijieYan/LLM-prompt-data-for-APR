{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        if not self.on_offset(other):\n            other = self._next_opening_time(other)\n            \n        total_hours_in_day = sum(self._get_business_hours_by_sec(start, end) for start, end in zip(self.start, self.end))\n\n        n = self.n\n        total_hours = abs(n) * 60\n        bd, r = divmod(total_hours, total_hours_in_day // 60)\n        r_minutes = timedelta(minutes=abs(r))\n\n        if n < 0:\n            bd, r_minutes = -bd, -r_minutes\n\n        business_day_offset = BusinessDay(n=bd)\n        other += business_day_offset\n        while r_minutes:\n            current_end = self._get_closing_time(self._prev_opening_time(other)) if n >= 0 else self._next_opening_time(other)\n            bhour = current_end - other if n >= 0 else other - current_end + timedelta(seconds=1)\n            if r_minutes >= bhour:\n                other = current_end\n                r_minutes -= bhour\n                if n >= 0:\n                    other = self._next_opening_time(other)\n                else:\n                    other = self._get_closing_time(other)\n            else:\n                other += r_minutes\n                r_minutes = timedelta(0)\n        \n        return other\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": []
        }
    ]
}