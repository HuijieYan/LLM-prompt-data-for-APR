{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        if not isinstance(other, pd.Timestamp):\n            other = pd.Timestamp(other)\n\n        n = self.n\n\n        # adjust other to remove timezone\n        other = other.tz_localize(None)\n        \n        if n >= 0:\n            while not self.on_offset(other):\n                other = self._next_opening_time(other)\n        else:\n            while not self.on_offset(other):\n                other = self._prev_opening_time(other)\n\n        # adjust business days\n        if n != 0:\n            skips = pd.offsets.CustomBusinessDay(n=n).apply(other)\n            other = other.replace(hour=skips.hour, minute=skips.minute, second=skips.second, microsecond=skips.microsecond)\n\n        # adjust for business hours\n        offset = timedelta(minutes=abs(n) * 60)\n        if n < 0:\n            offset = -offset\n        \n        while offset.total_seconds() != 0:\n            if n >= 0:\n                bhour = self._next_opening_time(other) - other\n            else:\n                bhour = other - self._prev_opening_time(other)\n                \n            if abs(bhour.total_seconds()) <= abs(offset.total_seconds()):\n                other += bhour\n                offset -= bhour\n            else:\n                other += offset\n                offset = timedelta(0)\n\n        return pd.Timestamp(other)\n    raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": []
        }
    ]
}