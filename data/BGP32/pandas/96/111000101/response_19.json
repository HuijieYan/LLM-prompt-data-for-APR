{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.2.1": 1,
                "1.4.2": 1,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, pd.Timestamp):\n        n = self.n\n        \n        # Calculate business hours between start and end times\n        businesshours = (self.end.hour - self.start.hour) * 60\n        \n        # Adjust based on business days\n        bd, r = divmod(abs(n), businesshours // 60)\n        if n < 0:\n            bd, r = -bd, -r\n        \n        adjusted_dt = other.replace(hour=self.start.hour, minute=self.start.minute, second=0, microsecond=0)\n        \n        if n >= 0:\n            while bd > 0:\n                adjusted_dt += pd.DateOffset(hours=24)\n                if self.next_bday.is_on_offset(adjusted_dt.to_pydatetime()):\n                    bd -= 1\n        \n        while r != 0:\n            remaining = businesshours - (adjusted_dt.hour - self.start.hour) * 60\n            if n >= 0:\n                if r <= remaining:\n                    adjusted_dt += pd.DateOffset(minutes=r)\n                    r = 0\n                else:\n                    adjusted_dt += pd.DateOffset(hours=(remaining // 60))\n                    r -= remaining\n            else:\n                if r <= remaining:\n                    adjusted_dt -= pd.DateOffset(minutes=r)\n                    r = 0\n                else:\n                    adjusted_dt -= pd.DateOffset(hours=(remaining // 60))\n                    r += remaining\n        \n        return adjusted_dt\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": [
                "from pandas.tseries.offsets import CustomBusinessHour"
            ]
        }
    ]
}