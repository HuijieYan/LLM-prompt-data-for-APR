{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 88,
            "start_line": 25,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def pivot_table(\n    data,\n    values=None,\n    index=None,\n    columns=None,\n    aggfunc=\"mean\",\n    fill_value=None,\n    margins=False,\n    dropna=True,\n    margins_name=\"All\",\n    observed=False,\n) -> \"DataFrame\":\n    # Convert index and columns to list\n    index = _convert_by(index)\n    columns = _convert_by(columns)\n\n    # Check if aggfunc is a list\n    if isinstance(aggfunc, list):\n        pieces: List[DataFrame] = []\n        keys = []\n        for func in aggfunc:\n            agged = data.groupby(keys, observed=observed).agg(func)\n            pieces.append(agged)\n            keys.append(getattr(func, \"__name__\", func))\n\n        table = concat(pieces, keys=keys, axis=1)\n    else:\n        keys = index + columns\n        grouped = data.groupby(keys, observed=observed)\n        table = grouped.agg(aggfunc)\n        \n    # Drop NaN values if dropna is True and the columns contain integer values\n    if dropna and table.is_integer().any().any():\n        table = table.dropna()\n\n    # Handle MultiIndex columns correctly\n    if len(columns) > 1:\n        table.columns = MultiIndex.from_tuples(table.columns, names=columns)\n\n    # Handle the case when index is empty but columns are not\n    if not index and columns:\n        table = table.T\n\n    return table",
            "import_list": [
                "from pandas.core.dtypes.common import is_list_like",
                "from pandas import Grouper"
            ]
        }
    ]
}