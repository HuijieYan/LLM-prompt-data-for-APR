{
    "pandas:21": {
        "github_issue_title": [
            "API: Series[index_with_no_matches] vs Series[list_with_no_matches]\n"
        ],
        "github_issue_description": [
            "We treat list indexers differently from array-like indexers:\n\nser = pd.Series([\"A\", \"B\"])\nkey = pd.Series([\"C\"])\n\n>>> ser[key]\nC    NaN\ndtype: object\n\n>>> ser[pd.Index(key)]\nC    NaN\ndtype: object\n\n>>> ser[np.array(key)]\nC    NaN\ndtype: object\n\n>>> ser[list(key)]\nTraceback (most recent call last):\n[...]\n  File \"/Users/bmendel/Desktop/pd/pandas/pandas/core/indexing.py\", line 1312, in _validate_read_indexer\n    raise KeyError(f\"None of [{key}] are in the [{axis_name}]\")\nKeyError: \"None of [Index(['C'], dtype='object')] are in the [index]\"\nAlso inconsistent because ser.loc[key] raises for all 4 cases.\n\nIs there a compelling reason for this? I tried making all of these behave like the list case and only one test broke (that test being the example above). The test was added in #5880.\n"
        ]
    }
}