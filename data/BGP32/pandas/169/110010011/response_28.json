{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 0,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0,
                "8": 1,
                "9": 1
            },
            "bugID": 169,
            "start_line": 8143,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def quantile(self, q=0.5, axis=0, numeric_only=True, interpolation=\"linear\"):\n    self._check_percentile(q)\n    \n    data_numeric = self._get_numeric_data() if numeric_only else self\n    data_datetime = self.select_dtypes(include=[np.datetime64, np.timedelta64]) if not numeric_only else None\n\n    axis_num = self._get_axis_number(axis)\n    is_transposed = axis_num == 1\n\n    result_numeric = None\n\n    if data_numeric is not None and not data_numeric.empty:\n        data = data_numeric.T if is_transposed else data_numeric\n        result_numeric = data._data.quantile(\n            qs=q, axis=1, interpolation=interpolation, transposed=is_transposed\n        )\n\n        if result_numeric.ndim == 2:\n            result_numeric = self._constructor(result_numeric)\n        else:\n            result_numeric = self._constructor_sliced(result_numeric, name=q)\n\n        if is_transposed:\n            result_numeric = result_numeric.T\n\n    if data_datetime is not None and not data_datetime.empty:\n        raise NotImplementedError(\"Quantile calculation not implemented for datetime data.\")\n\n    return result_numeric",
            "import_list": []
        }
    ]
}