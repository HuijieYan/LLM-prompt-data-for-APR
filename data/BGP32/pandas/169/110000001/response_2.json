{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 0,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 169,
            "start_line": 8143,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def quantile(self, q=0.5, axis=0, numeric_only=True, interpolation=\"linear\"):\n    \"\"\"\n    Return values at the given quantile over requested axis.\n\n    Parameters\n    ----------\n    q : float or array-like, default 0.5 (50% quantile)\n        Value between 0 <= q <= 1, the quantile(s) to compute.\n    axis : {0, 1, 'index', 'columns'} (default 0)\n        Specifies the axis along which the quantiles are computed.\n    numeric_only : bool, default True\n        If False, the quantile of datetime and timedelta data will be\n        computed as well.\n    interpolation : {'linear', 'lower', 'higher', 'midpoint', 'nearest'}\n        This optional parameter specifies the interpolation method to use.\n\n    Returns\n    -------\n    Series or DataFrame\n\n    See Also\n    --------\n    core.window.Rolling.quantile: Rolling quantile.\n    numpy.percentile: Numpy function to compute the percentile.\n    \"\"\"\n    self._check_percentile(q)\n\n    data = self._get_numeric_data() if numeric_only else self\n    axis = self._get_axis_number(axis)\n\n    result = data._data.quantile(qs=q, axis=axis, interpolation=interpolation)\n\n    if result.ndim == 2:\n        result = self._constructor(result)\n    else:\n        result = self._constructor_sliced(result, name=q)\n\n    return result",
            "import_list": []
        }
    ]
}