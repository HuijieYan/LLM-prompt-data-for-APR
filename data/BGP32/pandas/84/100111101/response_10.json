{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    index = data.index\n\n    clocs = [(index.get_level_number(i) if isinstance(i, tuple) else i) for i in clocs]\n\n    rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n    if isinstance(data, Series):\n        unstacked = data.unstack(level=clocs, fill_value=fill_value)\n        unstacked.index.names = data.index.names[:len(rlocs)] + [\"__placeholder__\"]\n    else:\n        unstacked = data.unstack(clocs, fill_value=fill_value)\n        unnested_levels = [lvl for lvl in unstacked.columns.levels if not isinstance(lvl, tuple)]\n        unnested_codes = [code for code in unstacked.columns.codes if not isinstance(code, tuple)]\n        new_columns = MultiIndex(\n            levels=[unnested_levels[0]] + unnested_levels[clocs[0]:],\n            codes=[unnested_codes[0]] + unnested_codes[clocs[0]:],\n            names=[data.columns.name] + [data.columns.names[i] for i in clocs],\n        )\n        unstacked.columns = new_columns\n\n    return unstacked",
            "import_list": []
        }
    ]
}