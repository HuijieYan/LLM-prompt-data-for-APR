{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    index = data.index\n\n    if isinstance(clocs, tuple) and all(isinstance(loc, tuple) for loc in clocs):\n        cloc_numbers = [index._get_level_number(loc) for loc in clocs]\n    else:\n        cloc_numbers = [index._get_level_number(clocs)]\n\n    rlocs = [i for i in range(index.nlevels) if i not in cloc_numbers]\n\n    if isinstance(data, Series):\n        dummy = data.copy()\n        if isinstance(clocs, tuple) and all(isinstance(loc, tuple) for loc in clocs):\n            unstacked = dummy.unstack(list(clocs), fill_value=fill_value)\n        else:\n            unstacked = dummy.unstack(clocs, fill_value=fill_value)\n    else:\n        dummy = data.copy()\n\n        dummy_index = MultiIndex.from_arrays(\n            [index.get_level_values(rloc) for rloc in rlocs] + [index.get_level_values(cloc) for cloc in cloc_numbers],\n            names=[index.names[rloc] for rloc in rlocs] + [index.names[cloc] for cloc in cloc_numbers],\n        )\n\n        dummy.index = dummy_index\n\n        unstacked = dummy.unstack(list(clocs), fill_value=fill_value)\n\n    return unstacked",
            "import_list": []
        }
    ]
}