{
    "pandas": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 1,
                "1.5.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # Extract index information\n    index = data.index\n    nlevels = index.nlevels\n\n    clocs_levels = [cloc if isinstance(cloc, tuple) else (cloc,) for cloc in clocs]\n\n    clocs_indices = [index.get_loc(cloc) for cloc in clocs_levels]\n\n    clocs = [index._get_level_number(loc) for loc in clocs_indices]\n\n    rlocs = [i for i in range(nlevels) if i not in clocs]\n\n    # Process single-level index\n    if nlevels == 1:\n        clevels, ccodes = [index.get_level_values(i) for i in clocs], [index.codes[i] for i in clocs]\n        rlevels, rcodes = [], []\n    else:\n        # Process multi-level index\n        clevels, ccodes = zip(*[(index.levels[i], index.codes[i]) for i in clocs])\n        rlevels, rcodes = zip(*[(index.levels[i], index.codes[i]) for i in rlocs])\n\n    shape = [len(x) for x in clevels]\n\n    # Rest of the function remains the same as before\n    # ...\n\n    return unstacked",
            "import_list": []
        }
    ]
}