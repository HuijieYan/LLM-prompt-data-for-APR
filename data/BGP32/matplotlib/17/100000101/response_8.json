{
    "matplotlib": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 1,
                "2.3.2": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1,
                "8": 0,
                "9": 1
            },
            "bugID": 17,
            "start_line": 2758,
            "file_name": "lib/matplotlib/transforms.py",
            "replace_code": "def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n    if not np.isfinite(vmin) or not np.isfinite(vmax) or (vmin == 0 and vmax == 0) or (abs(vmin) < tiny and abs(vmax) < tiny):\n        return -expander, expander\n\n    swapped = False\n    if increasing and vmin > vmax:\n        vmin, vmax = vmax, vmin\n        swapped = True\n\n    maxabsvalue = max(abs(vmin), abs(vmax))\n    if maxabsvalue < tiny:\n        return -expander, expander\n    elif vmax - vmin <= maxabsvalue * tiny:\n        vmin -= expander * maxabsvalue\n        vmax += expander * maxabsvalue\n\n    if swapped:\n        vmin, vmax = vmax, vmin\n    \n    return vmin, vmax",
            "import_list": []
        }
    ]
}