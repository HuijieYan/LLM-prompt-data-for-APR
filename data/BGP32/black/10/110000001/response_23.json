{
    "black": [
        {
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 1,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.2.1": 1,
                "1.4.2": 0,
                "1.2.2": 0,
                "1.5.1": 0,
                "1.5.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.2.1": 0,
                "2.2.2": 0,
                "2.3.1": 0,
                "2.3.2": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0,
                "8": 0,
                "9": 1
            },
            "bugID": 10,
            "start_line": 117,
            "file_name": "blib2to3/pgen2/driver.py",
            "replace_code": "def _partially_consume_prefix(self, prefix, column):\n    lines = []\n    current_line = \"\"\n    current_column = 0\n\n    for char in prefix:\n        current_line += char\n        current_column += 1 if char == ' ' else 4 if char == '\\t' else 0\n\n        if char == '\\n':\n            if current_line.strip() and current_column <= column:\n                # Include the current line in the consumed part\n                lines.append(current_line)\n                current_line = \"\"\n                current_column = 0\n            else:\n                break\n\n    consumed_part = ''.join(lines)\n    remaining_part = prefix[len(consumed_part):]\n\n    return consumed_part, remaining_part",
            "import_list": []
        }
    ]
}